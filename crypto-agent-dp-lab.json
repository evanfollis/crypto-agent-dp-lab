{
  ".pre-commit-config.yaml": "repos:\n  - repo: https://github.com/psf/black\n    rev: 24.3.0\n    hooks:\n      - id: black\n        language_version: python3.11\n        files: ^src/.*\\.py$\n\n  - repo: https://github.com/pycqa/isort\n    rev: 5.13.2\n    hooks:\n      - id: isort\n        language_version: python3.11\n        files: ^src/.*\\.py$\n        args: [\"--profile\", \"black\"]\n\n  - repo: https://github.com/pycqa/flake8\n    rev: 7.0.0\n    hooks:\n      - id: flake8\n        language_version: python3.11\n        files: ^src/.*\\.py$\n        args: [\"--max-line-length=88\", \"--extend-ignore=E203,W503\"]\n\n  - repo: local\n    hooks:\n      - id: case-collision-lint\n        name: Check for case-sensitive filename collisions\n        entry: python3 -c \"import os, sys; files = [f for f in sys.argv[1:] if os.path.isfile(f)]; lower_files = [f.lower() for f in files]; duplicates = [f for f in files if lower_files.count(f.lower()) > 1]; sys.exit(1 if duplicates else 0)\"\n        language: system\n        files: ^src/.*\n      - id: format-check\n        name: Run format checks\n        entry: ./scripts/format_check.sh\n        language: system\n        pass_filenames: false\n        files: ^src/.*\\.py$",
  "crypto-agent-dp-lab.json": "{\n  \".pre-commit-config.yaml\": \"repos:\\n  - repo: https://github.com/psf/black\\n    rev: 24.3.0\\n    hooks:\\n      - id: black\\n        language_version: python3.11\\n        files: ^src/.*\\\\.py$\\n\\n  - repo: https://github.com/pycqa/isort\\n    rev: 5.13.2\\n    hooks:\\n      - id: isort\\n        language_version: python3.11\\n        files: ^src/.*\\\\.py$\\n        args: [\\\"--profile\\\", \\\"black\\\"]\\n\\n  - repo: https://github.com/pycqa/flake8\\n    rev: 7.0.0\\n    hooks:\\n      - id: flake8\\n        language_version: python3.11\\n        files: ^src/.*\\\\.py$\\n        args: [\\\"--max-line-length=88\\\", \\\"--extend-ignore=E203,W503\\\"]\\n\\n  - repo: local\\n    hooks:\\n      - id: case-collision-lint\\n        name: Check for case-sensitive filename collisions\\n        entry: python3 -c \\\"import os, sys; files = [f for f in sys.argv[1:] if os.path.isfile(f)]; lower_files = [f.lower() for f in files]; duplicates = [f for f in files if lower_files.count(f.lower()) > 1]; sys.exit(1 if duplicates else 0)\\\"\\n        language: system\\n        files: ^src/.*\\n      - id: format-check\\n        name: Run format checks\\n        entry: ./scripts/format_check.sh\\n        language: system\\n        pass_filenames: false\\n        files: ^src/.*\\\\.py$\",\n  \"export_to_json.py\": \"#!/usr/bin/env python3\\nimport sys, os, json\\n\\ndef export_to_json(root_dir, out_file):\\n    data = {}\\n    for dirpath, _, filenames in os.walk(root_dir):\\n        for fname in filenames:\\n            full = os.path.join(dirpath, fname)\\n            rel = os.path.relpath(full, root_dir)\\n            try:\\n                with open(full, encoding='utf-8') as f:\\n                    data[rel] = f.read()\\n            except Exception as e:\\n                print(f\\\"⚠️ Skipping {rel}: {e}\\\", file=sys.stderr)\\n    with open(out_file, 'w', encoding='utf-8') as out:\\n        json.dump(data, out, ensure_ascii=False, indent=2)\\n    print(f\\\"✅ Wrote {len(data)} entries to {out_file!r}\\\")\\n\\nif __name__ == '__main__':\\n    if len(sys.argv) != 2:\\n        print(\\\"Usage: script.py <root_directory>\\\", file=sys.stderr)\\n        sys.exit(1)\\n    root = sys.argv[1]\\n    name = os.path.basename(os.path.abspath(root)) or 'export'\\n    export_to_json(root, f\\\"{name}.json\\\")\\n\",\n  \"pyproject.toml\": \"[tool.poetry]\\nname = \\\"crypto-agent-dp-lab\\\"\\nversion = \\\"0.0.1\\\"\\ndescription = \\\"Differentiable programming / reinforcement learning framework for crypto trading\\\"\\nauthors = [\\\"Evan Follis <evan.follis@gmail.com>\\\"]\\npackages = [{ include = \\\"dp_lab\\\", from = \\\"src\\\" }]\\n\\n[tool.poetry.dependencies]\\npython = \\\"^3.11\\\"\\n\\n[tool.poetry.group.dev.dependencies]\\nblack = \\\"^24.3.0\\\"\\nisort = \\\"^5.13.2\\\"\\nflake8 = \\\"^7.0.0\\\"\\npytest = \\\"^8.0.0\\\"\\nmypy = \\\"^1.8.0\\\"\\npre-commit = \\\"^3.6.0\\\"\\n\\n[build-system]\\nrequires = [\\\"poetry-core\\\"]\\nbuild-backend = \\\"poetry.core.masonry.api\\\"\\n\\n[tool.black]\\nline-length = 88\\ntarget-version = [\\\"py311\\\"]\\ninclude = '\\\\.pyi?$'\\n\\n[tool.isort]\\nprofile = \\\"black\\\"\\nline_length = 88\\nmulti_line_output = 3\\n\\n[tool.mypy]\\npython_version = \\\"3.11\\\"\\nstrict = true\\nwarn_return_any = true\\nwarn_unused_configs = true\\n\\n[tool.pytest.ini_options]\\ntestpaths = [\\\"src/tests\\\"]\\npython_files = [\\\"test_*.py\\\"]\\npython_classes = [\\\"Test*\\\"]\\npython_functions = [\\\"test_*\\\"]\\n\",\n  \"poetry.lock\": \"# This file is automatically @generated by Poetry 1.8.2 and should not be changed by hand.\\n\\n[[package]]\\nname = \\\"black\\\"\\nversion = \\\"24.10.0\\\"\\ndescription = \\\"The uncompromising code formatter.\\\"\\noptional = false\\npython-versions = \\\">=3.9\\\"\\nfiles = [\\n    {file = \\\"black-24.10.0-cp310-cp310-macosx_10_9_x86_64.whl\\\", hash = \\\"sha256:e6668650ea4b685440857138e5fe40cde4d652633b1bdffc62933d0db4ed9812\\\"},\\n    {file = \\\"black-24.10.0-cp310-cp310-macosx_11_0_arm64.whl\\\", hash = \\\"sha256:1c536fcf674217e87b8cc3657b81809d3c085d7bf3ef262ead700da345bfa6ea\\\"},\\n    {file = \\\"black-24.10.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\\\", hash = \\\"sha256:649fff99a20bd06c6f727d2a27f401331dc0cc861fb69cde910fe95b01b5928f\\\"},\\n    {file = \\\"black-24.10.0-cp310-cp310-win_amd64.whl\\\", hash = \\\"sha256:fe4d6476887de70546212c99ac9bd803d90b42fc4767f058a0baa895013fbb3e\\\"},\\n    {file = \\\"black-24.10.0-cp311-cp311-macosx_10_9_x86_64.whl\\\", hash = \\\"sha256:5a2221696a8224e335c28816a9d331a6c2ae15a2ee34ec857dcf3e45dbfa99ad\\\"},\\n    {file = \\\"black-24.10.0-cp311-cp311-macosx_11_0_arm64.whl\\\", hash = \\\"sha256:f9da3333530dbcecc1be13e69c250ed8dfa67f43c4005fb537bb426e19200d50\\\"},\\n    {file = \\\"black-24.10.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\\\", hash = \\\"sha256:4007b1393d902b48b36958a216c20c4482f601569d19ed1df294a496eb366392\\\"},\\n    {file = \\\"black-24.10.0-cp311-cp311-win_amd64.whl\\\", hash = \\\"sha256:394d4ddc64782e51153eadcaaca95144ac4c35e27ef9b0a42e121ae7e57a9175\\\"},\\n    {file = \\\"black-24.10.0-cp312-cp312-macosx_10_13_x86_64.whl\\\", hash = \\\"sha256:b5e39e0fae001df40f95bd8cc36b9165c5e2ea88900167bddf258bacef9bbdc3\\\"},\\n    {file = \\\"black-24.10.0-cp312-cp312-macosx_11_0_arm64.whl\\\", hash = \\\"sha256:d37d422772111794b26757c5b55a3eade028aa3fde43121ab7b673d050949d65\\\"},\\n    {file = \\\"black-24.10.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\\\", hash = \\\"sha256:14b3502784f09ce2443830e3133dacf2c0110d45191ed470ecb04d0f5f6fcb0f\\\"},\\n    {file = \\\"black-24.10.0-cp312-cp312-win_amd64.whl\\\", hash = \\\"sha256:30d2c30dc5139211dda799758559d1b049f7f14c580c409d6ad925b74a4208a8\\\"},\\n    {file = \\\"black-24.10.0-cp313-cp313-macosx_10_13_x86_64.whl\\\", hash = \\\"sha256:1cbacacb19e922a1d75ef2b6ccaefcd6e93a2c05ede32f06a21386a04cedb981\\\"},\\n    {file = \\\"black-24.10.0-cp313-cp313-macosx_11_0_arm64.whl\\\", hash = \\\"sha256:1f93102e0c5bb3907451063e08b9876dbeac810e7da5a8bfb7aeb5a9ef89066b\\\"},\\n    {file = \\\"black-24.10.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\\\", hash = \\\"sha256:ddacb691cdcdf77b96f549cf9591701d8db36b2f19519373d60d31746068dbf2\\\"},\\n    {file = \\\"black-24.10.0-cp313-cp313-win_amd64.whl\\\", hash = \\\"sha256:680359d932801c76d2e9c9068d05c6b107f2584b2a5b88831c83962eb9984c1b\\\"},\\n    {file = \\\"black-24.10.0-cp39-cp39-macosx_10_9_x86_64.whl\\\", hash = \\\"sha256:17374989640fbca88b6a448129cd1745c5eb8d9547b464f281b251dd00155ccd\\\"},\\n    {file = \\\"black-24.10.0-cp39-cp39-macosx_11_0_arm64.whl\\\", hash = \\\"sha256:63f626344343083322233f175aaf372d326de8436f5928c042639a4afbbf1d3f\\\"},\\n    {file = \\\"black-24.10.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\\\", hash = \\\"sha256:ccfa1d0cb6200857f1923b602f978386a3a2758a65b52e0950299ea014be6800\\\"},\\n    {file = \\\"black-24.10.0-cp39-cp39-win_amd64.whl\\\", hash = \\\"sha256:2cd9c95431d94adc56600710f8813ee27eea544dd118d45896bb734e9d7a0dc7\\\"},\\n    {file = \\\"black-24.10.0-py3-none-any.whl\\\", hash = \\\"sha256:3bb2b7a1f7b685f85b11fed1ef10f8a9148bceb49853e47a294a3dd963c1dd7d\\\"},\\n    {file = \\\"black-24.10.0.tar.gz\\\", hash = \\\"sha256:846ea64c97afe3bc677b761787993be4991810ecc7a4a937816dd6bddedc4875\\\"},\\n]\\n\\n[package.dependencies]\\nclick = \\\">=8.0.0\\\"\\nmypy-extensions = \\\">=0.4.3\\\"\\npackaging = \\\">=22.0\\\"\\npathspec = \\\">=0.9.0\\\"\\nplatformdirs = \\\">=2\\\"\\n\\n[package.extras]\\ncolorama = [\\\"colorama (>=0.4.3)\\\"]\\nd = [\\\"aiohttp (>=3.10)\\\"]\\njupyter = [\\\"ipython (>=7.8.0)\\\", \\\"tokenize-rt (>=3.2.0)\\\"]\\nuvloop = [\\\"uvloop (>=0.15.2)\\\"]\\n\\n[[package]]\\nname = \\\"cfgv\\\"\\nversion = \\\"3.4.0\\\"\\ndescription = \\\"Validate configuration and produce human readable error messages.\\\"\\noptional = false\\npython-versions = \\\">=3.8\\\"\\nfiles = [\\n    {file = \\\"cfgv-3.4.0-py2.py3-none-any.whl\\\", hash = \\\"sha256:b7265b1f29fd3316bfcd2b330d63d024f2bfd8bcb8b0272f8e19a504856c48f9\\\"},\\n    {file = \\\"cfgv-3.4.0.tar.gz\\\", hash = \\\"sha256:e52591d4c5f5dead8e0f673fb16db7949d2cfb3f7da4582893288f0ded8fe560\\\"},\\n]\\n\\n[[package]]\\nname = \\\"click\\\"\\nversion = \\\"8.2.1\\\"\\ndescription = \\\"Composable command line interface toolkit\\\"\\noptional = false\\npython-versions = \\\">=3.10\\\"\\nfiles = [\\n    {file = \\\"click-8.2.1-py3-none-any.whl\\\", hash = \\\"sha256:61a3265b914e850b85317d0b3109c7f8cd35a670f963866005d6ef1d5175a12b\\\"},\\n    {file = \\\"click-8.2.1.tar.gz\\\", hash = \\\"sha256:27c491cc05d968d271d5a1db13e3b5a184636d9d930f148c50b038f0d0646202\\\"},\\n]\\n\\n[package.dependencies]\\ncolorama = {version = \\\"*\\\", markers = \\\"platform_system == \\\\\\\"Windows\\\\\\\"\\\"}\\n\\n[[package]]\\nname = \\\"colorama\\\"\\nversion = \\\"0.4.6\\\"\\ndescription = \\\"Cross-platform colored terminal text.\\\"\\noptional = false\\npython-versions = \\\"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7\\\"\\nfiles = [\\n    {file = \\\"colorama-0.4.6-py2.py3-none-any.whl\\\", hash = \\\"sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6\\\"},\\n    {file = \\\"colorama-0.4.6.tar.gz\\\", hash = \\\"sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44\\\"},\\n]\\n\\n[[package]]\\nname = \\\"distlib\\\"\\nversion = \\\"0.3.9\\\"\\ndescription = \\\"Distribution utilities\\\"\\noptional = false\\npython-versions = \\\"*\\\"\\nfiles = [\\n    {file = \\\"distlib-0.3.9-py2.py3-none-any.whl\\\", hash = \\\"sha256:47f8c22fd27c27e25a65601af709b38e4f0a45ea4fc2e710f65755fa8caaaf87\\\"},\\n    {file = \\\"distlib-0.3.9.tar.gz\\\", hash = \\\"sha256:a60f20dea646b8a33f3e7772f74dc0b2d0772d2837ee1342a00645c81edf9403\\\"},\\n]\\n\\n[[package]]\\nname = \\\"filelock\\\"\\nversion = \\\"3.18.0\\\"\\ndescription = \\\"A platform independent file lock.\\\"\\noptional = false\\npython-versions = \\\">=3.9\\\"\\nfiles = [\\n    {file = \\\"filelock-3.18.0-py3-none-any.whl\\\", hash = \\\"sha256:c401f4f8377c4464e6db25fff06205fd89bdd83b65eb0488ed1b160f780e21de\\\"},\\n    {file = \\\"filelock-3.18.0.tar.gz\\\", hash = \\\"sha256:adbc88eabb99d2fec8c9c1b229b171f18afa655400173ddc653d5d01501fb9f2\\\"},\\n]\\n\\n[package.extras]\\ndocs = [\\\"furo (>=2024.8.6)\\\", \\\"sphinx (>=8.1.3)\\\", \\\"sphinx-autodoc-typehints (>=3)\\\"]\\ntesting = [\\\"covdefaults (>=2.3)\\\", \\\"coverage (>=7.6.10)\\\", \\\"diff-cover (>=9.2.1)\\\", \\\"pytest (>=8.3.4)\\\", \\\"pytest-asyncio (>=0.25.2)\\\", \\\"pytest-cov (>=6)\\\", \\\"pytest-mock (>=3.14)\\\", \\\"pytest-timeout (>=2.3.1)\\\", \\\"virtualenv (>=20.28.1)\\\"]\\ntyping = [\\\"typing-extensions (>=4.12.2)\\\"]\\n\\n[[package]]\\nname = \\\"flake8\\\"\\nversion = \\\"7.3.0\\\"\\ndescription = \\\"the modular source code checker: pep8 pyflakes and co\\\"\\noptional = false\\npython-versions = \\\">=3.9\\\"\\nfiles = [\\n    {file = \\\"flake8-7.3.0-py2.py3-none-any.whl\\\", hash = \\\"sha256:b9696257b9ce8beb888cdbe31cf885c90d31928fe202be0889a7cdafad32f01e\\\"},\\n    {file = \\\"flake8-7.3.0.tar.gz\\\", hash = \\\"sha256:fe044858146b9fc69b551a4b490d69cf960fcb78ad1edcb84e7fbb1b4a8e3872\\\"},\\n]\\n\\n[package.dependencies]\\nmccabe = \\\">=0.7.0,<0.8.0\\\"\\npycodestyle = \\\">=2.14.0,<2.15.0\\\"\\npyflakes = \\\">=3.4.0,<3.5.0\\\"\\n\\n[[package]]\\nname = \\\"identify\\\"\\nversion = \\\"2.6.12\\\"\\ndescription = \\\"File identification library for Python\\\"\\noptional = false\\npython-versions = \\\">=3.9\\\"\\nfiles = [\\n    {file = \\\"identify-2.6.12-py2.py3-none-any.whl\\\", hash = \\\"sha256:ad9672d5a72e0d2ff7c5c8809b62dfa60458626352fb0eb7b55e69bdc45334a2\\\"},\\n    {file = \\\"identify-2.6.12.tar.gz\\\", hash = \\\"sha256:d8de45749f1efb108badef65ee8386f0f7bb19a7f26185f74de6367bffbaf0e6\\\"},\\n]\\n\\n[package.extras]\\nlicense = [\\\"ukkonen\\\"]\\n\\n[[package]]\\nname = \\\"iniconfig\\\"\\nversion = \\\"2.1.0\\\"\\ndescription = \\\"brain-dead simple config-ini parsing\\\"\\noptional = false\\npython-versions = \\\">=3.8\\\"\\nfiles = [\\n    {file = \\\"iniconfig-2.1.0-py3-none-any.whl\\\", hash = \\\"sha256:9deba5723312380e77435581c6bf4935c94cbfab9b1ed33ef8d238ea168eb760\\\"},\\n    {file = \\\"iniconfig-2.1.0.tar.gz\\\", hash = \\\"sha256:3abbd2e30b36733fee78f9c7f7308f2d0050e88f0087fd25c2645f63c773e1c7\\\"},\\n]\\n\\n[[package]]\\nname = \\\"isort\\\"\\nversion = \\\"5.13.2\\\"\\ndescription = \\\"A Python utility / library to sort Python imports.\\\"\\noptional = false\\npython-versions = \\\">=3.8.0\\\"\\nfiles = [\\n    {file = \\\"isort-5.13.2-py3-none-any.whl\\\", hash = \\\"sha256:8ca5e72a8d85860d5a3fa69b8745237f2939afe12dbf656afbcb47fe72d947a6\\\"},\\n    {file = \\\"isort-5.13.2.tar.gz\\\", hash = \\\"sha256:48fdfcb9face5d58a4f6dde2e72a1fb8dcaf8ab26f95ab49fab84c2ddefb0109\\\"},\\n]\\n\\n[package.extras]\\ncolors = [\\\"colorama (>=0.4.6)\\\"]\\n\\n[[package]]\\nname = \\\"mccabe\\\"\\nversion = \\\"0.7.0\\\"\\ndescription = \\\"McCabe checker, plugin for flake8\\\"\\noptional = false\\npython-versions = \\\">=3.6\\\"\\nfiles = [\\n    {file = \\\"mccabe-0.7.0-py2.py3-none-any.whl\\\", hash = \\\"sha256:6c2d30ab6be0e4a46919781807b4f0d834ebdd6c6e3dca0bda5a15f863427b6e\\\"},\\n    {file = \\\"mccabe-0.7.0.tar.gz\\\", hash = \\\"sha256:348e0240c33b60bbdf4e523192ef919f28cb2c3d7d5c7794f74009290f236325\\\"},\\n]\\n\\n[[package]]\\nname = \\\"mypy\\\"\\nversion = \\\"1.16.1\\\"\\ndescription = \\\"Optional static typing for Python\\\"\\noptional = false\\npython-versions = \\\">=3.9\\\"\\nfiles = [\\n    {file = \\\"mypy-1.16.1-cp310-cp310-macosx_10_9_x86_64.whl\\\", hash = \\\"sha256:b4f0fed1022a63c6fec38f28b7fc77fca47fd490445c69d0a66266c59dd0b88a\\\"},\\n    {file = \\\"mypy-1.16.1-cp310-cp310-macosx_11_0_arm64.whl\\\", hash = \\\"sha256:86042bbf9f5a05ea000d3203cf87aa9d0ccf9a01f73f71c58979eb9249f46d72\\\"},\\n    {file = \\\"mypy-1.16.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\\\", hash = \\\"sha256:ea7469ee5902c95542bea7ee545f7006508c65c8c54b06dc2c92676ce526f3ea\\\"},\\n    {file = \\\"mypy-1.16.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\\\", hash = \\\"sha256:352025753ef6a83cb9e7f2427319bb7875d1fdda8439d1e23de12ab164179574\\\"},\\n    {file = \\\"mypy-1.16.1-cp310-cp310-musllinux_1_2_x86_64.whl\\\", hash = \\\"sha256:ff9fa5b16e4c1364eb89a4d16bcda9987f05d39604e1e6c35378a2987c1aac2d\\\"},\\n    {file = \\\"mypy-1.16.1-cp310-cp310-win_amd64.whl\\\", hash = \\\"sha256:1256688e284632382f8f3b9e2123df7d279f603c561f099758e66dd6ed4e8bd6\\\"},\\n    {file = \\\"mypy-1.16.1-cp311-cp311-macosx_10_9_x86_64.whl\\\", hash = \\\"sha256:472e4e4c100062488ec643f6162dd0d5208e33e2f34544e1fc931372e806c0cc\\\"},\\n    {file = \\\"mypy-1.16.1-cp311-cp311-macosx_11_0_arm64.whl\\\", hash = \\\"sha256:ea16e2a7d2714277e349e24d19a782a663a34ed60864006e8585db08f8ad1782\\\"},\\n    {file = \\\"mypy-1.16.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\\\", hash = \\\"sha256:08e850ea22adc4d8a4014651575567b0318ede51e8e9fe7a68f25391af699507\\\"},\\n    {file = \\\"mypy-1.16.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\\\", hash = \\\"sha256:22d76a63a42619bfb90122889b903519149879ddbf2ba4251834727944c8baca\\\"},\\n    {file = \\\"mypy-1.16.1-cp311-cp311-musllinux_1_2_x86_64.whl\\\", hash = \\\"sha256:2c7ce0662b6b9dc8f4ed86eb7a5d505ee3298c04b40ec13b30e572c0e5ae17c4\\\"},\\n    {file = \\\"mypy-1.16.1-cp311-cp311-win_amd64.whl\\\", hash = \\\"sha256:211287e98e05352a2e1d4e8759c5490925a7c784ddc84207f4714822f8cf99b6\\\"},\\n    {file = \\\"mypy-1.16.1-cp312-cp312-macosx_10_13_x86_64.whl\\\", hash = \\\"sha256:af4792433f09575d9eeca5c63d7d90ca4aeceda9d8355e136f80f8967639183d\\\"},\\n    {file = \\\"mypy-1.16.1-cp312-cp312-macosx_11_0_arm64.whl\\\", hash = \\\"sha256:66df38405fd8466ce3517eda1f6640611a0b8e70895e2a9462d1d4323c5eb4b9\\\"},\\n    {file = \\\"mypy-1.16.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\\\", hash = \\\"sha256:44e7acddb3c48bd2713994d098729494117803616e116032af192871aed80b79\\\"},\\n    {file = \\\"mypy-1.16.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\\\", hash = \\\"sha256:0ab5eca37b50188163fa7c1b73c685ac66c4e9bdee4a85c9adac0e91d8895e15\\\"},\\n    {file = \\\"mypy-1.16.1-cp312-cp312-musllinux_1_2_x86_64.whl\\\", hash = \\\"sha256:dedb6229b2c9086247e21a83c309754b9058b438704ad2f6807f0d8227f6ebdd\\\"},\\n    {file = \\\"mypy-1.16.1-cp312-cp312-win_amd64.whl\\\", hash = \\\"sha256:1f0435cf920e287ff68af3d10a118a73f212deb2ce087619eb4e648116d1fe9b\\\"},\\n    {file = \\\"mypy-1.16.1-cp313-cp313-macosx_10_13_x86_64.whl\\\", hash = \\\"sha256:ddc91eb318c8751c69ddb200a5937f1232ee8efb4e64e9f4bc475a33719de438\\\"},\\n    {file = \\\"mypy-1.16.1-cp313-cp313-macosx_11_0_arm64.whl\\\", hash = \\\"sha256:87ff2c13d58bdc4bbe7dc0dedfe622c0f04e2cb2a492269f3b418df2de05c536\\\"},\\n    {file = \\\"mypy-1.16.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\\\", hash = \\\"sha256:0a7cfb0fe29fe5a9841b7c8ee6dffb52382c45acdf68f032145b75620acfbd6f\\\"},\\n    {file = \\\"mypy-1.16.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\\\", hash = \\\"sha256:051e1677689c9d9578b9c7f4d206d763f9bbd95723cd1416fad50db49d52f359\\\"},\\n    {file = \\\"mypy-1.16.1-cp313-cp313-musllinux_1_2_x86_64.whl\\\", hash = \\\"sha256:d5d2309511cc56c021b4b4e462907c2b12f669b2dbeb68300110ec27723971be\\\"},\\n    {file = \\\"mypy-1.16.1-cp313-cp313-win_amd64.whl\\\", hash = \\\"sha256:4f58ac32771341e38a853c5d0ec0dfe27e18e27da9cdb8bbc882d2249c71a3ee\\\"},\\n    {file = \\\"mypy-1.16.1-cp39-cp39-macosx_10_9_x86_64.whl\\\", hash = \\\"sha256:7fc688329af6a287567f45cc1cefb9db662defeb14625213a5b7da6e692e2069\\\"},\\n    {file = \\\"mypy-1.16.1-cp39-cp39-macosx_11_0_arm64.whl\\\", hash = \\\"sha256:5e198ab3f55924c03ead626ff424cad1732d0d391478dfbf7bb97b34602395da\\\"},\\n    {file = \\\"mypy-1.16.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\\\", hash = \\\"sha256:09aa4f91ada245f0a45dbc47e548fd94e0dd5a8433e0114917dc3b526912a30c\\\"},\\n    {file = \\\"mypy-1.16.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\\\", hash = \\\"sha256:13c7cd5b1cb2909aa318a90fd1b7e31f17c50b242953e7dd58345b2a814f6383\\\"},\\n    {file = \\\"mypy-1.16.1-cp39-cp39-musllinux_1_2_x86_64.whl\\\", hash = \\\"sha256:58e07fb958bc5d752a280da0e890c538f1515b79a65757bbdc54252ba82e0b40\\\"},\\n    {file = \\\"mypy-1.16.1-cp39-cp39-win_amd64.whl\\\", hash = \\\"sha256:f895078594d918f93337a505f8add9bd654d1a24962b4c6ed9390e12531eb31b\\\"},\\n    {file = \\\"mypy-1.16.1-py3-none-any.whl\\\", hash = \\\"sha256:5fc2ac4027d0ef28d6ba69a0343737a23c4d1b83672bf38d1fe237bdc0643b37\\\"},\\n    {file = \\\"mypy-1.16.1.tar.gz\\\", hash = \\\"sha256:6bd00a0a2094841c5e47e7374bb42b83d64c527a502e3334e1173a0c24437bab\\\"},\\n]\\n\\n[package.dependencies]\\nmypy_extensions = \\\">=1.0.0\\\"\\npathspec = \\\">=0.9.0\\\"\\ntyping_extensions = \\\">=4.6.0\\\"\\n\\n[package.extras]\\ndmypy = [\\\"psutil (>=4.0)\\\"]\\nfaster-cache = [\\\"orjson\\\"]\\ninstall-types = [\\\"pip\\\"]\\nmypyc = [\\\"setuptools (>=50)\\\"]\\nreports = [\\\"lxml\\\"]\\n\\n[[package]]\\nname = \\\"mypy-extensions\\\"\\nversion = \\\"1.1.0\\\"\\ndescription = \\\"Type system extensions for programs checked with the mypy type checker.\\\"\\noptional = false\\npython-versions = \\\">=3.8\\\"\\nfiles = [\\n    {file = \\\"mypy_extensions-1.1.0-py3-none-any.whl\\\", hash = \\\"sha256:1be4cccdb0f2482337c4743e60421de3a356cd97508abadd57d47403e94f5505\\\"},\\n    {file = \\\"mypy_extensions-1.1.0.tar.gz\\\", hash = \\\"sha256:52e68efc3284861e772bbcd66823fde5ae21fd2fdb51c62a211403730b916558\\\"},\\n]\\n\\n[[package]]\\nname = \\\"nodeenv\\\"\\nversion = \\\"1.9.1\\\"\\ndescription = \\\"Node.js virtual environment builder\\\"\\noptional = false\\npython-versions = \\\"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7\\\"\\nfiles = [\\n    {file = \\\"nodeenv-1.9.1-py2.py3-none-any.whl\\\", hash = \\\"sha256:ba11c9782d29c27c70ffbdda2d7415098754709be8a7056d79a737cd901155c9\\\"},\\n    {file = \\\"nodeenv-1.9.1.tar.gz\\\", hash = \\\"sha256:6ec12890a2dab7946721edbfbcd91f3319c6ccc9aec47be7c7e6b7011ee6645f\\\"},\\n]\\n\\n[[package]]\\nname = \\\"packaging\\\"\\nversion = \\\"25.0\\\"\\ndescription = \\\"Core utilities for Python packages\\\"\\noptional = false\\npython-versions = \\\">=3.8\\\"\\nfiles = [\\n    {file = \\\"packaging-25.0-py3-none-any.whl\\\", hash = \\\"sha256:29572ef2b1f17581046b3a2227d5c611fb25ec70ca1ba8554b24b0e69331a484\\\"},\\n    {file = \\\"packaging-25.0.tar.gz\\\", hash = \\\"sha256:d443872c98d677bf60f6a1f2f8c1cb748e8fe762d2bf9d3148b5599295b0fc4f\\\"},\\n]\\n\\n[[package]]\\nname = \\\"pathspec\\\"\\nversion = \\\"0.12.1\\\"\\ndescription = \\\"Utility library for gitignore style pattern matching of file paths.\\\"\\noptional = false\\npython-versions = \\\">=3.8\\\"\\nfiles = [\\n    {file = \\\"pathspec-0.12.1-py3-none-any.whl\\\", hash = \\\"sha256:a0d503e138a4c123b27490a4f7beda6a01c6f288df0e4a8b79c7eb0dc7b4cc08\\\"},\\n    {file = \\\"pathspec-0.12.1.tar.gz\\\", hash = \\\"sha256:a482d51503a1ab33b1c67a6c3813a26953dbdc71c31dacaef9a838c4e29f5712\\\"},\\n]\\n\\n[[package]]\\nname = \\\"platformdirs\\\"\\nversion = \\\"4.3.8\\\"\\ndescription = \\\"A small Python package for determining appropriate platform-specific dirs, e.g. a `user data dir`.\\\"\\noptional = false\\npython-versions = \\\">=3.9\\\"\\nfiles = [\\n    {file = \\\"platformdirs-4.3.8-py3-none-any.whl\\\", hash = \\\"sha256:ff7059bb7eb1179e2685604f4aaf157cfd9535242bd23742eadc3c13542139b4\\\"},\\n    {file = \\\"platformdirs-4.3.8.tar.gz\\\", hash = \\\"sha256:3d512d96e16bcb959a814c9f348431070822a6496326a4be0911c40b5a74c2bc\\\"},\\n]\\n\\n[package.extras]\\ndocs = [\\\"furo (>=2024.8.6)\\\", \\\"proselint (>=0.14)\\\", \\\"sphinx (>=8.1.3)\\\", \\\"sphinx-autodoc-typehints (>=3)\\\"]\\ntest = [\\\"appdirs (==1.4.4)\\\", \\\"covdefaults (>=2.3)\\\", \\\"pytest (>=8.3.4)\\\", \\\"pytest-cov (>=6)\\\", \\\"pytest-mock (>=3.14)\\\"]\\ntype = [\\\"mypy (>=1.14.1)\\\"]\\n\\n[[package]]\\nname = \\\"pluggy\\\"\\nversion = \\\"1.6.0\\\"\\ndescription = \\\"plugin and hook calling mechanisms for python\\\"\\noptional = false\\npython-versions = \\\">=3.9\\\"\\nfiles = [\\n    {file = \\\"pluggy-1.6.0-py3-none-any.whl\\\", hash = \\\"sha256:e920276dd6813095e9377c0bc5566d94c932c33b27a3e3945d8389c374dd4746\\\"},\\n    {file = \\\"pluggy-1.6.0.tar.gz\\\", hash = \\\"sha256:7dcc130b76258d33b90f61b658791dede3486c3e6bfb003ee5c9bfb396dd22f3\\\"},\\n]\\n\\n[package.extras]\\ndev = [\\\"pre-commit\\\", \\\"tox\\\"]\\ntesting = [\\\"coverage\\\", \\\"pytest\\\", \\\"pytest-benchmark\\\"]\\n\\n[[package]]\\nname = \\\"pre-commit\\\"\\nversion = \\\"3.8.0\\\"\\ndescription = \\\"A framework for managing and maintaining multi-language pre-commit hooks.\\\"\\noptional = false\\npython-versions = \\\">=3.9\\\"\\nfiles = [\\n    {file = \\\"pre_commit-3.8.0-py2.py3-none-any.whl\\\", hash = \\\"sha256:9a90a53bf82fdd8778d58085faf8d83df56e40dfe18f45b19446e26bf1b3a63f\\\"},\\n    {file = \\\"pre_commit-3.8.0.tar.gz\\\", hash = \\\"sha256:8bb6494d4a20423842e198980c9ecf9f96607a07ea29549e180eef9ae80fe7af\\\"},\\n]\\n\\n[package.dependencies]\\ncfgv = \\\">=2.0.0\\\"\\nidentify = \\\">=1.0.0\\\"\\nnodeenv = \\\">=0.11.1\\\"\\npyyaml = \\\">=5.1\\\"\\nvirtualenv = \\\">=20.10.0\\\"\\n\\n[[package]]\\nname = \\\"pycodestyle\\\"\\nversion = \\\"2.14.0\\\"\\ndescription = \\\"Python style guide checker\\\"\\noptional = false\\npython-versions = \\\">=3.9\\\"\\nfiles = [\\n    {file = \\\"pycodestyle-2.14.0-py2.py3-none-any.whl\\\", hash = \\\"sha256:dd6bf7cb4ee77f8e016f9c8e74a35ddd9f67e1d5fd4184d86c3b98e07099f42d\\\"},\\n    {file = \\\"pycodestyle-2.14.0.tar.gz\\\", hash = \\\"sha256:c4b5b517d278089ff9d0abdec919cd97262a3367449ea1c8b49b91529167b783\\\"},\\n]\\n\\n[[package]]\\nname = \\\"pyflakes\\\"\\nversion = \\\"3.4.0\\\"\\ndescription = \\\"passive checker of Python programs\\\"\\noptional = false\\npython-versions = \\\">=3.9\\\"\\nfiles = [\\n    {file = \\\"pyflakes-3.4.0-py2.py3-none-any.whl\\\", hash = \\\"sha256:f742a7dbd0d9cb9ea41e9a24a918996e8170c799fa528688d40dd582c8265f4f\\\"},\\n    {file = \\\"pyflakes-3.4.0.tar.gz\\\", hash = \\\"sha256:b24f96fafb7d2ab0ec5075b7350b3d2d2218eab42003821c06344973d3ea2f58\\\"},\\n]\\n\\n[[package]]\\nname = \\\"pygments\\\"\\nversion = \\\"2.19.2\\\"\\ndescription = \\\"Pygments is a syntax highlighting package written in Python.\\\"\\noptional = false\\npython-versions = \\\">=3.8\\\"\\nfiles = [\\n    {file = \\\"pygments-2.19.2-py3-none-any.whl\\\", hash = \\\"sha256:86540386c03d588bb81d44bc3928634ff26449851e99741617ecb9037ee5ec0b\\\"},\\n    {file = \\\"pygments-2.19.2.tar.gz\\\", hash = \\\"sha256:636cb2477cec7f8952536970bc533bc43743542f70392ae026374600add5b887\\\"},\\n]\\n\\n[package.extras]\\nwindows-terminal = [\\\"colorama (>=0.4.6)\\\"]\\n\\n[[package]]\\nname = \\\"pytest\\\"\\nversion = \\\"8.4.1\\\"\\ndescription = \\\"pytest: simple powerful testing with Python\\\"\\noptional = false\\npython-versions = \\\">=3.9\\\"\\nfiles = [\\n    {file = \\\"pytest-8.4.1-py3-none-any.whl\\\", hash = \\\"sha256:539c70ba6fcead8e78eebbf1115e8b589e7565830d7d006a8723f19ac8a0afb7\\\"},\\n    {file = \\\"pytest-8.4.1.tar.gz\\\", hash = \\\"sha256:7c67fd69174877359ed9371ec3af8a3d2b04741818c51e5e99cc1742251fa93c\\\"},\\n]\\n\\n[package.dependencies]\\ncolorama = {version = \\\">=0.4\\\", markers = \\\"sys_platform == \\\\\\\"win32\\\\\\\"\\\"}\\niniconfig = \\\">=1\\\"\\npackaging = \\\">=20\\\"\\npluggy = \\\">=1.5,<2\\\"\\npygments = \\\">=2.7.2\\\"\\n\\n[package.extras]\\ndev = [\\\"argcomplete\\\", \\\"attrs (>=19.2)\\\", \\\"hypothesis (>=3.56)\\\", \\\"mock\\\", \\\"requests\\\", \\\"setuptools\\\", \\\"xmlschema\\\"]\\n\\n[[package]]\\nname = \\\"pyyaml\\\"\\nversion = \\\"6.0.2\\\"\\ndescription = \\\"YAML parser and emitter for Python\\\"\\noptional = false\\npython-versions = \\\">=3.8\\\"\\nfiles = [\\n    {file = \\\"PyYAML-6.0.2-cp310-cp310-macosx_10_9_x86_64.whl\\\", hash = \\\"sha256:0a9a2848a5b7feac301353437eb7d5957887edbf81d56e903999a75a3d743086\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp310-cp310-macosx_11_0_arm64.whl\\\", hash = \\\"sha256:29717114e51c84ddfba879543fb232a6ed60086602313ca38cce623c1d62cfbf\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\\\", hash = \\\"sha256:8824b5a04a04a047e72eea5cec3bc266db09e35de6bdfe34c9436ac5ee27d237\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\\\", hash = \\\"sha256:7c36280e6fb8385e520936c3cb3b8042851904eba0e58d277dca80a5cfed590b\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\\\", hash = \\\"sha256:ec031d5d2feb36d1d1a24380e4db6d43695f3748343d99434e6f5f9156aaa2ed\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp310-cp310-musllinux_1_1_aarch64.whl\\\", hash = \\\"sha256:936d68689298c36b53b29f23c6dbb74de12b4ac12ca6cfe0e047bedceea56180\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp310-cp310-musllinux_1_1_x86_64.whl\\\", hash = \\\"sha256:23502f431948090f597378482b4812b0caae32c22213aecf3b55325e049a6c68\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp310-cp310-win32.whl\\\", hash = \\\"sha256:2e99c6826ffa974fe6e27cdb5ed0021786b03fc98e5ee3c5bfe1fd5015f42b99\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp310-cp310-win_amd64.whl\\\", hash = \\\"sha256:a4d3091415f010369ae4ed1fc6b79def9416358877534caf6a0fdd2146c87a3e\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp311-cp311-macosx_10_9_x86_64.whl\\\", hash = \\\"sha256:cc1c1159b3d456576af7a3e4d1ba7e6924cb39de8f67111c735f6fc832082774\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp311-cp311-macosx_11_0_arm64.whl\\\", hash = \\\"sha256:1e2120ef853f59c7419231f3bf4e7021f1b936f6ebd222406c3b60212205d2ee\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\\\", hash = \\\"sha256:5d225db5a45f21e78dd9358e58a98702a0302f2659a3c6cd320564b75b86f47c\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\\\", hash = \\\"sha256:5ac9328ec4831237bec75defaf839f7d4564be1e6b25ac710bd1a96321cc8317\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\\\", hash = \\\"sha256:3ad2a3decf9aaba3d29c8f537ac4b243e36bef957511b4766cb0057d32b0be85\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp311-cp311-musllinux_1_1_aarch64.whl\\\", hash = \\\"sha256:ff3824dc5261f50c9b0dfb3be22b4567a6f938ccce4587b38952d85fd9e9afe4\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp311-cp311-musllinux_1_1_x86_64.whl\\\", hash = \\\"sha256:797b4f722ffa07cc8d62053e4cff1486fa6dc094105d13fea7b1de7d8bf71c9e\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp311-cp311-win32.whl\\\", hash = \\\"sha256:11d8f3dd2b9c1207dcaf2ee0bbbfd5991f571186ec9cc78427ba5bd32afae4b5\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp311-cp311-win_amd64.whl\\\", hash = \\\"sha256:e10ce637b18caea04431ce14fabcf5c64a1c61ec9c56b071a4b7ca131ca52d44\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp312-cp312-macosx_10_9_x86_64.whl\\\", hash = \\\"sha256:c70c95198c015b85feafc136515252a261a84561b7b1d51e3384e0655ddf25ab\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp312-cp312-macosx_11_0_arm64.whl\\\", hash = \\\"sha256:ce826d6ef20b1bc864f0a68340c8b3287705cae2f8b4b1d932177dcc76721725\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\\\", hash = \\\"sha256:1f71ea527786de97d1a0cc0eacd1defc0985dcf6b3f17bb77dcfc8c34bec4dc5\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\\\", hash = \\\"sha256:9b22676e8097e9e22e36d6b7bda33190d0d400f345f23d4065d48f4ca7ae0425\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\\\", hash = \\\"sha256:80bab7bfc629882493af4aa31a4cfa43a4c57c83813253626916b8c7ada83476\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp312-cp312-musllinux_1_1_aarch64.whl\\\", hash = \\\"sha256:0833f8694549e586547b576dcfaba4a6b55b9e96098b36cdc7ebefe667dfed48\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp312-cp312-musllinux_1_1_x86_64.whl\\\", hash = \\\"sha256:8b9c7197f7cb2738065c481a0461e50ad02f18c78cd75775628afb4d7137fb3b\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp312-cp312-win32.whl\\\", hash = \\\"sha256:ef6107725bd54b262d6dedcc2af448a266975032bc85ef0172c5f059da6325b4\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp312-cp312-win_amd64.whl\\\", hash = \\\"sha256:7e7401d0de89a9a855c839bc697c079a4af81cf878373abd7dc625847d25cbd8\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp313-cp313-macosx_10_13_x86_64.whl\\\", hash = \\\"sha256:efdca5630322a10774e8e98e1af481aad470dd62c3170801852d752aa7a783ba\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp313-cp313-macosx_11_0_arm64.whl\\\", hash = \\\"sha256:50187695423ffe49e2deacb8cd10510bc361faac997de9efef88badc3bb9e2d1\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\\\", hash = \\\"sha256:0ffe8360bab4910ef1b9e87fb812d8bc0a308b0d0eef8c8f44e0254ab3b07133\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\\\", hash = \\\"sha256:17e311b6c678207928d649faa7cb0d7b4c26a0ba73d41e99c4fff6b6c3276484\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\\\", hash = \\\"sha256:70b189594dbe54f75ab3a1acec5f1e3faa7e8cf2f1e08d9b561cb41b845f69d5\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp313-cp313-musllinux_1_1_aarch64.whl\\\", hash = \\\"sha256:41e4e3953a79407c794916fa277a82531dd93aad34e29c2a514c2c0c5fe971cc\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp313-cp313-musllinux_1_1_x86_64.whl\\\", hash = \\\"sha256:68ccc6023a3400877818152ad9a1033e3db8625d899c72eacb5a668902e4d652\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp313-cp313-win32.whl\\\", hash = \\\"sha256:bc2fa7c6b47d6bc618dd7fb02ef6fdedb1090ec036abab80d4681424b84c1183\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp313-cp313-win_amd64.whl\\\", hash = \\\"sha256:8388ee1976c416731879ac16da0aff3f63b286ffdd57cdeb95f3f2e085687563\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp38-cp38-macosx_10_9_x86_64.whl\\\", hash = \\\"sha256:24471b829b3bf607e04e88d79542a9d48bb037c2267d7927a874e6c205ca7e9a\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\\\", hash = \\\"sha256:d7fded462629cfa4b685c5416b949ebad6cec74af5e2d42905d41e257e0869f5\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\\\", hash = \\\"sha256:d84a1718ee396f54f3a086ea0a66d8e552b2ab2017ef8b420e92edbc841c352d\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\\\", hash = \\\"sha256:9056c1ecd25795207ad294bcf39f2db3d845767be0ea6e6a34d856f006006083\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp38-cp38-musllinux_1_1_x86_64.whl\\\", hash = \\\"sha256:82d09873e40955485746739bcb8b4586983670466c23382c19cffecbf1fd8706\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp38-cp38-win32.whl\\\", hash = \\\"sha256:43fa96a3ca0d6b1812e01ced1044a003533c47f6ee8aca31724f78e93ccc089a\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp38-cp38-win_amd64.whl\\\", hash = \\\"sha256:01179a4a8559ab5de078078f37e5c1a30d76bb88519906844fd7bdea1b7729ff\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp39-cp39-macosx_10_9_x86_64.whl\\\", hash = \\\"sha256:688ba32a1cffef67fd2e9398a2efebaea461578b0923624778664cc1c914db5d\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp39-cp39-macosx_11_0_arm64.whl\\\", hash = \\\"sha256:a8786accb172bd8afb8be14490a16625cbc387036876ab6ba70912730faf8e1f\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\\\", hash = \\\"sha256:d8e03406cac8513435335dbab54c0d385e4a49e4945d2909a581c83647ca0290\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\\\", hash = \\\"sha256:f753120cb8181e736c57ef7636e83f31b9c0d1722c516f7e86cf15b7aa57ff12\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\\\", hash = \\\"sha256:3b1fdb9dc17f5a7677423d508ab4f243a726dea51fa5e70992e59a7411c89d19\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp39-cp39-musllinux_1_1_aarch64.whl\\\", hash = \\\"sha256:0b69e4ce7a131fe56b7e4d770c67429700908fc0752af059838b1cfb41960e4e\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp39-cp39-musllinux_1_1_x86_64.whl\\\", hash = \\\"sha256:a9f8c2e67970f13b16084e04f134610fd1d374bf477b17ec1599185cf611d725\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp39-cp39-win32.whl\\\", hash = \\\"sha256:6395c297d42274772abc367baaa79683958044e5d3835486c16da75d2a694631\\\"},\\n    {file = \\\"PyYAML-6.0.2-cp39-cp39-win_amd64.whl\\\", hash = \\\"sha256:39693e1f8320ae4f43943590b49779ffb98acb81f788220ea932a6b6c51004d8\\\"},\\n    {file = \\\"pyyaml-6.0.2.tar.gz\\\", hash = \\\"sha256:d584d9ec91ad65861cc08d42e834324ef890a082e591037abe114850ff7bbc3e\\\"},\\n]\\n\\n[[package]]\\nname = \\\"typing-extensions\\\"\\nversion = \\\"4.14.1\\\"\\ndescription = \\\"Backported and Experimental Type Hints for Python 3.9+\\\"\\noptional = false\\npython-versions = \\\">=3.9\\\"\\nfiles = [\\n    {file = \\\"typing_extensions-4.14.1-py3-none-any.whl\\\", hash = \\\"sha256:d1e1e3b58374dc93031d6eda2420a48ea44a36c2b4766a4fdeb3710755731d76\\\"},\\n    {file = \\\"typing_extensions-4.14.1.tar.gz\\\", hash = \\\"sha256:38b39f4aeeab64884ce9f74c94263ef78f3c22467c8724005483154c26648d36\\\"},\\n]\\n\\n[[package]]\\nname = \\\"virtualenv\\\"\\nversion = \\\"20.31.2\\\"\\ndescription = \\\"Virtual Python Environment builder\\\"\\noptional = false\\npython-versions = \\\">=3.8\\\"\\nfiles = [\\n    {file = \\\"virtualenv-20.31.2-py3-none-any.whl\\\", hash = \\\"sha256:36efd0d9650ee985f0cad72065001e66d49a6f24eb44d98980f630686243cf11\\\"},\\n    {file = \\\"virtualenv-20.31.2.tar.gz\\\", hash = \\\"sha256:e10c0a9d02835e592521be48b332b6caee6887f332c111aa79a09b9e79efc2af\\\"},\\n]\\n\\n[package.dependencies]\\ndistlib = \\\">=0.3.7,<1\\\"\\nfilelock = \\\">=3.12.2,<4\\\"\\nplatformdirs = \\\">=3.9.1,<5\\\"\\n\\n[package.extras]\\ndocs = [\\\"furo (>=2023.7.26)\\\", \\\"proselint (>=0.13)\\\", \\\"sphinx (>=7.1.2,!=7.3)\\\", \\\"sphinx-argparse (>=0.4)\\\", \\\"sphinxcontrib-towncrier (>=0.2.1a0)\\\", \\\"towncrier (>=23.6)\\\"]\\ntest = [\\\"covdefaults (>=2.3)\\\", \\\"coverage (>=7.2.7)\\\", \\\"coverage-enable-subprocess (>=1)\\\", \\\"flaky (>=3.7)\\\", \\\"packaging (>=23.1)\\\", \\\"pytest (>=7.4)\\\", \\\"pytest-env (>=0.8.2)\\\", \\\"pytest-freezer (>=0.4.8)\\\", \\\"pytest-mock (>=3.11.1)\\\", \\\"pytest-randomly (>=3.12)\\\", \\\"pytest-timeout (>=2.1)\\\", \\\"setuptools (>=68)\\\", \\\"time-machine (>=2.10)\\\"]\\n\\n[metadata]\\nlock-version = \\\"2.0\\\"\\npython-versions = \\\"^3.11\\\"\\ncontent-hash = \\\"efeae4c78d80d7e0394a88986b531868b2ae1cecff15f48ea4acbaa36947be56\\\"\\n\",\n  \"CLAUDE.md\": \"\\n## ⬛ DP‑Crypto Lab – Agent Onboarding Brief (v0.1)\\n\\n### 0 Mission (why this repo exists)\\n\\n> Build a **differentiable‑programming / reinforcement‑learning framework** that trades crypto assets live.\\n> Emphasise reproducibility, audit‑grade logging, and containerised portability across\\n> • **macOS (M4 Pro, Metal/MPS)** for rapid iteration\\n> • **WSL 2 + RTX 5090 CUDA 12.8** for full‑scale training & CI.\\n\\n### 1 Golden Rules for Code‑Gen Agents\\n\\n1. **One PR = One atomic concern** (feature, refactor, or infra task).\\n2. **No global site‑package edits.** Every change lives inside the dev‑container image.\\n3. **Respect the scaffolds below.** If a file or directory is not mentioned, leave it untouched.\\n4. **Always add/adjust tests** when you change behaviour or introduce new modules.\\n5. **Run `./scripts/preflight.sh` locally**; commit only if it exits 0.\\n\\n### 2 Repo Skeleton (generate if missing)\\n\\n```\\ncrypto‑dp‑lab/\\n├── .devcontainer/\\n│   ├── cuda/      # Dockerfile + devcontainer.json\\n│   └── metal/\\n├── env/           # conda yaml templates (cpu.yml, cuda.yml)\\n├── src/\\n│   ├── dp_lab/    # python package root (leave empty for now)\\n│   └── tests/\\n├── data/          # READ‑ONLY mountpoint (no raw files committed)\\n├── secrets/       # *.enc age‑encrypted files (never plaintext)\\n├── scripts/\\n│   ├── preflight.sh\\n│   └── format_check.sh\\n├── .github/\\n│   └── workflows/ (ci.yml template stub)\\n├── .pre‑commit‑config.yaml\\n├── pyproject.toml   (Poetry, empty deps list)\\n└── README.md        (light placeholder)\\n```\\n\\n### 3 Immediate TODO Backlog (ordered)\\n\\n| ID       | Task                                                                                                                           | Output File(s)             | Constraints                                        |\\n| -------- | ------------------------------------------------------------------------------------------------------------------------------ | -------------------------- | -------------------------------------------------- |\\n| **T‑00** | Add **`.pre‑commit‑config.yaml`** (black, isort, flake8, case‑collision‑lint).                                                 | `.pre‑commit‑config.yaml`  | Pin tool versions; enable on `python/**` & `src/`. |\\n| **T‑01** | Scaffold **`pyproject.toml`** for Poetry 3.11, **no runtime deps yet**.                                                        | `pyproject.toml`           | Leave `[tool.poetry.dependencies]` empty.          |\\n| **T‑02** | Generate **`cuda.Dockerfile`** (`FROM nvidia/cuda:12.8.0‑devel‑ubuntu22.04`) and matching `cuda.devcontainer.json`.            | `.devcontainer/cuda/*`     | Add runArgs `\\\"--gpus\\\",\\\"all\\\"`, mount `/opt/data`.   |\\n| **T‑03** | Generate **`metal.Dockerfile`** (Ubuntu jammy‑slim + Python 3.11) + `metal.devcontainer.json`.                                 | `.devcontainer/metal/*`    | No GPU flags.                                      |\\n| **T‑04** | Create **`scripts/preflight.sh`** implementing: driver‑match check, `torch.cuda`/MPS availability, poetry install test.        | `scripts/preflight.sh`     | Fail‑fast pattern; POSIX‑sh compatible.            |\\n| **T‑05** | Stub **`ci.yml`** with matrix `{ os:[macos‑14,ubuntu‑22.04], gpu:[cpu,cuda] }`, job installs Poetry, runs pre‑commit + pytest. | `.github/workflows/ci.yml` | GPU job marked `if: matrix.gpu == 'cuda'`.         |\\n| **T‑06** | Add **`format_check.sh`** (runs black, isort, flake8) + hook in pre‑commit.                                                    | `scripts/format_check.sh`  | Exits non‑zero on diff.                            |\\n\\n> **IMPORTANT** – Agents must *stop after T‑06*. Leave DP logic, data ingestion, and trading code for later PRs.\\n\\n### 4 Style & Naming\\n\\n* **Python 3.11** only.\\n* Strict type hints (`mypy --strict` in later sprints).\\n* Modules snake\\\\_case, classes PascalCase, constants UPPER\\\\_SNAKE.\\n* Commit messages: `<scope>: <imperative summary>`; body ≤ 72 chars/line.\\n\\n### 5 Secrets & Data\\n\\n* **Never output plaintext keys.** Use `sops‑age` encrypted placeholders.\\n* **No raw datasets in Git.** Access via `/opt/data` bind‑mount (volume defined outside repo).\\n* Unit tests must run offline with **synthetic fixtures**.\\n\\n### 6 How to Validate before PR\\n\\n```bash\\n# inside dev‑container\\npoetry install --with dev\\npre‑commit install   # first time only\\n./scripts/preflight.sh\\npytest -q\\n```\\n\\n### 7 Escalation Path\\n\\nIf an agent is uncertain, it must:\\n\\n1. Leave a `TODO:` comment in code **and**\\n2. Emit an inline question in the PR description (GitHub UI) asking for clarification.\\n\\n### 8 Forbidden Actions\\n\\n* Auto‑upgrading system packages in Dockerfiles (`apt upgrade -y`) – pin versions instead.\\n* Adding new dependencies without `poetry add` + lock update.\\n* Pushing to `main`—all changes must come via PR.\\n\\n---\\n\",\n  \".devcontainer/README.md\": \"# Dev Container Toolchain\\n\\nThis repository uses VS Code Dev Containers to ensure consistent development environments across macOS (Metal/MPS) and Linux (CUDA).\\n\\n## Installed Tools\\n\\nAll dev containers include the following tools installed in `/usr/local/bin`:\\n\\n- **Poetry 1.8.2**: Python dependency management\\n- **Node.js 18**: JavaScript runtime (required for Claude CLI)\\n- **Claude Code CLI**: Anthropic's AI coding assistant (`@anthropic-ai/claude-code`)\\n\\n## Rebuilding the Container\\n\\nIf you need to update tool versions or the container configuration:\\n\\n1. Open Command Palette: `Cmd+Shift+P` (macOS) or `Ctrl+Shift+P` (Linux/Windows)\\n2. Run: **Dev Containers: Rebuild Container**\\n\\n## Using Claude Code\\n\\nOnce inside the container, you can use Claude Code from any terminal:\\n\\n```bash\\nclaude chat\\n```\\n\\nThe CLI is globally installed via npm and available in all terminal sessions.\\n\\n## Container Variants\\n\\n- **metal**: Optimized for macOS with Metal/MPS support\\n- **cuda**: For Linux/WSL with NVIDIA GPU support (when available)\\n\\n## Verification\\n\\nThe `postCreateCommand` automatically runs `./scripts/preflight.sh` to verify all tools are properly installed and accessible. This script checks:\\n\\n- Poetry availability and version\\n- Node.js availability and version  \\n- Claude CLI availability and version\\n- GPU support (CUDA on Linux, Metal/MPS on macOS)\",\n  \".devcontainer/metal/Dockerfile\": \"FROM ubuntu:jammy\\n\\n# Install Python 3.11 and essential tools\\nRUN apt-get update && apt-get install -y --no-install-recommends \\\\\\n    python3.11 \\\\\\n    python3.11-dev \\\\\\n    python3.11-venv \\\\\\n    python3-pip \\\\\\n    curl \\\\\\n    git \\\\\\n    build-essential \\\\\\n    ca-certificates \\\\\\n    jq \\\\\\n    && rm -rf /var/lib/apt/lists/*\\n\\n# Set Python 3.11 as default\\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1 \\\\\\n    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1\\n\\n# Install Poetry\\nENV POETRY_HOME=/opt/poetry\\nENV PATH=\\\"$POETRY_HOME/bin:$PATH\\\"\\nRUN curl -sSL https://install.python-poetry.org | python3 - --version 1.8.2\\n\\n# Set PATH for user-installed binaries\\nENV PATH=\\\"/home/developer/.local/bin:$PATH\\\"\\n\\n# Set working directory\\nWORKDIR /workspace\\n\\n# Create non-root user\\nARG USERNAME=developer\\nARG USER_UID=1000\\nARG USER_GID=$USER_UID\\nRUN groupadd --gid $USER_GID $USERNAME \\\\\\n    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME\\n\\n# Switch to non-root user\\nUSER $USERNAME\\n\\n\",\n  \".devcontainer/metal/devcontainer.json\": \"{\\n  \\\"name\\\": \\\"crypto-dp-lab-metal\\\",\\n  \\\"dockerFile\\\": \\\"Dockerfile\\\",\\n  \\\"runArgs\\\": [],\\n  \\\"customizations\\\": {\\n    \\\"vscode\\\": {\\n      \\\"settings\\\": {\\n        \\\"terminal.integrated.defaultProfile.linux\\\": \\\"bash\\\",\\n        \\\"python.defaultInterpreterPath\\\": \\\"/usr/bin/python3.11\\\"\\n      },\\n      \\\"extensions\\\": [\\n        \\\"ms-python.python\\\",\\n        \\\"ms-python.vscode-pylance\\\"\\n      ]\\n    }\\n  },\\n  \\\"mounts\\\": [\\n    \\\"source=/opt/data,target=/opt/data,type=bind\\\"\\n  ],\\n  \\\"remoteUser\\\": \\\"developer\\\",\\n  \\\"postCreateCommand\\\": \\\"curl -fsSL https://claude.ai/install.sh | bash && echo 'Claude Code installed' && mkdir -p ~/.config/claude && echo '{\\\\\\\"theme\\\\\\\":\\\\\\\"dark\\\\\\\",\\\\\\\"colorblind_friendly\\\\\\\":true,\\\\\\\"account_type\\\\\\\":\\\\\\\"claude\\\\\\\",\\\\\\\"default_settings\\\\\\\":true,\\\\\\\"trust_files\\\\\\\":true,\\\\\\\"editor\\\\\\\":\\\\\\\"vscode\\\\\\\"}' > ~/.config/claude/config.json && echo 'Claude Code pre-configured' || echo 'Claude Code setup failed'\\\"\\n}\\n\",\n  \".devcontainer/cuda/Dockerfile\": \"FROM nvidia/cuda:12.8.0-devel-ubuntu22.04\\n\\n# Install Python 3.11 and essential tools\\nRUN apt-get update && apt-get install -y --no-install-recommends \\\\\\n    software-properties-common \\\\\\n    && add-apt-repository ppa:deadsnakes/ppa \\\\\\n    && apt-get update && apt-get install -y --no-install-recommends \\\\\\n    python3.11 \\\\\\n    python3.11-dev \\\\\\n    python3.11-venv \\\\\\n    python3.11-distutils \\\\\\n    curl \\\\\\n    git \\\\\\n    build-essential \\\\\\n    ca-certificates \\\\\\n    jq \\\\\\n    && rm -rf /var/lib/apt/lists/*\\n\\n# Set Python 3.11 as default\\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1 \\\\\\n    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1\\n\\n# Install pip for Python 3.11\\nRUN curl -sS https://bootstrap.pypa.io/get-pip.py | python3.11\\n\\n# Install Poetry\\nENV POETRY_HOME=/opt/poetry\\nENV PATH=\\\"$POETRY_HOME/bin:$PATH\\\"\\nRUN curl -sSL https://install.python-poetry.org | python3 - --version 1.8.2\\n\\n# Set PATH for user-installed binaries\\nENV PATH=\\\"/home/developer/.local/bin:$PATH\\\"\\n\\n# Set working directory\\nWORKDIR /workspace\\n\\n# Create non-root user\\nARG USERNAME=developer\\nARG USER_UID=1000\\nARG USER_GID=$USER_UID\\nRUN groupadd --gid $USER_GID $USERNAME \\\\\\n    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME\\n\\n# Switch to non-root user\\nUSER $USERNAME\",\n  \".devcontainer/cuda/devcontainer.json\": \"{\\n  \\\"name\\\": \\\"crypto-dp-lab-cuda\\\",\\n  \\\"dockerFile\\\": \\\"Dockerfile\\\",\\n  \\\"runArgs\\\": [\\\"--gpus\\\", \\\"all\\\"],\\n  \\\"customizations\\\": {\\n    \\\"vscode\\\": {\\n      \\\"settings\\\": {\\n        \\\"terminal.integrated.defaultProfile.linux\\\": \\\"bash\\\",\\n        \\\"python.defaultInterpreterPath\\\": \\\"/usr/bin/python3.11\\\"\\n      },\\n      \\\"extensions\\\": [\\n        \\\"ms-python.python\\\",\\n        \\\"ms-python.vscode-pylance\\\"\\n      ]\\n    }\\n  },\\n  \\\"mounts\\\": [\\n    \\\"source=/opt/data,target=/opt/data,type=bind\\\"\\n  ],\\n  \\\"remoteUser\\\": \\\"developer\\\",\\n  \\\"postCreateCommand\\\": \\\"curl -fsSL https://claude.ai/install.sh | bash && echo 'Claude Code installed' && mkdir -p ~/.config/claude && echo '{\\\\\\\"theme\\\\\\\":\\\\\\\"dark\\\\\\\",\\\\\\\"colorblind_friendly\\\\\\\":true,\\\\\\\"account_type\\\\\\\":\\\\\\\"claude\\\\\\\",\\\\\\\"default_settings\\\\\\\":true,\\\\\\\"trust_files\\\\\\\":true,\\\\\\\"editor\\\\\\\":\\\\\\\"vscode\\\\\\\"}' > ~/.config/claude/config.json && echo 'Claude Code pre-configured' || echo 'Claude Code setup failed'\\\"\\n}\",\n  \"scripts/format_check.sh\": \"#!/bin/bash\\nset -euo pipefail\\n\\necho \\\"🔍 Running code format checks...\\\"\\n\\n# Check if we're in a poetry environment\\nif ! command -v poetry >/dev/null 2>&1; then\\n    echo \\\"❌ Poetry not found\\\"\\n    exit 1\\nfi\\n\\n# Run black format check\\necho \\\"🔍 Checking code formatting with black...\\\"\\nif ! poetry run black --check --diff src/ 2>/dev/null; then\\n    echo \\\"❌ Black formatting issues found\\\"\\n    exit 1\\nfi\\necho \\\"✅ Black formatting OK\\\"\\n\\n# Run isort import order check  \\necho \\\"🔍 Checking import order with isort...\\\"\\nif ! poetry run isort --check-only --diff src/ 2>/dev/null; then\\n    echo \\\"❌ Import order issues found\\\"\\n    exit 1\\nfi\\necho \\\"✅ Import order OK\\\"\\n\\n# Run flake8 linting\\necho \\\"🔍 Running flake8 linting...\\\"\\nif ! poetry run flake8 src/ 2>/dev/null; then\\n    echo \\\"❌ Flake8 linting issues found\\\"\\n    exit 1\\nfi\\necho \\\"✅ Flake8 linting OK\\\"\\n\\necho \\\"✅ All format checks passed\\\"\",\n  \"scripts/preflight.sh\": \"#!/bin/bash\\nset -euo pipefail\\n\\necho \\\"🔍 Pre-flight checks starting...\\\"\\n\\n# Check Poetry is available\\ncommand -v poetry >/dev/null || { echo \\\"❌ Poetry missing\\\"; exit 127; }\\necho \\\"✅ Poetry found: $(poetry --version)\\\"\\n\\n# Check Python version\\nif command -v python >/dev/null 2>&1; then\\n    PYTHON_VERSION=$(python --version 2>&1)\\n    echo \\\"✅ Python found: $PYTHON_VERSION\\\"\\n    \\n    # Ensure Python 3.11\\n    python -c \\\"import sys; sys.exit(0 if sys.version_info >= (3, 11) else 1)\\\" || {\\n        echo \\\"❌ Python 3.11+ required\\\"\\n        exit 1\\n    }\\nelse\\n    echo \\\"❌ Python not found\\\"\\n    exit 1\\nfi\\n\\n# Driver and GPU availability checks\\nif [ -f /proc/driver/nvidia/version ]; then\\n    echo \\\"🔍 Checking CUDA driver match...\\\"\\n    if command -v nvidia-smi >/dev/null 2>&1; then\\n        echo \\\"✅ NVIDIA driver available\\\"\\n        nvidia-smi --query-gpu=name,driver_version --format=csv,noheader || true\\n        \\n        # Check torch.cuda availability if torch is installed\\n        python -c \\\"\\nimport sys\\ntry:\\n    import torch\\n    if torch.cuda.is_available():\\n        print('✅ torch.cuda available')\\n        print(f'   CUDA devices: {torch.cuda.device_count()}')\\n    else:\\n        print('⚠️  torch.cuda not available')\\nexcept ImportError:\\n    print('⚠️  PyTorch not installed yet')\\n\\\" 2>/dev/null || echo \\\"⚠️  Could not check torch.cuda\\\"\\n    else\\n        echo \\\"❌ nvidia-smi not found\\\"\\n        exit 1\\n    fi\\nelif [ \\\"$(uname)\\\" = \\\"Darwin\\\" ]; then\\n    echo \\\"🔍 Checking Metal/MPS availability...\\\"\\n    python -c \\\"\\nimport sys\\ntry:\\n    import torch\\n    if torch.backends.mps.is_available():\\n        print('✅ MPS available')\\n    else:\\n        print('⚠️  MPS not available')\\nexcept ImportError:\\n    print('⚠️  PyTorch not installed yet')\\n\\\" 2>/dev/null || echo \\\"⚠️  Could not check MPS\\\"\\nfi\\n\\n# Test poetry install (dry run)\\nif [ -f \\\"pyproject.toml\\\" ]; then\\n    echo \\\"🔍 Testing poetry install...\\\"\\n    poetry check || { echo \\\"❌ pyproject.toml invalid\\\"; exit 1; }\\n    poetry install --dry-run >/dev/null 2>&1 || { echo \\\"❌ Poetry install would fail\\\"; exit 1; }\\n    echo \\\"✅ Poetry install test passed\\\"\\nelse\\n    echo \\\"⚠️  pyproject.toml not found, skipping poetry install test\\\"\\nfi\\n\\necho \\\"✅ Pre-flight checks complete\\\"\",\n  \".github/workflows/ci.yml\": \"name: CI\\n\\non:\\n  push:\\n    branches: [ main ]\\n  pull_request:\\n    branches: [ main ]\\n\\njobs:\\n  test:\\n    strategy:\\n      matrix:\\n        os: [macos-14, ubuntu-22.04]\\n        gpu: [cpu, cuda]\\n        exclude:\\n          # CUDA only available on Linux\\n          - os: macos-14\\n            gpu: cuda\\n          # CPU-only builds for both platforms\\n          - os: ubuntu-22.04\\n            gpu: cpu\\n\\n    runs-on: ${{ matrix.os }}\\n\\n    steps:\\n    - uses: actions/checkout@v4\\n\\n    - name: Set up Python 3.11\\n      uses: actions/setup-python@v4\\n      with:\\n        python-version: 3.11\\n\\n    - name: Install Poetry\\n      uses: snok/install-poetry@v1\\n      with:\\n        version: 1.8.2\\n        virtualenvs-create: true\\n        virtualenvs-in-project: true\\n\\n    - name: Cache Poetry dependencies\\n      uses: actions/cache@v3\\n      with:\\n        path: .venv\\n        key: venv-${{ runner.os }}-${{ matrix.gpu }}-${{ hashFiles('**/poetry.lock') }}\\n\\n    - name: Install dependencies\\n      run: poetry install --with dev\\n\\n    - name: Set up GPU environment\\n      if: matrix.gpu == 'cuda'\\n      run: |\\n        # This step would set up CUDA environment\\n        # Currently a placeholder for future CUDA setup\\n        echo \\\"Setting up CUDA environment\\\"\\n\\n    - name: Run pre-commit hooks\\n      run: |\\n        poetry run pre-commit install\\n        poetry run pre-commit run --all-files\\n\\n    - name: Run tests\\n      run: poetry run pytest -v\\n\\n    - name: Run preflight checks\\n      run: ./scripts/preflight.sh\",\n  \".git/config\": \"[core]\\n\\trepositoryformatversion = 0\\n\\tfilemode = true\\n\\tbare = false\\n\\tlogallrefupdates = true\\n\\tignorecase = true\\n\\tprecomposeunicode = true\\n[remote \\\"origin\\\"]\\n\\turl = https://github.com/evanfollis/crypto-agent-dp-lab.git\\n\\tfetch = +refs/heads/*:refs/remotes/origin/*\\n[branch \\\"main\\\"]\\n\\tremote = origin\\n\\tmerge = refs/heads/main\\n\",\n  \".git/HEAD\": \"ref: refs/heads/main\\n\",\n  \".git/description\": \"Unnamed repository; edit this file 'description' to name the repository.\\n\",\n  \".git/COMMIT_EDITMSG\": \"feat: add metal dev-container scaffold\\n\",\n  \".git/info/exclude\": \"# git ls-files --others --exclude-from=.git/info/exclude\\n# Lines that start with '#' are comments.\\n# For a project mostly in C, the following would be a good set of\\n# exclude patterns (uncomment them if you want to use them):\\n# *.[oa]\\n# *~\\n\",\n  \".git/logs/HEAD\": \"0000000000000000000000000000000000000000 643cdc5c3221202f6145b9335bcef8012f87b06c Evan Follis <evanfollis@gmail.com> 1752440973 -0500\\tcommit (initial): feat: add metal dev-container scaffold\\n\",\n  \".git/logs/refs/heads/main\": \"0000000000000000000000000000000000000000 643cdc5c3221202f6145b9335bcef8012f87b06c Evan Follis <evanfollis@gmail.com> 1752440973 -0500\\tcommit (initial): feat: add metal dev-container scaffold\\n\",\n  \".git/logs/refs/remotes/origin/main\": \"0000000000000000000000000000000000000000 643cdc5c3221202f6145b9335bcef8012f87b06c Evan Follis <evanfollis@gmail.com> 1752440986 -0500\\tupdate by push\\n\",\n  \".git/hooks/commit-msg.sample\": \"#!/bin/sh\\n#\\n# An example hook script to check the commit log message.\\n# Called by \\\"git commit\\\" with one argument, the name of the file\\n# that has the commit message.  The hook should exit with non-zero\\n# status after issuing an appropriate message if it wants to stop the\\n# commit.  The hook is allowed to edit the commit message file.\\n#\\n# To enable this hook, rename this file to \\\"commit-msg\\\".\\n\\n# Uncomment the below to add a Signed-off-by line to the message.\\n# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\\n# hook is more suited to it.\\n#\\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\\\(.*>\\\\).*$/Signed-off-by: \\\\1/p')\\n# grep -qs \\\"^$SOB\\\" \\\"$1\\\" || echo \\\"$SOB\\\" >> \\\"$1\\\"\\n\\n# This example catches duplicate Signed-off-by lines.\\n\\ntest \\\"\\\" = \\\"$(grep '^Signed-off-by: ' \\\"$1\\\" |\\n\\t sort | uniq -c | sed -e '/^[ \\t]*1[ \\t]/d')\\\" || {\\n\\techo >&2 Duplicate Signed-off-by lines.\\n\\texit 1\\n}\\n\",\n  \".git/hooks/pre-rebase.sample\": \"#!/bin/sh\\n#\\n# Copyright (c) 2006, 2008 Junio C Hamano\\n#\\n# The \\\"pre-rebase\\\" hook is run just before \\\"git rebase\\\" starts doing\\n# its job, and can prevent the command from running by exiting with\\n# non-zero status.\\n#\\n# The hook is called with the following parameters:\\n#\\n# $1 -- the upstream the series was forked from.\\n# $2 -- the branch being rebased (or empty when rebasing the current branch).\\n#\\n# This sample shows how to prevent topic branches that are already\\n# merged to 'next' branch from getting rebased, because allowing it\\n# would result in rebasing already published history.\\n\\npublish=next\\nbasebranch=\\\"$1\\\"\\nif test \\\"$#\\\" = 2\\nthen\\n\\ttopic=\\\"refs/heads/$2\\\"\\nelse\\n\\ttopic=`git symbolic-ref HEAD` ||\\n\\texit 0 ;# we do not interrupt rebasing detached HEAD\\nfi\\n\\ncase \\\"$topic\\\" in\\nrefs/heads/??/*)\\n\\t;;\\n*)\\n\\texit 0 ;# we do not interrupt others.\\n\\t;;\\nesac\\n\\n# Now we are dealing with a topic branch being rebased\\n# on top of master.  Is it OK to rebase it?\\n\\n# Does the topic really exist?\\ngit show-ref -q \\\"$topic\\\" || {\\n\\techo >&2 \\\"No such branch $topic\\\"\\n\\texit 1\\n}\\n\\n# Is topic fully merged to master?\\nnot_in_master=`git rev-list --pretty=oneline ^master \\\"$topic\\\"`\\nif test -z \\\"$not_in_master\\\"\\nthen\\n\\techo >&2 \\\"$topic is fully merged to master; better remove it.\\\"\\n\\texit 1 ;# we could allow it, but there is no point.\\nfi\\n\\n# Is topic ever merged to next?  If so you should not be rebasing it.\\nonly_next_1=`git rev-list ^master \\\"^$topic\\\" ${publish} | sort`\\nonly_next_2=`git rev-list ^master           ${publish} | sort`\\nif test \\\"$only_next_1\\\" = \\\"$only_next_2\\\"\\nthen\\n\\tnot_in_topic=`git rev-list \\\"^$topic\\\" master`\\n\\tif test -z \\\"$not_in_topic\\\"\\n\\tthen\\n\\t\\techo >&2 \\\"$topic is already up to date with master\\\"\\n\\t\\texit 1 ;# we could allow it, but there is no point.\\n\\telse\\n\\t\\texit 0\\n\\tfi\\nelse\\n\\tnot_in_next=`git rev-list --pretty=oneline ^${publish} \\\"$topic\\\"`\\n\\t/usr/bin/perl -e '\\n\\t\\tmy $topic = $ARGV[0];\\n\\t\\tmy $msg = \\\"* $topic has commits already merged to public branch:\\\\n\\\";\\n\\t\\tmy (%not_in_next) = map {\\n\\t\\t\\t/^([0-9a-f]+) /;\\n\\t\\t\\t($1 => 1);\\n\\t\\t} split(/\\\\n/, $ARGV[1]);\\n\\t\\tfor my $elem (map {\\n\\t\\t\\t\\t/^([0-9a-f]+) (.*)$/;\\n\\t\\t\\t\\t[$1 => $2];\\n\\t\\t\\t} split(/\\\\n/, $ARGV[2])) {\\n\\t\\t\\tif (!exists $not_in_next{$elem->[0]}) {\\n\\t\\t\\t\\tif ($msg) {\\n\\t\\t\\t\\t\\tprint STDERR $msg;\\n\\t\\t\\t\\t\\tundef $msg;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tprint STDERR \\\" $elem->[1]\\\\n\\\";\\n\\t\\t\\t}\\n\\t\\t}\\n\\t' \\\"$topic\\\" \\\"$not_in_next\\\" \\\"$not_in_master\\\"\\n\\texit 1\\nfi\\n\\n<<\\\\DOC_END\\n\\nThis sample hook safeguards topic branches that have been\\npublished from being rewound.\\n\\nThe workflow assumed here is:\\n\\n * Once a topic branch forks from \\\"master\\\", \\\"master\\\" is never\\n   merged into it again (either directly or indirectly).\\n\\n * Once a topic branch is fully cooked and merged into \\\"master\\\",\\n   it is deleted.  If you need to build on top of it to correct\\n   earlier mistakes, a new topic branch is created by forking at\\n   the tip of the \\\"master\\\".  This is not strictly necessary, but\\n   it makes it easier to keep your history simple.\\n\\n * Whenever you need to test or publish your changes to topic\\n   branches, merge them into \\\"next\\\" branch.\\n\\nThe script, being an example, hardcodes the publish branch name\\nto be \\\"next\\\", but it is trivial to make it configurable via\\n$GIT_DIR/config mechanism.\\n\\nWith this workflow, you would want to know:\\n\\n(1) ... if a topic branch has ever been merged to \\\"next\\\".  Young\\n    topic branches can have stupid mistakes you would rather\\n    clean up before publishing, and things that have not been\\n    merged into other branches can be easily rebased without\\n    affecting other people.  But once it is published, you would\\n    not want to rewind it.\\n\\n(2) ... if a topic branch has been fully merged to \\\"master\\\".\\n    Then you can delete it.  More importantly, you should not\\n    build on top of it -- other people may already want to\\n    change things related to the topic as patches against your\\n    \\\"master\\\", so if you need further changes, it is better to\\n    fork the topic (perhaps with the same name) afresh from the\\n    tip of \\\"master\\\".\\n\\nLet's look at this example:\\n\\n\\t\\t   o---o---o---o---o---o---o---o---o---o \\\"next\\\"\\n\\t\\t  /       /           /           /\\n\\t\\t /   a---a---b A     /           /\\n\\t\\t/   /               /           /\\n\\t       /   /   c---c---c---c B         /\\n\\t      /   /   /             \\\\         /\\n\\t     /   /   /   b---b C     \\\\       /\\n\\t    /   /   /   /             \\\\     /\\n    ---o---o---o---o---o---o---o---o---o---o---o \\\"master\\\"\\n\\n\\nA, B and C are topic branches.\\n\\n * A has one fix since it was merged up to \\\"next\\\".\\n\\n * B has finished.  It has been fully merged up to \\\"master\\\" and \\\"next\\\",\\n   and is ready to be deleted.\\n\\n * C has not merged to \\\"next\\\" at all.\\n\\nWe would want to allow C to be rebased, refuse A, and encourage\\nB to be deleted.\\n\\nTo compute (1):\\n\\n\\tgit rev-list ^master ^topic next\\n\\tgit rev-list ^master        next\\n\\n\\tif these match, topic has not merged in next at all.\\n\\nTo compute (2):\\n\\n\\tgit rev-list master..topic\\n\\n\\tif this is empty, it is fully merged to \\\"master\\\".\\n\\nDOC_END\\n\",\n  \".git/hooks/pre-commit.sample\": \"#!/bin/sh\\n#\\n# An example hook script to verify what is about to be committed.\\n# Called by \\\"git commit\\\" with no arguments.  The hook should\\n# exit with non-zero status after issuing an appropriate message if\\n# it wants to stop the commit.\\n#\\n# To enable this hook, rename this file to \\\"pre-commit\\\".\\n\\nif git rev-parse --verify HEAD >/dev/null 2>&1\\nthen\\n\\tagainst=HEAD\\nelse\\n\\t# Initial commit: diff against an empty tree object\\n\\tagainst=$(git hash-object -t tree /dev/null)\\nfi\\n\\n# If you want to allow non-ASCII filenames set this variable to true.\\nallownonascii=$(git config --type=bool hooks.allownonascii)\\n\\n# Redirect output to stderr.\\nexec 1>&2\\n\\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\\n# them from being added to the repository. We exploit the fact that the\\n# printable range starts at the space character and ends with tilde.\\nif [ \\\"$allownonascii\\\" != \\\"true\\\" ] &&\\n\\t# Note that the use of brackets around a tr range is ok here, (it's\\n\\t# even required, for portability to Solaris 10's /usr/bin/tr), since\\n\\t# the square bracket bytes happen to fall in the designated range.\\n\\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\\n\\t  LC_ALL=C tr -d '[ -~]\\\\0' | wc -c) != 0\\nthen\\n\\tcat <<\\\\EOF\\nError: Attempt to add a non-ASCII file name.\\n\\nThis can cause problems if you want to work with people on other platforms.\\n\\nTo be portable it is advisable to rename the file.\\n\\nIf you know what you are doing you can disable this check using:\\n\\n  git config hooks.allownonascii true\\nEOF\\n\\texit 1\\nfi\\n\\n# If there are whitespace errors, print the offending file names and fail.\\nexec git diff-index --check --cached $against --\\n\",\n  \".git/hooks/applypatch-msg.sample\": \"#!/bin/sh\\n#\\n# An example hook script to check the commit log message taken by\\n# applypatch from an e-mail message.\\n#\\n# The hook should exit with non-zero status after issuing an\\n# appropriate message if it wants to stop the commit.  The hook is\\n# allowed to edit the commit message file.\\n#\\n# To enable this hook, rename this file to \\\"applypatch-msg\\\".\\n\\n. git-sh-setup\\ncommitmsg=\\\"$(git rev-parse --git-path hooks/commit-msg)\\\"\\ntest -x \\\"$commitmsg\\\" && exec \\\"$commitmsg\\\" ${1+\\\"$@\\\"}\\n:\\n\",\n  \".git/hooks/fsmonitor-watchman.sample\": \"#!/usr/bin/perl\\n\\nuse strict;\\nuse warnings;\\nuse IPC::Open2;\\n\\n# An example hook script to integrate Watchman\\n# (https://facebook.github.io/watchman/) with git to speed up detecting\\n# new and modified files.\\n#\\n# The hook is passed a version (currently 2) and last update token\\n# formatted as a string and outputs to stdout a new update token and\\n# all files that have been modified since the update token. Paths must\\n# be relative to the root of the working tree and separated by a single NUL.\\n#\\n# To enable this hook, rename this file to \\\"query-watchman\\\" and set\\n# 'git config core.fsmonitor .git/hooks/query-watchman'\\n#\\nmy ($version, $last_update_token) = @ARGV;\\n\\n# Uncomment for debugging\\n# print STDERR \\\"$0 $version $last_update_token\\\\n\\\";\\n\\n# Check the hook interface version\\nif ($version ne 2) {\\n\\tdie \\\"Unsupported query-fsmonitor hook version '$version'.\\\\n\\\" .\\n\\t    \\\"Falling back to scanning...\\\\n\\\";\\n}\\n\\nmy $git_work_tree = get_working_dir();\\n\\nmy $retry = 1;\\n\\nmy $json_pkg;\\neval {\\n\\trequire JSON::XS;\\n\\t$json_pkg = \\\"JSON::XS\\\";\\n\\t1;\\n} or do {\\n\\trequire JSON::PP;\\n\\t$json_pkg = \\\"JSON::PP\\\";\\n};\\n\\nlaunch_watchman();\\n\\nsub launch_watchman {\\n\\tmy $o = watchman_query();\\n\\tif (is_work_tree_watched($o)) {\\n\\t\\toutput_result($o->{clock}, @{$o->{files}});\\n\\t}\\n}\\n\\nsub output_result {\\n\\tmy ($clockid, @files) = @_;\\n\\n\\t# Uncomment for debugging watchman output\\n\\t# open (my $fh, \\\">\\\", \\\".git/watchman-output.out\\\");\\n\\t# binmode $fh, \\\":utf8\\\";\\n\\t# print $fh \\\"$clockid\\\\n@files\\\\n\\\";\\n\\t# close $fh;\\n\\n\\tbinmode STDOUT, \\\":utf8\\\";\\n\\tprint $clockid;\\n\\tprint \\\"\\\\0\\\";\\n\\tlocal $, = \\\"\\\\0\\\";\\n\\tprint @files;\\n}\\n\\nsub watchman_clock {\\n\\tmy $response = qx/watchman clock \\\"$git_work_tree\\\"/;\\n\\tdie \\\"Failed to get clock id on '$git_work_tree'.\\\\n\\\" .\\n\\t\\t\\\"Falling back to scanning...\\\\n\\\" if $? != 0;\\n\\n\\treturn $json_pkg->new->utf8->decode($response);\\n}\\n\\nsub watchman_query {\\n\\tmy $pid = open2(\\\\*CHLD_OUT, \\\\*CHLD_IN, 'watchman -j --no-pretty')\\n\\tor die \\\"open2() failed: $!\\\\n\\\" .\\n\\t\\\"Falling back to scanning...\\\\n\\\";\\n\\n\\t# In the query expression below we're asking for names of files that\\n\\t# changed since $last_update_token but not from the .git folder.\\n\\t#\\n\\t# To accomplish this, we're using the \\\"since\\\" generator to use the\\n\\t# recency index to select candidate nodes and \\\"fields\\\" to limit the\\n\\t# output to file names only. Then we're using the \\\"expression\\\" term to\\n\\t# further constrain the results.\\n\\tmy $last_update_line = \\\"\\\";\\n\\tif (substr($last_update_token, 0, 1) eq \\\"c\\\") {\\n\\t\\t$last_update_token = \\\"\\\\\\\"$last_update_token\\\\\\\"\\\";\\n\\t\\t$last_update_line = qq[\\\\n\\\"since\\\": $last_update_token,];\\n\\t}\\n\\tmy $query = <<\\\"\\tEND\\\";\\n\\t\\t[\\\"query\\\", \\\"$git_work_tree\\\", {$last_update_line\\n\\t\\t\\t\\\"fields\\\": [\\\"name\\\"],\\n\\t\\t\\t\\\"expression\\\": [\\\"not\\\", [\\\"dirname\\\", \\\".git\\\"]]\\n\\t\\t}]\\n\\tEND\\n\\n\\t# Uncomment for debugging the watchman query\\n\\t# open (my $fh, \\\">\\\", \\\".git/watchman-query.json\\\");\\n\\t# print $fh $query;\\n\\t# close $fh;\\n\\n\\tprint CHLD_IN $query;\\n\\tclose CHLD_IN;\\n\\tmy $response = do {local $/; <CHLD_OUT>};\\n\\n\\t# Uncomment for debugging the watch response\\n\\t# open ($fh, \\\">\\\", \\\".git/watchman-response.json\\\");\\n\\t# print $fh $response;\\n\\t# close $fh;\\n\\n\\tdie \\\"Watchman: command returned no output.\\\\n\\\" .\\n\\t\\\"Falling back to scanning...\\\\n\\\" if $response eq \\\"\\\";\\n\\tdie \\\"Watchman: command returned invalid output: $response\\\\n\\\" .\\n\\t\\\"Falling back to scanning...\\\\n\\\" unless $response =~ /^\\\\{/;\\n\\n\\treturn $json_pkg->new->utf8->decode($response);\\n}\\n\\nsub is_work_tree_watched {\\n\\tmy ($output) = @_;\\n\\tmy $error = $output->{error};\\n\\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\\n\\t\\t$retry--;\\n\\t\\tmy $response = qx/watchman watch \\\"$git_work_tree\\\"/;\\n\\t\\tdie \\\"Failed to make watchman watch '$git_work_tree'.\\\\n\\\" .\\n\\t\\t    \\\"Falling back to scanning...\\\\n\\\" if $? != 0;\\n\\t\\t$output = $json_pkg->new->utf8->decode($response);\\n\\t\\t$error = $output->{error};\\n\\t\\tdie \\\"Watchman: $error.\\\\n\\\" .\\n\\t\\t\\\"Falling back to scanning...\\\\n\\\" if $error;\\n\\n\\t\\t# Uncomment for debugging watchman output\\n\\t\\t# open (my $fh, \\\">\\\", \\\".git/watchman-output.out\\\");\\n\\t\\t# close $fh;\\n\\n\\t\\t# Watchman will always return all files on the first query so\\n\\t\\t# return the fast \\\"everything is dirty\\\" flag to git and do the\\n\\t\\t# Watchman query just to get it over with now so we won't pay\\n\\t\\t# the cost in git to look up each individual file.\\n\\t\\tmy $o = watchman_clock();\\n\\t\\t$error = $output->{error};\\n\\n\\t\\tdie \\\"Watchman: $error.\\\\n\\\" .\\n\\t\\t\\\"Falling back to scanning...\\\\n\\\" if $error;\\n\\n\\t\\toutput_result($o->{clock}, (\\\"/\\\"));\\n\\t\\t$last_update_token = $o->{clock};\\n\\n\\t\\teval { launch_watchman() };\\n\\t\\treturn 0;\\n\\t}\\n\\n\\tdie \\\"Watchman: $error.\\\\n\\\" .\\n\\t\\\"Falling back to scanning...\\\\n\\\" if $error;\\n\\n\\treturn 1;\\n}\\n\\nsub get_working_dir {\\n\\tmy $working_dir;\\n\\tif ($^O =~ 'msys' || $^O =~ 'cygwin') {\\n\\t\\t$working_dir = Win32::GetCwd();\\n\\t\\t$working_dir =~ tr/\\\\\\\\/\\\\//;\\n\\t} else {\\n\\t\\trequire Cwd;\\n\\t\\t$working_dir = Cwd::cwd();\\n\\t}\\n\\n\\treturn $working_dir;\\n}\\n\",\n  \".git/hooks/pre-receive.sample\": \"#!/bin/sh\\n#\\n# An example hook script to make use of push options.\\n# The example simply echoes all push options that start with 'echoback='\\n# and rejects all pushes when the \\\"reject\\\" push option is used.\\n#\\n# To enable this hook, rename this file to \\\"pre-receive\\\".\\n\\nif test -n \\\"$GIT_PUSH_OPTION_COUNT\\\"\\nthen\\n\\ti=0\\n\\twhile test \\\"$i\\\" -lt \\\"$GIT_PUSH_OPTION_COUNT\\\"\\n\\tdo\\n\\t\\teval \\\"value=\\\\$GIT_PUSH_OPTION_$i\\\"\\n\\t\\tcase \\\"$value\\\" in\\n\\t\\techoback=*)\\n\\t\\t\\techo \\\"echo from the pre-receive-hook: ${value#*=}\\\" >&2\\n\\t\\t\\t;;\\n\\t\\treject)\\n\\t\\t\\texit 1\\n\\t\\tesac\\n\\t\\ti=$((i + 1))\\n\\tdone\\nfi\\n\",\n  \".git/hooks/prepare-commit-msg.sample\": \"#!/bin/sh\\n#\\n# An example hook script to prepare the commit log message.\\n# Called by \\\"git commit\\\" with the name of the file that has the\\n# commit message, followed by the description of the commit\\n# message's source.  The hook's purpose is to edit the commit\\n# message file.  If the hook fails with a non-zero status,\\n# the commit is aborted.\\n#\\n# To enable this hook, rename this file to \\\"prepare-commit-msg\\\".\\n\\n# This hook includes three examples. The first one removes the\\n# \\\"# Please enter the commit message...\\\" help message.\\n#\\n# The second includes the output of \\\"git diff --name-status -r\\\"\\n# into the message, just before the \\\"git status\\\" output.  It is\\n# commented because it doesn't cope with --amend or with squashed\\n# commits.\\n#\\n# The third example adds a Signed-off-by line to the message, that can\\n# still be edited.  This is rarely a good idea.\\n\\nCOMMIT_MSG_FILE=$1\\nCOMMIT_SOURCE=$2\\nSHA1=$3\\n\\n/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' \\\"$COMMIT_MSG_FILE\\\"\\n\\n# case \\\"$COMMIT_SOURCE,$SHA1\\\" in\\n#  ,|template,)\\n#    /usr/bin/perl -i.bak -pe '\\n#       print \\\"\\\\n\\\" . `git diff --cached --name-status -r`\\n# \\t if /^#/ && $first++ == 0' \\\"$COMMIT_MSG_FILE\\\" ;;\\n#  *) ;;\\n# esac\\n\\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\\\(.*>\\\\).*$/Signed-off-by: \\\\1/p')\\n# git interpret-trailers --in-place --trailer \\\"$SOB\\\" \\\"$COMMIT_MSG_FILE\\\"\\n# if test -z \\\"$COMMIT_SOURCE\\\"\\n# then\\n#   /usr/bin/perl -i.bak -pe 'print \\\"\\\\n\\\" if !$first_line++' \\\"$COMMIT_MSG_FILE\\\"\\n# fi\\n\",\n  \".git/hooks/post-update.sample\": \"#!/bin/sh\\n#\\n# An example hook script to prepare a packed repository for use over\\n# dumb transports.\\n#\\n# To enable this hook, rename this file to \\\"post-update\\\".\\n\\nexec git update-server-info\\n\",\n  \".git/hooks/pre-merge-commit.sample\": \"#!/bin/sh\\n#\\n# An example hook script to verify what is about to be committed.\\n# Called by \\\"git merge\\\" with no arguments.  The hook should\\n# exit with non-zero status after issuing an appropriate message to\\n# stderr if it wants to stop the merge commit.\\n#\\n# To enable this hook, rename this file to \\\"pre-merge-commit\\\".\\n\\n. git-sh-setup\\ntest -x \\\"$GIT_DIR/hooks/pre-commit\\\" &&\\n        exec \\\"$GIT_DIR/hooks/pre-commit\\\"\\n:\\n\",\n  \".git/hooks/pre-applypatch.sample\": \"#!/bin/sh\\n#\\n# An example hook script to verify what is about to be committed\\n# by applypatch from an e-mail message.\\n#\\n# The hook should exit with non-zero status after issuing an\\n# appropriate message if it wants to stop the commit.\\n#\\n# To enable this hook, rename this file to \\\"pre-applypatch\\\".\\n\\n. git-sh-setup\\nprecommit=\\\"$(git rev-parse --git-path hooks/pre-commit)\\\"\\ntest -x \\\"$precommit\\\" && exec \\\"$precommit\\\" ${1+\\\"$@\\\"}\\n:\\n\",\n  \".git/hooks/pre-push.sample\": \"#!/bin/sh\\n\\n# An example hook script to verify what is about to be pushed.  Called by \\\"git\\n# push\\\" after it has checked the remote status, but before anything has been\\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\\n#\\n# This hook is called with the following parameters:\\n#\\n# $1 -- Name of the remote to which the push is being done\\n# $2 -- URL to which the push is being done\\n#\\n# If pushing without using a named remote those arguments will be equal.\\n#\\n# Information about the commits which are being pushed is supplied as lines to\\n# the standard input in the form:\\n#\\n#   <local ref> <local oid> <remote ref> <remote oid>\\n#\\n# This sample shows how to prevent push of commits where the log message starts\\n# with \\\"WIP\\\" (work in progress).\\n\\nremote=\\\"$1\\\"\\nurl=\\\"$2\\\"\\n\\nzero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')\\n\\nwhile read local_ref local_oid remote_ref remote_oid\\ndo\\n\\tif test \\\"$local_oid\\\" = \\\"$zero\\\"\\n\\tthen\\n\\t\\t# Handle delete\\n\\t\\t:\\n\\telse\\n\\t\\tif test \\\"$remote_oid\\\" = \\\"$zero\\\"\\n\\t\\tthen\\n\\t\\t\\t# New branch, examine all commits\\n\\t\\t\\trange=\\\"$local_oid\\\"\\n\\t\\telse\\n\\t\\t\\t# Update to existing branch, examine new commits\\n\\t\\t\\trange=\\\"$remote_oid..$local_oid\\\"\\n\\t\\tfi\\n\\n\\t\\t# Check for WIP commit\\n\\t\\tcommit=$(git rev-list -n 1 --grep '^WIP' \\\"$range\\\")\\n\\t\\tif test -n \\\"$commit\\\"\\n\\t\\tthen\\n\\t\\t\\techo >&2 \\\"Found WIP commit in $local_ref, not pushing\\\"\\n\\t\\t\\texit 1\\n\\t\\tfi\\n\\tfi\\ndone\\n\\nexit 0\\n\",\n  \".git/hooks/update.sample\": \"#!/bin/sh\\n#\\n# An example hook script to block unannotated tags from entering.\\n# Called by \\\"git receive-pack\\\" with arguments: refname sha1-old sha1-new\\n#\\n# To enable this hook, rename this file to \\\"update\\\".\\n#\\n# Config\\n# ------\\n# hooks.allowunannotated\\n#   This boolean sets whether unannotated tags will be allowed into the\\n#   repository.  By default they won't be.\\n# hooks.allowdeletetag\\n#   This boolean sets whether deleting tags will be allowed in the\\n#   repository.  By default they won't be.\\n# hooks.allowmodifytag\\n#   This boolean sets whether a tag may be modified after creation. By default\\n#   it won't be.\\n# hooks.allowdeletebranch\\n#   This boolean sets whether deleting branches will be allowed in the\\n#   repository.  By default they won't be.\\n# hooks.denycreatebranch\\n#   This boolean sets whether remotely creating branches will be denied\\n#   in the repository.  By default this is allowed.\\n#\\n\\n# --- Command line\\nrefname=\\\"$1\\\"\\noldrev=\\\"$2\\\"\\nnewrev=\\\"$3\\\"\\n\\n# --- Safety check\\nif [ -z \\\"$GIT_DIR\\\" ]; then\\n\\techo \\\"Don't run this script from the command line.\\\" >&2\\n\\techo \\\" (if you want, you could supply GIT_DIR then run\\\" >&2\\n\\techo \\\"  $0 <ref> <oldrev> <newrev>)\\\" >&2\\n\\texit 1\\nfi\\n\\nif [ -z \\\"$refname\\\" -o -z \\\"$oldrev\\\" -o -z \\\"$newrev\\\" ]; then\\n\\techo \\\"usage: $0 <ref> <oldrev> <newrev>\\\" >&2\\n\\texit 1\\nfi\\n\\n# --- Config\\nallowunannotated=$(git config --type=bool hooks.allowunannotated)\\nallowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)\\ndenycreatebranch=$(git config --type=bool hooks.denycreatebranch)\\nallowdeletetag=$(git config --type=bool hooks.allowdeletetag)\\nallowmodifytag=$(git config --type=bool hooks.allowmodifytag)\\n\\n# check for no description\\nprojectdesc=$(sed -e '1q' \\\"$GIT_DIR/description\\\")\\ncase \\\"$projectdesc\\\" in\\n\\\"Unnamed repository\\\"* | \\\"\\\")\\n\\techo \\\"*** Project description file hasn't been set\\\" >&2\\n\\texit 1\\n\\t;;\\nesac\\n\\n# --- Check types\\n# if $newrev is 0000...0000, it's a commit to delete a ref.\\nzero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')\\nif [ \\\"$newrev\\\" = \\\"$zero\\\" ]; then\\n\\tnewrev_type=delete\\nelse\\n\\tnewrev_type=$(git cat-file -t $newrev)\\nfi\\n\\ncase \\\"$refname\\\",\\\"$newrev_type\\\" in\\n\\trefs/tags/*,commit)\\n\\t\\t# un-annotated tag\\n\\t\\tshort_refname=${refname##refs/tags/}\\n\\t\\tif [ \\\"$allowunannotated\\\" != \\\"true\\\" ]; then\\n\\t\\t\\techo \\\"*** The un-annotated tag, $short_refname, is not allowed in this repository\\\" >&2\\n\\t\\t\\techo \\\"*** Use 'git tag [ -a | -s ]' for tags you want to propagate.\\\" >&2\\n\\t\\t\\texit 1\\n\\t\\tfi\\n\\t\\t;;\\n\\trefs/tags/*,delete)\\n\\t\\t# delete tag\\n\\t\\tif [ \\\"$allowdeletetag\\\" != \\\"true\\\" ]; then\\n\\t\\t\\techo \\\"*** Deleting a tag is not allowed in this repository\\\" >&2\\n\\t\\t\\texit 1\\n\\t\\tfi\\n\\t\\t;;\\n\\trefs/tags/*,tag)\\n\\t\\t# annotated tag\\n\\t\\tif [ \\\"$allowmodifytag\\\" != \\\"true\\\" ] && git rev-parse $refname > /dev/null 2>&1\\n\\t\\tthen\\n\\t\\t\\techo \\\"*** Tag '$refname' already exists.\\\" >&2\\n\\t\\t\\techo \\\"*** Modifying a tag is not allowed in this repository.\\\" >&2\\n\\t\\t\\texit 1\\n\\t\\tfi\\n\\t\\t;;\\n\\trefs/heads/*,commit)\\n\\t\\t# branch\\n\\t\\tif [ \\\"$oldrev\\\" = \\\"$zero\\\" -a \\\"$denycreatebranch\\\" = \\\"true\\\" ]; then\\n\\t\\t\\techo \\\"*** Creating a branch is not allowed in this repository\\\" >&2\\n\\t\\t\\texit 1\\n\\t\\tfi\\n\\t\\t;;\\n\\trefs/heads/*,delete)\\n\\t\\t# delete branch\\n\\t\\tif [ \\\"$allowdeletebranch\\\" != \\\"true\\\" ]; then\\n\\t\\t\\techo \\\"*** Deleting a branch is not allowed in this repository\\\" >&2\\n\\t\\t\\texit 1\\n\\t\\tfi\\n\\t\\t;;\\n\\trefs/remotes/*,commit)\\n\\t\\t# tracking branch\\n\\t\\t;;\\n\\trefs/remotes/*,delete)\\n\\t\\t# delete tracking branch\\n\\t\\tif [ \\\"$allowdeletebranch\\\" != \\\"true\\\" ]; then\\n\\t\\t\\techo \\\"*** Deleting a tracking branch is not allowed in this repository\\\" >&2\\n\\t\\t\\texit 1\\n\\t\\tfi\\n\\t\\t;;\\n\\t*)\\n\\t\\t# Anything else (is there anything else?)\\n\\t\\techo \\\"*** Update hook: unknown type of update to ref $refname of type $newrev_type\\\" >&2\\n\\t\\texit 1\\n\\t\\t;;\\nesac\\n\\n# --- Finished\\nexit 0\\n\",\n  \".git/hooks/push-to-checkout.sample\": \"#!/bin/sh\\n\\n# An example hook script to update a checked-out tree on a git push.\\n#\\n# This hook is invoked by git-receive-pack(1) when it reacts to git\\n# push and updates reference(s) in its repository, and when the push\\n# tries to update the branch that is currently checked out and the\\n# receive.denyCurrentBranch configuration variable is set to\\n# updateInstead.\\n#\\n# By default, such a push is refused if the working tree and the index\\n# of the remote repository has any difference from the currently\\n# checked out commit; when both the working tree and the index match\\n# the current commit, they are updated to match the newly pushed tip\\n# of the branch. This hook is to be used to override the default\\n# behaviour; however the code below reimplements the default behaviour\\n# as a starting point for convenient modification.\\n#\\n# The hook receives the commit with which the tip of the current\\n# branch is going to be updated:\\ncommit=$1\\n\\n# It can exit with a non-zero status to refuse the push (when it does\\n# so, it must not modify the index or the working tree).\\ndie () {\\n\\techo >&2 \\\"$*\\\"\\n\\texit 1\\n}\\n\\n# Or it can make any necessary changes to the working tree and to the\\n# index to bring them to the desired state when the tip of the current\\n# branch is updated to the new commit, and exit with a zero status.\\n#\\n# For example, the hook can simply run git read-tree -u -m HEAD \\\"$1\\\"\\n# in order to emulate git fetch that is run in the reverse direction\\n# with git push, as the two-tree form of git read-tree -u -m is\\n# essentially the same as git switch or git checkout that switches\\n# branches while keeping the local changes in the working tree that do\\n# not interfere with the difference between the branches.\\n\\n# The below is a more-or-less exact translation to shell of the C code\\n# for the default behaviour for git's push-to-checkout hook defined in\\n# the push_to_deploy() function in builtin/receive-pack.c.\\n#\\n# Note that the hook will be executed from the repository directory,\\n# not from the working tree, so if you want to perform operations on\\n# the working tree, you will have to adapt your code accordingly, e.g.\\n# by adding \\\"cd ..\\\" or using relative paths.\\n\\nif ! git update-index -q --ignore-submodules --refresh\\nthen\\n\\tdie \\\"Up-to-date check failed\\\"\\nfi\\n\\nif ! git diff-files --quiet --ignore-submodules --\\nthen\\n\\tdie \\\"Working directory has unstaged changes\\\"\\nfi\\n\\n# This is a rough translation of:\\n#\\n#   head_has_history() ? \\\"HEAD\\\" : EMPTY_TREE_SHA1_HEX\\nif git cat-file -e HEAD 2>/dev/null\\nthen\\n\\thead=HEAD\\nelse\\n\\thead=$(git hash-object -t tree --stdin </dev/null)\\nfi\\n\\nif ! git diff-index --quiet --cached --ignore-submodules $head --\\nthen\\n\\tdie \\\"Working directory has staged changes\\\"\\nfi\\n\\nif ! git read-tree -u -m \\\"$commit\\\"\\nthen\\n\\tdie \\\"Could not update working tree to new HEAD\\\"\\nfi\\n\",\n  \".git/refs/heads/main\": \"643cdc5c3221202f6145b9335bcef8012f87b06c\\n\",\n  \".git/refs/remotes/origin/main\": \"643cdc5c3221202f6145b9335bcef8012f87b06c\\n\",\n  \"src/dp_lab/__init__.py\": \"# DP-Crypto Lab Package\\n__version__ = \\\"0.0.1\\\"\\n\"\n}",
  "export_to_json.py": "#!/usr/bin/env python3\nimport sys, os, json\n\ndef export_to_json(root_dir, out_file):\n    data = {}\n    for dirpath, _, filenames in os.walk(root_dir):\n        for fname in filenames:\n            full = os.path.join(dirpath, fname)\n            rel = os.path.relpath(full, root_dir)\n            try:\n                with open(full, encoding='utf-8') as f:\n                    data[rel] = f.read()\n            except Exception as e:\n                print(f\"⚠️ Skipping {rel}: {e}\", file=sys.stderr)\n    with open(out_file, 'w', encoding='utf-8') as out:\n        json.dump(data, out, ensure_ascii=False, indent=2)\n    print(f\"✅ Wrote {len(data)} entries to {out_file!r}\")\n\nif __name__ == '__main__':\n    if len(sys.argv) != 2:\n        print(\"Usage: script.py <root_directory>\", file=sys.stderr)\n        sys.exit(1)\n    root = sys.argv[1]\n    name = os.path.basename(os.path.abspath(root)) or 'export'\n    export_to_json(root, f\"{name}.json\")\n",
  "pyproject.toml": "[tool.poetry]\nname = \"crypto-agent-dp-lab\"\nversion = \"0.0.1\"\ndescription = \"Differentiable programming / reinforcement learning framework for crypto trading\"\nauthors = [\"Evan Follis <evan.follis@gmail.com>\"]\npackages = [{ include = \"crypto_dp\", from = \"src\" }]\n\n[tool.poetry.dependencies]\npython = \"^3.11\"\njax = \"^0.4.21\"\njaxlib = \"^0.4.21\"\nequinox = \"^0.11.0\"\noptax = \"^0.1.7\"\nnumpy = \"^1.24\"\npandas = \"^1.5\"\nnetworkx = \"^2.8\"\n\n[tool.poetry.group.dev.dependencies]\nblack = \"^24.3.0\"\nisort = \"^5.13.2\"\nflake8 = \"^7.0.0\"\npytest = \"^8.0.0\"\nmypy = \"^1.8.0\"\npre-commit = \"^3.6.0\"\n\n[build-system]\nrequires = [\"poetry-core\"]\nbuild-backend = \"poetry.core.masonry.api\"\n\n[tool.black]\nline-length = 88\ntarget-version = [\"py311\"]\ninclude = '\\.pyi?$'\n\n[tool.isort]\nprofile = \"black\"\nline_length = 88\nmulti_line_output = 3\n\n[tool.mypy]\npython_version = \"3.11\"\nstrict = true\nwarn_return_any = true\nwarn_unused_configs = true\n\n[tool.pytest.ini_options]\ntestpaths = [\"src/tests\"]\npython_files = [\"test_*.py\"]\npython_classes = [\"Test*\"]\npython_functions = [\"test_*\"]\n",
  "poetry.lock": "# This file is automatically @generated by Poetry 1.8.2 and should not be changed by hand.\n\n[[package]]\nname = \"absl-py\"\nversion = \"2.3.1\"\ndescription = \"Abseil Python Common Libraries, see https://github.com/abseil/abseil-py.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"absl_py-2.3.1-py3-none-any.whl\", hash = \"sha256:eeecf07f0c2a93ace0772c92e596ace6d3d3996c042b2128459aaae2a76de11d\"},\n    {file = \"absl_py-2.3.1.tar.gz\", hash = \"sha256:a97820526f7fbfd2ec1bce83f3f25e3a14840dac0d8e02a0b71cd75db3f77fc9\"},\n]\n\n[[package]]\nname = \"aiodns\"\nversion = \"3.5.0\"\ndescription = \"Simple DNS resolver for asyncio\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"aiodns-3.5.0-py3-none-any.whl\", hash = \"sha256:6d0404f7d5215849233f6ee44854f2bb2481adf71b336b2279016ea5990ca5c5\"},\n    {file = \"aiodns-3.5.0.tar.gz\", hash = \"sha256:11264edbab51896ecf546c18eb0dd56dff0428c6aa6d2cd87e643e07300eb310\"},\n]\n\n[package.dependencies]\npycares = \">=4.9.0\"\n\n[[package]]\nname = \"aiohappyeyeballs\"\nversion = \"2.6.1\"\ndescription = \"Happy Eyeballs for asyncio\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"aiohappyeyeballs-2.6.1-py3-none-any.whl\", hash = \"sha256:f349ba8f4b75cb25c99c5c2d84e997e485204d2902a9597802b0371f09331fb8\"},\n    {file = \"aiohappyeyeballs-2.6.1.tar.gz\", hash = \"sha256:c3f9d0113123803ccadfdf3f0faa505bc78e6a72d1cc4806cbd719826e943558\"},\n]\n\n[[package]]\nname = \"aiohttp\"\nversion = \"3.12.14\"\ndescription = \"Async http client/server framework (asyncio)\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"aiohttp-3.12.14-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:906d5075b5ba0dd1c66fcaaf60eb09926a9fef3ca92d912d2a0bbdbecf8b1248\"},\n    {file = \"aiohttp-3.12.14-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:c875bf6fc2fd1a572aba0e02ef4e7a63694778c5646cdbda346ee24e630d30fb\"},\n    {file = \"aiohttp-3.12.14-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:fbb284d15c6a45fab030740049d03c0ecd60edad9cd23b211d7e11d3be8d56fd\"},\n    {file = \"aiohttp-3.12.14-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:38e360381e02e1a05d36b223ecab7bc4a6e7b5ab15760022dc92589ee1d4238c\"},\n    {file = \"aiohttp-3.12.14-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:aaf90137b5e5d84a53632ad95ebee5c9e3e7468f0aab92ba3f608adcb914fa95\"},\n    {file = \"aiohttp-3.12.14-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e532a25e4a0a2685fa295a31acf65e027fbe2bea7a4b02cdfbbba8a064577663\"},\n    {file = \"aiohttp-3.12.14-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:eab9762c4d1b08ae04a6c77474e6136da722e34fdc0e6d6eab5ee93ac29f35d1\"},\n    {file = \"aiohttp-3.12.14-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:abe53c3812b2899889a7fca763cdfaeee725f5be68ea89905e4275476ffd7e61\"},\n    {file = \"aiohttp-3.12.14-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:5760909b7080aa2ec1d320baee90d03b21745573780a072b66ce633eb77a8656\"},\n    {file = \"aiohttp-3.12.14-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:02fcd3f69051467bbaa7f84d7ec3267478c7df18d68b2e28279116e29d18d4f3\"},\n    {file = \"aiohttp-3.12.14-cp310-cp310-musllinux_1_2_armv7l.whl\", hash = \"sha256:4dcd1172cd6794884c33e504d3da3c35648b8be9bfa946942d353b939d5f1288\"},\n    {file = \"aiohttp-3.12.14-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:224d0da41355b942b43ad08101b1b41ce633a654128ee07e36d75133443adcda\"},\n    {file = \"aiohttp-3.12.14-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:e387668724f4d734e865c1776d841ed75b300ee61059aca0b05bce67061dcacc\"},\n    {file = \"aiohttp-3.12.14-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:dec9cde5b5a24171e0b0a4ca064b1414950904053fb77c707efd876a2da525d8\"},\n    {file = \"aiohttp-3.12.14-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:bbad68a2af4877cc103cd94af9160e45676fc6f0c14abb88e6e092b945c2c8e3\"},\n    {file = \"aiohttp-3.12.14-cp310-cp310-win32.whl\", hash = \"sha256:ee580cb7c00bd857b3039ebca03c4448e84700dc1322f860cf7a500a6f62630c\"},\n    {file = \"aiohttp-3.12.14-cp310-cp310-win_amd64.whl\", hash = \"sha256:cf4f05b8cea571e2ccc3ca744e35ead24992d90a72ca2cf7ab7a2efbac6716db\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:f4552ff7b18bcec18b60a90c6982049cdb9dac1dba48cf00b97934a06ce2e597\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:8283f42181ff6ccbcf25acaae4e8ab2ff7e92b3ca4a4ced73b2c12d8cd971393\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:040afa180ea514495aaff7ad34ec3d27826eaa5d19812730fe9e529b04bb2179\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b413c12f14c1149f0ffd890f4141a7471ba4b41234fe4fd4a0ff82b1dc299dbb\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:1d6f607ce2e1a93315414e3d448b831238f1874b9968e1195b06efaa5c87e245\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:565e70d03e924333004ed101599902bba09ebb14843c8ea39d657f037115201b\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:4699979560728b168d5ab63c668a093c9570af2c7a78ea24ca5212c6cdc2b641\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ad5fdf6af93ec6c99bf800eba3af9a43d8bfd66dce920ac905c817ef4a712afe\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4ac76627c0b7ee0e80e871bde0d376a057916cb008a8f3ffc889570a838f5cc7\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:798204af1180885651b77bf03adc903743a86a39c7392c472891649610844635\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-musllinux_1_2_armv7l.whl\", hash = \"sha256:4f1205f97de92c37dd71cf2d5bcfb65fdaed3c255d246172cce729a8d849b4da\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:76ae6f1dd041f85065d9df77c6bc9c9703da9b5c018479d20262acc3df97d419\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:a194ace7bc43ce765338ca2dfb5661489317db216ea7ea700b0332878b392cab\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:16260e8e03744a6fe3fcb05259eeab8e08342c4c33decf96a9dad9f1187275d0\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:8c779e5ebbf0e2e15334ea404fcce54009dc069210164a244d2eac8352a44b28\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-win32.whl\", hash = \"sha256:a289f50bf1bd5be227376c067927f78079a7bdeccf8daa6a9e65c38bae14324b\"},\n    {file = \"aiohttp-3.12.14-cp311-cp311-win_amd64.whl\", hash = \"sha256:0b8a69acaf06b17e9c54151a6c956339cf46db4ff72b3ac28516d0f7068f4ced\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:a0ecbb32fc3e69bc25efcda7d28d38e987d007096cbbeed04f14a6662d0eee22\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:0400f0ca9bb3e0b02f6466421f253797f6384e9845820c8b05e976398ac1d81a\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:a56809fed4c8a830b5cae18454b7464e1529dbf66f71c4772e3cfa9cbec0a1ff\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:27f2e373276e4755691a963e5d11756d093e346119f0627c2d6518208483fb6d\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:ca39e433630e9a16281125ef57ece6817afd1d54c9f1bf32e901f38f16035869\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:9c748b3f8b14c77720132b2510a7d9907a03c20ba80f469e58d5dfd90c079a1c\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f0a568abe1b15ce69d4cc37e23020720423f0728e3cb1f9bcd3f53420ec3bfe7\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9888e60c2c54eaf56704b17feb558c7ed6b7439bca1e07d4818ab878f2083660\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3006a1dc579b9156de01e7916d38c63dc1ea0679b14627a37edf6151bc530088\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:aa8ec5c15ab80e5501a26719eb48a55f3c567da45c6ea5bb78c52c036b2655c7\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-musllinux_1_2_armv7l.whl\", hash = \"sha256:39b94e50959aa07844c7fe2206b9f75d63cc3ad1c648aaa755aa257f6f2498a9\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:04c11907492f416dad9885d503fbfc5dcb6768d90cad8639a771922d584609d3\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:88167bd9ab69bb46cee91bd9761db6dfd45b6e76a0438c7e884c3f8160ff21eb\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:791504763f25e8f9f251e4688195e8b455f8820274320204f7eafc467e609425\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:2785b112346e435dd3a1a67f67713a3fe692d288542f1347ad255683f066d8e0\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-win32.whl\", hash = \"sha256:15f5f4792c9c999a31d8decf444e79fcfd98497bf98e94284bf390a7bb8c1729\"},\n    {file = \"aiohttp-3.12.14-cp312-cp312-win_amd64.whl\", hash = \"sha256:3b66e1a182879f579b105a80d5c4bd448b91a57e8933564bf41665064796a338\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:3143a7893d94dc82bc409f7308bc10d60285a3cd831a68faf1aa0836c5c3c767\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:3d62ac3d506cef54b355bd34c2a7c230eb693880001dfcda0bf88b38f5d7af7e\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:48e43e075c6a438937c4de48ec30fa8ad8e6dfef122a038847456bfe7b947b63\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:077b4488411a9724cecc436cbc8c133e0d61e694995b8de51aaf351c7578949d\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:d8c35632575653f297dcbc9546305b2c1133391089ab925a6a3706dfa775ccab\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:6b8ce87963f0035c6834b28f061df90cf525ff7c9b6283a8ac23acee6502afd4\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f0a2cf66e32a2563bb0766eb24eae7e9a269ac0dc48db0aae90b575dc9583026\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cdea089caf6d5cde975084a884c72d901e36ef9c2fd972c9f51efbbc64e96fbd\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8a7865f27db67d49e81d463da64a59365ebd6b826e0e4847aa111056dcb9dc88\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:0ab5b38a6a39781d77713ad930cb5e7feea6f253de656a5f9f281a8f5931b086\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-musllinux_1_2_armv7l.whl\", hash = \"sha256:9b3b15acee5c17e8848d90a4ebc27853f37077ba6aec4d8cb4dbbea56d156933\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:e4c972b0bdaac167c1e53e16a16101b17c6d0ed7eac178e653a07b9f7fad7151\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:7442488b0039257a3bdbc55f7209587911f143fca11df9869578db6c26feeeb8\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:f68d3067eecb64c5e9bab4a26aa11bd676f4c70eea9ef6536b0a4e490639add3\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:f88d3704c8b3d598a08ad17d06006cb1ca52a1182291f04979e305c8be6c9758\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-win32.whl\", hash = \"sha256:a3c99ab19c7bf375c4ae3debd91ca5d394b98b6089a03231d4c580ef3c2ae4c5\"},\n    {file = \"aiohttp-3.12.14-cp313-cp313-win_amd64.whl\", hash = \"sha256:3f8aad695e12edc9d571f878c62bedc91adf30c760c8632f09663e5f564f4baa\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:b8cc6b05e94d837bcd71c6531e2344e1ff0fb87abe4ad78a9261d67ef5d83eae\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:d1dcb015ac6a3b8facd3677597edd5ff39d11d937456702f0bb2b762e390a21b\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:3779ed96105cd70ee5e85ca4f457adbce3d9ff33ec3d0ebcdf6c5727f26b21b3\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:717a0680729b4ebd7569c1dcd718c46b09b360745fd8eb12317abc74b14d14d0\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:b5dd3a2ef7c7e968dbbac8f5574ebeac4d2b813b247e8cec28174a2ba3627170\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:4710f77598c0092239bc12c1fcc278a444e16c7032d91babf5abbf7166463f7b\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f3e9f75ae842a6c22a195d4a127263dbf87cbab729829e0bd7857fb1672400b2\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5f9c8d55d6802086edd188e3a7d85a77787e50d56ce3eb4757a3205fa4657922\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:79b29053ff3ad307880d94562cca80693c62062a098a5776ea8ef5ef4b28d140\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:23e1332fff36bebd3183db0c7a547a1da9d3b4091509f6d818e098855f2f27d3\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-musllinux_1_2_armv7l.whl\", hash = \"sha256:a564188ce831fd110ea76bcc97085dd6c625b427db3f1dbb14ca4baa1447dcbc\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:a7a1b4302f70bb3ec40ca86de82def532c97a80db49cac6a6700af0de41af5ee\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:1b07ccef62950a2519f9bfc1e5b294de5dd84329f444ca0b329605ea787a3de5\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:938bd3ca6259e7e48b38d84f753d548bd863e0c222ed6ee6ace3fd6752768a84\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:8bc784302b6b9f163b54c4e93d7a6f09563bd01ff2b841b29ed3ac126e5040bf\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-win32.whl\", hash = \"sha256:a3416f95961dd7d5393ecff99e3f41dc990fb72eda86c11f2a60308ac6dcd7a0\"},\n    {file = \"aiohttp-3.12.14-cp39-cp39-win_amd64.whl\", hash = \"sha256:196858b8820d7f60578f8b47e5669b3195c21d8ab261e39b1d705346458f445f\"},\n    {file = \"aiohttp-3.12.14.tar.gz\", hash = \"sha256:6e06e120e34d93100de448fd941522e11dafa78ef1a893c179901b7d66aa29f2\"},\n]\n\n[package.dependencies]\naiohappyeyeballs = \">=2.5.0\"\naiosignal = \">=1.4.0\"\nattrs = \">=17.3.0\"\nfrozenlist = \">=1.1.1\"\nmultidict = \">=4.5,<7.0\"\npropcache = \">=0.2.0\"\nyarl = \">=1.17.0,<2.0\"\n\n[package.extras]\nspeedups = [\"Brotli\", \"aiodns (>=3.3.0)\", \"brotlicffi\"]\n\n[[package]]\nname = \"aiosignal\"\nversion = \"1.4.0\"\ndescription = \"aiosignal: a list of registered asynchronous callbacks\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"aiosignal-1.4.0-py3-none-any.whl\", hash = \"sha256:053243f8b92b990551949e63930a839ff0cf0b0ebbe0597b0f3fb19e1a0fe82e\"},\n    {file = \"aiosignal-1.4.0.tar.gz\", hash = \"sha256:f47eecd9468083c2029cc99945502cb7708b082c232f9aca65da147157b251c7\"},\n]\n\n[package.dependencies]\nfrozenlist = \">=1.1.0\"\ntyping-extensions = {version = \">=4.2\", markers = \"python_version < \\\"3.13\\\"\"}\n\n[[package]]\nname = \"appdirs\"\nversion = \"1.4.4\"\ndescription = \"A small Python module for determining appropriate platform-specific dirs, e.g. a \\\"user data dir\\\".\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"appdirs-1.4.4-py2.py3-none-any.whl\", hash = \"sha256:a841dacd6b99318a741b166adb07e19ee71a274450e68237b4650ca1055ab128\"},\n    {file = \"appdirs-1.4.4.tar.gz\", hash = \"sha256:7d5d0167b2b1ba821647616af46a749d1c653740dd0d2415100fe26e27afdf41\"},\n]\n\n[[package]]\nname = \"attrs\"\nversion = \"25.3.0\"\ndescription = \"Classes Without Boilerplate\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"attrs-25.3.0-py3-none-any.whl\", hash = \"sha256:427318ce031701fea540783410126f03899a97ffc6f61596ad581ac2e40e3bc3\"},\n    {file = \"attrs-25.3.0.tar.gz\", hash = \"sha256:75d7cefc7fb576747b2c81b4442d4d4a1ce0900973527c011d1030fd3bf4af1b\"},\n]\n\n[package.extras]\nbenchmark = [\"cloudpickle\", \"hypothesis\", \"mypy (>=1.11.1)\", \"pympler\", \"pytest (>=4.3.0)\", \"pytest-codspeed\", \"pytest-mypy-plugins\", \"pytest-xdist[psutil]\"]\ncov = [\"cloudpickle\", \"coverage[toml] (>=5.3)\", \"hypothesis\", \"mypy (>=1.11.1)\", \"pympler\", \"pytest (>=4.3.0)\", \"pytest-mypy-plugins\", \"pytest-xdist[psutil]\"]\ndev = [\"cloudpickle\", \"hypothesis\", \"mypy (>=1.11.1)\", \"pre-commit-uv\", \"pympler\", \"pytest (>=4.3.0)\", \"pytest-mypy-plugins\", \"pytest-xdist[psutil]\"]\ndocs = [\"cogapp\", \"furo\", \"myst-parser\", \"sphinx\", \"sphinx-notfound-page\", \"sphinxcontrib-towncrier\", \"towncrier\"]\ntests = [\"cloudpickle\", \"hypothesis\", \"mypy (>=1.11.1)\", \"pympler\", \"pytest (>=4.3.0)\", \"pytest-mypy-plugins\", \"pytest-xdist[psutil]\"]\ntests-mypy = [\"mypy (>=1.11.1)\", \"pytest-mypy-plugins\"]\n\n[[package]]\nname = \"black\"\nversion = \"24.10.0\"\ndescription = \"The uncompromising code formatter.\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"black-24.10.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:e6668650ea4b685440857138e5fe40cde4d652633b1bdffc62933d0db4ed9812\"},\n    {file = \"black-24.10.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:1c536fcf674217e87b8cc3657b81809d3c085d7bf3ef262ead700da345bfa6ea\"},\n    {file = \"black-24.10.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:649fff99a20bd06c6f727d2a27f401331dc0cc861fb69cde910fe95b01b5928f\"},\n    {file = \"black-24.10.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:fe4d6476887de70546212c99ac9bd803d90b42fc4767f058a0baa895013fbb3e\"},\n    {file = \"black-24.10.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:5a2221696a8224e335c28816a9d331a6c2ae15a2ee34ec857dcf3e45dbfa99ad\"},\n    {file = \"black-24.10.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:f9da3333530dbcecc1be13e69c250ed8dfa67f43c4005fb537bb426e19200d50\"},\n    {file = \"black-24.10.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:4007b1393d902b48b36958a216c20c4482f601569d19ed1df294a496eb366392\"},\n    {file = \"black-24.10.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:394d4ddc64782e51153eadcaaca95144ac4c35e27ef9b0a42e121ae7e57a9175\"},\n    {file = \"black-24.10.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:b5e39e0fae001df40f95bd8cc36b9165c5e2ea88900167bddf258bacef9bbdc3\"},\n    {file = \"black-24.10.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:d37d422772111794b26757c5b55a3eade028aa3fde43121ab7b673d050949d65\"},\n    {file = \"black-24.10.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:14b3502784f09ce2443830e3133dacf2c0110d45191ed470ecb04d0f5f6fcb0f\"},\n    {file = \"black-24.10.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:30d2c30dc5139211dda799758559d1b049f7f14c580c409d6ad925b74a4208a8\"},\n    {file = \"black-24.10.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:1cbacacb19e922a1d75ef2b6ccaefcd6e93a2c05ede32f06a21386a04cedb981\"},\n    {file = \"black-24.10.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:1f93102e0c5bb3907451063e08b9876dbeac810e7da5a8bfb7aeb5a9ef89066b\"},\n    {file = \"black-24.10.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:ddacb691cdcdf77b96f549cf9591701d8db36b2f19519373d60d31746068dbf2\"},\n    {file = \"black-24.10.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:680359d932801c76d2e9c9068d05c6b107f2584b2a5b88831c83962eb9984c1b\"},\n    {file = \"black-24.10.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:17374989640fbca88b6a448129cd1745c5eb8d9547b464f281b251dd00155ccd\"},\n    {file = \"black-24.10.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:63f626344343083322233f175aaf372d326de8436f5928c042639a4afbbf1d3f\"},\n    {file = \"black-24.10.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:ccfa1d0cb6200857f1923b602f978386a3a2758a65b52e0950299ea014be6800\"},\n    {file = \"black-24.10.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:2cd9c95431d94adc56600710f8813ee27eea544dd118d45896bb734e9d7a0dc7\"},\n    {file = \"black-24.10.0-py3-none-any.whl\", hash = \"sha256:3bb2b7a1f7b685f85b11fed1ef10f8a9148bceb49853e47a294a3dd963c1dd7d\"},\n    {file = \"black-24.10.0.tar.gz\", hash = \"sha256:846ea64c97afe3bc677b761787993be4991810ecc7a4a937816dd6bddedc4875\"},\n]\n\n[package.dependencies]\nclick = \">=8.0.0\"\nmypy-extensions = \">=0.4.3\"\npackaging = \">=22.0\"\npathspec = \">=0.9.0\"\nplatformdirs = \">=2\"\n\n[package.extras]\ncolorama = [\"colorama (>=0.4.3)\"]\nd = [\"aiohttp (>=3.10)\"]\njupyter = [\"ipython (>=7.8.0)\", \"tokenize-rt (>=3.2.0)\"]\nuvloop = [\"uvloop (>=0.15.2)\"]\n\n[[package]]\nname = \"ccxt\"\nversion = \"4.4.94\"\ndescription = \"A JavaScript / TypeScript / Python / C# / PHP cryptocurrency trading library with support for 100+ exchanges\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"ccxt-4.4.94-py2.py3-none-any.whl\", hash = \"sha256:de6ea9ace6a4c70907719a22acc4c3b93bb0cc7f45bb95b1d6ada29d24f39e43\"},\n    {file = \"ccxt-4.4.94.tar.gz\", hash = \"sha256:14c048a62f07a94ff6868fbee4e05bc411672887342e3d044552b0841133cf48\"},\n]\n\n[package.dependencies]\naiodns = {version = \">=1.1.1\", markers = \"python_version >= \\\"3.5.2\\\"\"}\naiohttp = {version = \">=3.10.11\", markers = \"python_version >= \\\"3.5.2\\\"\"}\ncertifi = \">=2018.1.18\"\ncryptography = \">=2.6.1\"\nrequests = \">=2.18.4\"\nsetuptools = \">=60.9.0\"\ntyping-extensions = \">=4.4.0\"\nyarl = {version = \">=1.7.2\", markers = \"python_version >= \\\"3.5.2\\\"\"}\n\n[package.extras]\nqa = [\"ruff (==0.0.292)\", \"tox (>=4.8.0)\"]\ntype = [\"mypy (==1.6.1)\"]\n\n[[package]]\nname = \"certifi\"\nversion = \"2025.7.9\"\ndescription = \"Python package for providing Mozilla's CA Bundle.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"certifi-2025.7.9-py3-none-any.whl\", hash = \"sha256:d842783a14f8fdd646895ac26f719a061408834473cfc10203f6a575beb15d39\"},\n    {file = \"certifi-2025.7.9.tar.gz\", hash = \"sha256:c1d2ec05395148ee10cf672ffc28cd37ea0ab0d99f9cc74c43e588cbd111b079\"},\n]\n\n[[package]]\nname = \"cffi\"\nversion = \"1.17.1\"\ndescription = \"Foreign Function Interface for Python calling C code.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"cffi-1.17.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:df8b1c11f177bc2313ec4b2d46baec87a5f3e71fc8b45dab2ee7cae86d9aba14\"},\n    {file = \"cffi-1.17.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:8f2cdc858323644ab277e9bb925ad72ae0e67f69e804f4898c070998d50b1a67\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:edae79245293e15384b51f88b00613ba9f7198016a5948b5dddf4917d4d26382\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:45398b671ac6d70e67da8e4224a065cec6a93541bb7aebe1b198a61b58c7b702\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ad9413ccdeda48c5afdae7e4fa2192157e991ff761e7ab8fdd8926f40b160cc3\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5da5719280082ac6bd9aa7becb3938dc9f9cbd57fac7d2871717b1feb0902ab6\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2bb1a08b8008b281856e5971307cc386a8e9c5b625ac297e853d36da6efe9c17\"},\n    {file = \"cffi-1.17.1-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:045d61c734659cc045141be4bae381a41d89b741f795af1dd018bfb532fd0df8\"},\n    {file = \"cffi-1.17.1-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:6883e737d7d9e4899a8a695e00ec36bd4e5e4f18fabe0aca0efe0a4b44cdb13e\"},\n    {file = \"cffi-1.17.1-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:6b8b4a92e1c65048ff98cfe1f735ef8f1ceb72e3d5f0c25fdb12087a23da22be\"},\n    {file = \"cffi-1.17.1-cp310-cp310-win32.whl\", hash = \"sha256:c9c3d058ebabb74db66e431095118094d06abf53284d9c81f27300d0e0d8bc7c\"},\n    {file = \"cffi-1.17.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:0f048dcf80db46f0098ccac01132761580d28e28bc0f78ae0d58048063317e15\"},\n    {file = \"cffi-1.17.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:a45e3c6913c5b87b3ff120dcdc03f6131fa0065027d0ed7ee6190736a74cd401\"},\n    {file = \"cffi-1.17.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:30c5e0cb5ae493c04c8b42916e52ca38079f1b235c2f8ae5f4527b963c401caf\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f75c7ab1f9e4aca5414ed4d8e5c0e303a34f4421f8a0d47a4d019ceff0ab6af4\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a1ed2dd2972641495a3ec98445e09766f077aee98a1c896dcb4ad0d303628e41\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:46bf43160c1a35f7ec506d254e5c890f3c03648a4dbac12d624e4490a7046cd1\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a24ed04c8ffd54b0729c07cee15a81d964e6fee0e3d4d342a27b020d22959dc6\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:610faea79c43e44c71e1ec53a554553fa22321b65fae24889706c0a84d4ad86d\"},\n    {file = \"cffi-1.17.1-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:a9b15d491f3ad5d692e11f6b71f7857e7835eb677955c00cc0aefcd0669adaf6\"},\n    {file = \"cffi-1.17.1-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:de2ea4b5833625383e464549fec1bc395c1bdeeb5f25c4a3a82b5a8c756ec22f\"},\n    {file = \"cffi-1.17.1-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:fc48c783f9c87e60831201f2cce7f3b2e4846bf4d8728eabe54d60700b318a0b\"},\n    {file = \"cffi-1.17.1-cp311-cp311-win32.whl\", hash = \"sha256:85a950a4ac9c359340d5963966e3e0a94a676bd6245a4b55bc43949eee26a655\"},\n    {file = \"cffi-1.17.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:caaf0640ef5f5517f49bc275eca1406b0ffa6aa184892812030f04c2abf589a0\"},\n    {file = \"cffi-1.17.1-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:805b4371bf7197c329fcb3ead37e710d1bca9da5d583f5073b799d5c5bd1eee4\"},\n    {file = \"cffi-1.17.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:733e99bc2df47476e3848417c5a4540522f234dfd4ef3ab7fafdf555b082ec0c\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1257bdabf294dceb59f5e70c64a3e2f462c30c7ad68092d01bbbfb1c16b1ba36\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:da95af8214998d77a98cc14e3a3bd00aa191526343078b530ceb0bd710fb48a5\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d63afe322132c194cf832bfec0dc69a99fb9bb6bbd550f161a49e9e855cc78ff\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f79fc4fc25f1c8698ff97788206bb3c2598949bfe0fef03d299eb1b5356ada99\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b62ce867176a75d03a665bad002af8e6d54644fad99a3c70905c543130e39d93\"},\n    {file = \"cffi-1.17.1-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:386c8bf53c502fff58903061338ce4f4950cbdcb23e2902d86c0f722b786bbe3\"},\n    {file = \"cffi-1.17.1-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:4ceb10419a9adf4460ea14cfd6bc43d08701f0835e979bf821052f1805850fe8\"},\n    {file = \"cffi-1.17.1-cp312-cp312-win32.whl\", hash = \"sha256:a08d7e755f8ed21095a310a693525137cfe756ce62d066e53f502a83dc550f65\"},\n    {file = \"cffi-1.17.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:51392eae71afec0d0c8fb1a53b204dbb3bcabcb3c9b807eedf3e1e6ccf2de903\"},\n    {file = \"cffi-1.17.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:f3a2b4222ce6b60e2e8b337bb9596923045681d71e5a082783484d845390938e\"},\n    {file = \"cffi-1.17.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:0984a4925a435b1da406122d4d7968dd861c1385afe3b45ba82b750f229811e2\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d01b12eeeb4427d3110de311e1774046ad344f5b1a7403101878976ecd7a10f3\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:706510fe141c86a69c8ddc029c7910003a17353970cff3b904ff0686a5927683\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:de55b766c7aa2e2a3092c51e0483d700341182f08e67c63630d5b6f200bb28e5\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:c59d6e989d07460165cc5ad3c61f9fd8f1b4796eacbd81cee78957842b834af4\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dd398dbc6773384a17fe0d3e7eeb8d1a21c2200473ee6806bb5e6a8e62bb73dd\"},\n    {file = \"cffi-1.17.1-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:3edc8d958eb099c634dace3c7e16560ae474aa3803a5df240542b305d14e14ed\"},\n    {file = \"cffi-1.17.1-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:72e72408cad3d5419375fc87d289076ee319835bdfa2caad331e377589aebba9\"},\n    {file = \"cffi-1.17.1-cp313-cp313-win32.whl\", hash = \"sha256:e03eab0a8677fa80d646b5ddece1cbeaf556c313dcfac435ba11f107ba117b5d\"},\n    {file = \"cffi-1.17.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:f6a16c31041f09ead72d69f583767292f750d24913dadacf5756b966aacb3f1a\"},\n    {file = \"cffi-1.17.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:636062ea65bd0195bc012fea9321aca499c0504409f413dc88af450b57ffd03b\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c7eac2ef9b63c79431bc4b25f1cd649d7f061a28808cbc6c47b534bd789ef964\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e221cf152cff04059d011ee126477f0d9588303eb57e88923578ace7baad17f9\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:31000ec67d4221a71bd3f67df918b1f88f676f1c3b535a7eb473255fdc0b83fc\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:6f17be4345073b0a7b8ea599688f692ac3ef23ce28e5df79c04de519dbc4912c\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0e2b1fac190ae3ebfe37b979cc1ce69c81f4e4fe5746bb401dca63a9062cdaf1\"},\n    {file = \"cffi-1.17.1-cp38-cp38-win32.whl\", hash = \"sha256:7596d6620d3fa590f677e9ee430df2958d2d6d6de2feeae5b20e82c00b76fbf8\"},\n    {file = \"cffi-1.17.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:78122be759c3f8a014ce010908ae03364d00a1f81ab5c7f4a7a5120607ea56e1\"},\n    {file = \"cffi-1.17.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:b2ab587605f4ba0bf81dc0cb08a41bd1c0a5906bd59243d56bad7668a6fc6c16\"},\n    {file = \"cffi-1.17.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:28b16024becceed8c6dfbc75629e27788d8a3f9030691a1dbf9821a128b22c36\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1d599671f396c4723d016dbddb72fe8e0397082b0a77a4fab8028923bec050e8\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ca74b8dbe6e8e8263c0ffd60277de77dcee6c837a3d0881d8c1ead7268c9e576\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f7f5baafcc48261359e14bcd6d9bff6d4b28d9103847c9e136694cb0501aef87\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:98e3969bcff97cae1b2def8ba499ea3d6f31ddfdb7635374834cf89a1a08ecf0\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cdf5ce3acdfd1661132f2a9c19cac174758dc2352bfe37d98aa7512c6b7178b3\"},\n    {file = \"cffi-1.17.1-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:9755e4345d1ec879e3849e62222a18c7174d65a6a92d5b346b1863912168b595\"},\n    {file = \"cffi-1.17.1-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:f1e22e8c4419538cb197e4dd60acc919d7696e5ef98ee4da4e01d3f8cfa4cc5a\"},\n    {file = \"cffi-1.17.1-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:c03e868a0b3bc35839ba98e74211ed2b05d2119be4e8a0f224fba9384f1fe02e\"},\n    {file = \"cffi-1.17.1-cp39-cp39-win32.whl\", hash = \"sha256:e31ae45bc2e29f6b2abd0de1cc3b9d5205aa847cafaecb8af1476a609a2f6eb7\"},\n    {file = \"cffi-1.17.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:d016c76bdd850f3c626af19b0542c9677ba156e4ee4fccfdd7848803533ef662\"},\n    {file = \"cffi-1.17.1.tar.gz\", hash = \"sha256:1c39c6016c32bc48dd54561950ebd6836e1670f2ae46128f67cf49e789c52824\"},\n]\n\n[package.dependencies]\npycparser = \"*\"\n\n[[package]]\nname = \"cfgv\"\nversion = \"3.4.0\"\ndescription = \"Validate configuration and produce human readable error messages.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"cfgv-3.4.0-py2.py3-none-any.whl\", hash = \"sha256:b7265b1f29fd3316bfcd2b330d63d024f2bfd8bcb8b0272f8e19a504856c48f9\"},\n    {file = \"cfgv-3.4.0.tar.gz\", hash = \"sha256:e52591d4c5f5dead8e0f673fb16db7949d2cfb3f7da4582893288f0ded8fe560\"},\n]\n\n[[package]]\nname = \"charset-normalizer\"\nversion = \"3.4.2\"\ndescription = \"The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"charset_normalizer-3.4.2-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:7c48ed483eb946e6c04ccbe02c6b4d1d48e51944b6db70f697e089c193404941\"},\n    {file = \"charset_normalizer-3.4.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b2d318c11350e10662026ad0eb71bb51c7812fc8590825304ae0bdd4ac283acd\"},\n    {file = \"charset_normalizer-3.4.2-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:9cbfacf36cb0ec2897ce0ebc5d08ca44213af24265bd56eca54bee7923c48fd6\"},\n    {file = \"charset_normalizer-3.4.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:18dd2e350387c87dabe711b86f83c9c78af772c748904d372ade190b5c7c9d4d\"},\n    {file = \"charset_normalizer-3.4.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8075c35cd58273fee266c58c0c9b670947c19df5fb98e7b66710e04ad4e9ff86\"},\n    {file = \"charset_normalizer-3.4.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:5bf4545e3b962767e5c06fe1738f951f77d27967cb2caa64c28be7c4563e162c\"},\n    {file = \"charset_normalizer-3.4.2-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:7a6ab32f7210554a96cd9e33abe3ddd86732beeafc7a28e9955cdf22ffadbab0\"},\n    {file = \"charset_normalizer-3.4.2-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:b33de11b92e9f75a2b545d6e9b6f37e398d86c3e9e9653c4864eb7e89c5773ef\"},\n    {file = \"charset_normalizer-3.4.2-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:8755483f3c00d6c9a77f490c17e6ab0c8729e39e6390328e42521ef175380ae6\"},\n    {file = \"charset_normalizer-3.4.2-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:68a328e5f55ec37c57f19ebb1fdc56a248db2e3e9ad769919a58672958e8f366\"},\n    {file = \"charset_normalizer-3.4.2-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:21b2899062867b0e1fde9b724f8aecb1af14f2778d69aacd1a5a1853a597a5db\"},\n    {file = \"charset_normalizer-3.4.2-cp310-cp310-win32.whl\", hash = \"sha256:e8082b26888e2f8b36a042a58307d5b917ef2b1cacab921ad3323ef91901c71a\"},\n    {file = \"charset_normalizer-3.4.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:f69a27e45c43520f5487f27627059b64aaf160415589230992cec34c5e18a509\"},\n    {file = \"charset_normalizer-3.4.2-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:be1e352acbe3c78727a16a455126d9ff83ea2dfdcbc83148d2982305a04714c2\"},\n    {file = \"charset_normalizer-3.4.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:aa88ca0b1932e93f2d961bf3addbb2db902198dca337d88c89e1559e066e7645\"},\n    {file = \"charset_normalizer-3.4.2-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d524ba3f1581b35c03cb42beebab4a13e6cdad7b36246bd22541fa585a56cccd\"},\n    {file = \"charset_normalizer-3.4.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:28a1005facc94196e1fb3e82a3d442a9d9110b8434fc1ded7a24a2983c9888d8\"},\n    {file = \"charset_normalizer-3.4.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fdb20a30fe1175ecabed17cbf7812f7b804b8a315a25f24678bcdf120a90077f\"},\n    {file = \"charset_normalizer-3.4.2-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0f5d9ed7f254402c9e7d35d2f5972c9bbea9040e99cd2861bd77dc68263277c7\"},\n    {file = \"charset_normalizer-3.4.2-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:efd387a49825780ff861998cd959767800d54f8308936b21025326de4b5a42b9\"},\n    {file = \"charset_normalizer-3.4.2-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:f0aa37f3c979cf2546b73e8222bbfa3dc07a641585340179d768068e3455e544\"},\n    {file = \"charset_normalizer-3.4.2-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:e70e990b2137b29dc5564715de1e12701815dacc1d056308e2b17e9095372a82\"},\n    {file = \"charset_normalizer-3.4.2-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:0c8c57f84ccfc871a48a47321cfa49ae1df56cd1d965a09abe84066f6853b9c0\"},\n    {file = \"charset_normalizer-3.4.2-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:6b66f92b17849b85cad91259efc341dce9c1af48e2173bf38a85c6329f1033e5\"},\n    {file = \"charset_normalizer-3.4.2-cp311-cp311-win32.whl\", hash = \"sha256:daac4765328a919a805fa5e2720f3e94767abd632ae410a9062dff5412bae65a\"},\n    {file = \"charset_normalizer-3.4.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:e53efc7c7cee4c1e70661e2e112ca46a575f90ed9ae3fef200f2a25e954f4b28\"},\n    {file = \"charset_normalizer-3.4.2-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:0c29de6a1a95f24b9a1aa7aefd27d2487263f00dfd55a77719b530788f75cff7\"},\n    {file = \"charset_normalizer-3.4.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:cddf7bd982eaa998934a91f69d182aec997c6c468898efe6679af88283b498d3\"},\n    {file = \"charset_normalizer-3.4.2-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:fcbe676a55d7445b22c10967bceaaf0ee69407fbe0ece4d032b6eb8d4565982a\"},\n    {file = \"charset_normalizer-3.4.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:d41c4d287cfc69060fa91cae9683eacffad989f1a10811995fa309df656ec214\"},\n    {file = \"charset_normalizer-3.4.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4e594135de17ab3866138f496755f302b72157d115086d100c3f19370839dd3a\"},\n    {file = \"charset_normalizer-3.4.2-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:cf713fe9a71ef6fd5adf7a79670135081cd4431c2943864757f0fa3a65b1fafd\"},\n    {file = \"charset_normalizer-3.4.2-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:a370b3e078e418187da8c3674eddb9d983ec09445c99a3a263c2011993522981\"},\n    {file = \"charset_normalizer-3.4.2-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:a955b438e62efdf7e0b7b52a64dc5c3396e2634baa62471768a64bc2adb73d5c\"},\n    {file = \"charset_normalizer-3.4.2-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:7222ffd5e4de8e57e03ce2cef95a4c43c98fcb72ad86909abdfc2c17d227fc1b\"},\n    {file = \"charset_normalizer-3.4.2-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:bee093bf902e1d8fc0ac143c88902c3dfc8941f7ea1d6a8dd2bcb786d33db03d\"},\n    {file = \"charset_normalizer-3.4.2-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:dedb8adb91d11846ee08bec4c8236c8549ac721c245678282dcb06b221aab59f\"},\n    {file = \"charset_normalizer-3.4.2-cp312-cp312-win32.whl\", hash = \"sha256:db4c7bf0e07fc3b7d89ac2a5880a6a8062056801b83ff56d8464b70f65482b6c\"},\n    {file = \"charset_normalizer-3.4.2-cp312-cp312-win_amd64.whl\", hash = \"sha256:5a9979887252a82fefd3d3ed2a8e3b937a7a809f65dcb1e068b090e165bbe99e\"},\n    {file = \"charset_normalizer-3.4.2-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:926ca93accd5d36ccdabd803392ddc3e03e6d4cd1cf17deff3b989ab8e9dbcf0\"},\n    {file = \"charset_normalizer-3.4.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:eba9904b0f38a143592d9fc0e19e2df0fa2e41c3c3745554761c5f6447eedabf\"},\n    {file = \"charset_normalizer-3.4.2-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:3fddb7e2c84ac87ac3a947cb4e66d143ca5863ef48e4a5ecb83bd48619e4634e\"},\n    {file = \"charset_normalizer-3.4.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:98f862da73774290f251b9df8d11161b6cf25b599a66baf087c1ffe340e9bfd1\"},\n    {file = \"charset_normalizer-3.4.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6c9379d65defcab82d07b2a9dfbfc2e95bc8fe0ebb1b176a3190230a3ef0e07c\"},\n    {file = \"charset_normalizer-3.4.2-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e635b87f01ebc977342e2697d05b56632f5f879a4f15955dfe8cef2448b51691\"},\n    {file = \"charset_normalizer-3.4.2-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:1c95a1e2902a8b722868587c0e1184ad5c55631de5afc0eb96bc4b0d738092c0\"},\n    {file = \"charset_normalizer-3.4.2-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:ef8de666d6179b009dce7bcb2ad4c4a779f113f12caf8dc77f0162c29d20490b\"},\n    {file = \"charset_normalizer-3.4.2-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:32fc0341d72e0f73f80acb0a2c94216bd704f4f0bce10aedea38f30502b271ff\"},\n    {file = \"charset_normalizer-3.4.2-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:289200a18fa698949d2b39c671c2cc7a24d44096784e76614899a7ccf2574b7b\"},\n    {file = \"charset_normalizer-3.4.2-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:4a476b06fbcf359ad25d34a057b7219281286ae2477cc5ff5e3f70a246971148\"},\n    {file = \"charset_normalizer-3.4.2-cp313-cp313-win32.whl\", hash = \"sha256:aaeeb6a479c7667fbe1099af9617c83aaca22182d6cf8c53966491a0f1b7ffb7\"},\n    {file = \"charset_normalizer-3.4.2-cp313-cp313-win_amd64.whl\", hash = \"sha256:aa6af9e7d59f9c12b33ae4e9450619cf2488e2bbe9b44030905877f0b2324980\"},\n    {file = \"charset_normalizer-3.4.2-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1cad5f45b3146325bb38d6855642f6fd609c3f7cad4dbaf75549bf3b904d3184\"},\n    {file = \"charset_normalizer-3.4.2-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b2680962a4848b3c4f155dc2ee64505a9c57186d0d56b43123b17ca3de18f0fa\"},\n    {file = \"charset_normalizer-3.4.2-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:36b31da18b8890a76ec181c3cf44326bf2c48e36d393ca1b72b3f484113ea344\"},\n    {file = \"charset_normalizer-3.4.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f4074c5a429281bf056ddd4c5d3b740ebca4d43ffffe2ef4bf4d2d05114299da\"},\n    {file = \"charset_normalizer-3.4.2-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c9e36a97bee9b86ef9a1cf7bb96747eb7a15c2f22bdb5b516434b00f2a599f02\"},\n    {file = \"charset_normalizer-3.4.2-cp37-cp37m-musllinux_1_2_aarch64.whl\", hash = \"sha256:1b1bde144d98e446b056ef98e59c256e9294f6b74d7af6846bf5ffdafd687a7d\"},\n    {file = \"charset_normalizer-3.4.2-cp37-cp37m-musllinux_1_2_i686.whl\", hash = \"sha256:915f3849a011c1f593ab99092f3cecfcb4d65d8feb4a64cf1bf2d22074dc0ec4\"},\n    {file = \"charset_normalizer-3.4.2-cp37-cp37m-musllinux_1_2_ppc64le.whl\", hash = \"sha256:fb707f3e15060adf5b7ada797624a6c6e0138e2a26baa089df64c68ee98e040f\"},\n    {file = \"charset_normalizer-3.4.2-cp37-cp37m-musllinux_1_2_s390x.whl\", hash = \"sha256:25a23ea5c7edc53e0f29bae2c44fcb5a1aa10591aae107f2a2b2583a9c5cbc64\"},\n    {file = \"charset_normalizer-3.4.2-cp37-cp37m-musllinux_1_2_x86_64.whl\", hash = \"sha256:770cab594ecf99ae64c236bc9ee3439c3f46be49796e265ce0cc8bc17b10294f\"},\n    {file = \"charset_normalizer-3.4.2-cp37-cp37m-win32.whl\", hash = \"sha256:6a0289e4589e8bdfef02a80478f1dfcb14f0ab696b5a00e1f4b8a14a307a3c58\"},\n    {file = \"charset_normalizer-3.4.2-cp37-cp37m-win_amd64.whl\", hash = \"sha256:6fc1f5b51fa4cecaa18f2bd7a003f3dd039dd615cd69a2afd6d3b19aed6775f2\"},\n    {file = \"charset_normalizer-3.4.2-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:76af085e67e56c8816c3ccf256ebd136def2ed9654525348cfa744b6802b69eb\"},\n    {file = \"charset_normalizer-3.4.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e45ba65510e2647721e35323d6ef54c7974959f6081b58d4ef5d87c60c84919a\"},\n    {file = \"charset_normalizer-3.4.2-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:046595208aae0120559a67693ecc65dd75d46f7bf687f159127046628178dc45\"},\n    {file = \"charset_normalizer-3.4.2-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:75d10d37a47afee94919c4fab4c22b9bc2a8bf7d4f46f87363bcf0573f3ff4f5\"},\n    {file = \"charset_normalizer-3.4.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6333b3aa5a12c26b2a4d4e7335a28f1475e0e5e17d69d55141ee3cab736f66d1\"},\n    {file = \"charset_normalizer-3.4.2-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e8323a9b031aa0393768b87f04b4164a40037fb2a3c11ac06a03ffecd3618027\"},\n    {file = \"charset_normalizer-3.4.2-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:24498ba8ed6c2e0b56d4acbf83f2d989720a93b41d712ebd4f4979660db4417b\"},\n    {file = \"charset_normalizer-3.4.2-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:844da2b5728b5ce0e32d863af26f32b5ce61bc4273a9c720a9f3aa9df73b1455\"},\n    {file = \"charset_normalizer-3.4.2-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:65c981bdbd3f57670af8b59777cbfae75364b483fa8a9f420f08094531d54a01\"},\n    {file = \"charset_normalizer-3.4.2-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:3c21d4fca343c805a52c0c78edc01e3477f6dd1ad7c47653241cf2a206d4fc58\"},\n    {file = \"charset_normalizer-3.4.2-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:dc7039885fa1baf9be153a0626e337aa7ec8bf96b0128605fb0d77788ddc1681\"},\n    {file = \"charset_normalizer-3.4.2-cp38-cp38-win32.whl\", hash = \"sha256:8272b73e1c5603666618805fe821edba66892e2870058c94c53147602eab29c7\"},\n    {file = \"charset_normalizer-3.4.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:70f7172939fdf8790425ba31915bfbe8335030f05b9913d7ae00a87d4395620a\"},\n    {file = \"charset_normalizer-3.4.2-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:005fa3432484527f9732ebd315da8da8001593e2cf46a3d817669f062c3d9ed4\"},\n    {file = \"charset_normalizer-3.4.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e92fca20c46e9f5e1bb485887d074918b13543b1c2a1185e69bb8d17ab6236a7\"},\n    {file = \"charset_normalizer-3.4.2-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:50bf98d5e563b83cc29471fa114366e6806bc06bc7a25fd59641e41445327836\"},\n    {file = \"charset_normalizer-3.4.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:721c76e84fe669be19c5791da68232ca2e05ba5185575086e384352e2c309597\"},\n    {file = \"charset_normalizer-3.4.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:82d8fd25b7f4675d0c47cf95b594d4e7b158aca33b76aa63d07186e13c0e0ab7\"},\n    {file = \"charset_normalizer-3.4.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:b3daeac64d5b371dea99714f08ffc2c208522ec6b06fbc7866a450dd446f5c0f\"},\n    {file = \"charset_normalizer-3.4.2-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:dccab8d5fa1ef9bfba0590ecf4d46df048d18ffe3eec01eeb73a42e0d9e7a8ba\"},\n    {file = \"charset_normalizer-3.4.2-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:aaf27faa992bfee0264dc1f03f4c75e9fcdda66a519db6b957a3f826e285cf12\"},\n    {file = \"charset_normalizer-3.4.2-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:eb30abc20df9ab0814b5a2524f23d75dcf83cde762c161917a2b4b7b55b1e518\"},\n    {file = \"charset_normalizer-3.4.2-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:c72fbbe68c6f32f251bdc08b8611c7b3060612236e960ef848e0a517ddbe76c5\"},\n    {file = \"charset_normalizer-3.4.2-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:982bb1e8b4ffda883b3d0a521e23abcd6fd17418f6d2c4118d257a10199c0ce3\"},\n    {file = \"charset_normalizer-3.4.2-cp39-cp39-win32.whl\", hash = \"sha256:43e0933a0eff183ee85833f341ec567c0980dae57c464d8a508e1b2ceb336471\"},\n    {file = \"charset_normalizer-3.4.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:d11b54acf878eef558599658b0ffca78138c8c3655cf4f3a4a673c437e67732e\"},\n    {file = \"charset_normalizer-3.4.2-py3-none-any.whl\", hash = \"sha256:7f56930ab0abd1c45cd15be65cc741c28b1c9a34876ce8c17a2fa107810c0af0\"},\n    {file = \"charset_normalizer-3.4.2.tar.gz\", hash = \"sha256:5baececa9ecba31eff645232d59845c07aa030f0c81ee70184a90d35099a0e63\"},\n]\n\n[[package]]\nname = \"chex\"\nversion = \"0.1.89\"\ndescription = \"Chex: Testing made fun, in JAX!\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"chex-0.1.89-py3-none-any.whl\", hash = \"sha256:145241c27d8944adb634fb7d472a460e1c1b643f561507d4031ad5156ef82dfa\"},\n    {file = \"chex-0.1.89.tar.gz\", hash = \"sha256:78f856e6a0a8459edfcbb402c2c044d2b8102eac4b633838cbdfdcdb09c6c8e0\"},\n]\n\n[package.dependencies]\nabsl-py = \">=0.9.0\"\njax = \">=0.4.27\"\njaxlib = \">=0.4.27\"\nnumpy = \">=1.24.1\"\nsetuptools = {version = \"*\", markers = \"python_version >= \\\"3.12\\\"\"}\ntoolz = \">=0.9.0\"\ntyping_extensions = \">=4.2.0\"\n\n[[package]]\nname = \"clarabel\"\nversion = \"0.11.1\"\ndescription = \"Clarabel Conic Interior Point Solver for Rust / Python\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"clarabel-0.11.1-cp39-abi3-macosx_10_12_x86_64.whl\", hash = \"sha256:c39160e4222040f051f2a0598691c4f9126b4d17f5b9e7678f76c71d611e12d8\"},\n    {file = \"clarabel-0.11.1-cp39-abi3-macosx_11_0_arm64.whl\", hash = \"sha256:8963687ee250d27310d139eea5a6816f9c3ae31f33691b56579ca4f0f0b64b63\"},\n    {file = \"clarabel-0.11.1-cp39-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e4837b9d0db01e98239f04b1e3526a6cf568529d3c19a8b3f591befdc467f9bb\"},\n    {file = \"clarabel-0.11.1-cp39-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c8c41aaa6f3f8c0f3bd9d86c3e568dcaee079562c075bd2ec9fb3a80287380ef\"},\n    {file = \"clarabel-0.11.1-cp39-abi3-win_amd64.whl\", hash = \"sha256:557d5148a4377ae1980b65d00605ae870a8f34f95f0f6a41e04aa6d3edf67148\"},\n    {file = \"clarabel-0.11.1.tar.gz\", hash = \"sha256:e7c41c47f0e59aeab99aefff9e58af4a8753ee5269bbeecbd5526fc6f41b9598\"},\n]\n\n[package.dependencies]\ncffi = \"*\"\nnumpy = \"*\"\nscipy = \"*\"\n\n[[package]]\nname = \"click\"\nversion = \"8.2.1\"\ndescription = \"Composable command line interface toolkit\"\noptional = false\npython-versions = \">=3.10\"\nfiles = [\n    {file = \"click-8.2.1-py3-none-any.whl\", hash = \"sha256:61a3265b914e850b85317d0b3109c7f8cd35a670f963866005d6ef1d5175a12b\"},\n    {file = \"click-8.2.1.tar.gz\", hash = \"sha256:27c491cc05d968d271d5a1db13e3b5a184636d9d930f148c50b038f0d0646202\"},\n]\n\n[package.dependencies]\ncolorama = {version = \"*\", markers = \"platform_system == \\\"Windows\\\"\"}\n\n[[package]]\nname = \"colorama\"\nversion = \"0.4.6\"\ndescription = \"Cross-platform colored terminal text.\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7\"\nfiles = [\n    {file = \"colorama-0.4.6-py2.py3-none-any.whl\", hash = \"sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6\"},\n    {file = \"colorama-0.4.6.tar.gz\", hash = \"sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44\"},\n]\n\n[[package]]\nname = \"cryptography\"\nversion = \"45.0.5\"\ndescription = \"cryptography is a package which provides cryptographic recipes and primitives to Python developers.\"\noptional = false\npython-versions = \"!=3.9.0,!=3.9.1,>=3.7\"\nfiles = [\n    {file = \"cryptography-45.0.5-cp311-abi3-macosx_10_9_universal2.whl\", hash = \"sha256:101ee65078f6dd3e5a028d4f19c07ffa4dd22cce6a20eaa160f8b5219911e7d8\"},\n    {file = \"cryptography-45.0.5-cp311-abi3-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:3a264aae5f7fbb089dbc01e0242d3b67dffe3e6292e1f5182122bdf58e65215d\"},\n    {file = \"cryptography-45.0.5-cp311-abi3-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:e74d30ec9c7cb2f404af331d5b4099a9b322a8a6b25c4632755c8757345baac5\"},\n    {file = \"cryptography-45.0.5-cp311-abi3-manylinux_2_28_aarch64.whl\", hash = \"sha256:3af26738f2db354aafe492fb3869e955b12b2ef2e16908c8b9cb928128d42c57\"},\n    {file = \"cryptography-45.0.5-cp311-abi3-manylinux_2_28_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:e6c00130ed423201c5bc5544c23359141660b07999ad82e34e7bb8f882bb78e0\"},\n    {file = \"cryptography-45.0.5-cp311-abi3-manylinux_2_28_x86_64.whl\", hash = \"sha256:dd420e577921c8c2d31289536c386aaa30140b473835e97f83bc71ea9d2baf2d\"},\n    {file = \"cryptography-45.0.5-cp311-abi3-manylinux_2_34_aarch64.whl\", hash = \"sha256:d05a38884db2ba215218745f0781775806bde4f32e07b135348355fe8e4991d9\"},\n    {file = \"cryptography-45.0.5-cp311-abi3-manylinux_2_34_x86_64.whl\", hash = \"sha256:ad0caded895a00261a5b4aa9af828baede54638754b51955a0ac75576b831b27\"},\n    {file = \"cryptography-45.0.5-cp311-abi3-musllinux_1_2_aarch64.whl\", hash = \"sha256:9024beb59aca9d31d36fcdc1604dd9bbeed0a55bface9f1908df19178e2f116e\"},\n    {file = \"cryptography-45.0.5-cp311-abi3-musllinux_1_2_x86_64.whl\", hash = \"sha256:91098f02ca81579c85f66df8a588c78f331ca19089763d733e34ad359f474174\"},\n    {file = \"cryptography-45.0.5-cp311-abi3-win32.whl\", hash = \"sha256:926c3ea71a6043921050eaa639137e13dbe7b4ab25800932a8498364fc1abec9\"},\n    {file = \"cryptography-45.0.5-cp311-abi3-win_amd64.whl\", hash = \"sha256:b85980d1e345fe769cfc57c57db2b59cff5464ee0c045d52c0df087e926fbe63\"},\n    {file = \"cryptography-45.0.5-cp37-abi3-macosx_10_9_universal2.whl\", hash = \"sha256:f3562c2f23c612f2e4a6964a61d942f891d29ee320edb62ff48ffb99f3de9ae8\"},\n    {file = \"cryptography-45.0.5-cp37-abi3-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:3fcfbefc4a7f332dece7272a88e410f611e79458fab97b5efe14e54fe476f4fd\"},\n    {file = \"cryptography-45.0.5-cp37-abi3-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:460f8c39ba66af7db0545a8c6f2eabcbc5a5528fc1cf6c3fa9a1e44cec33385e\"},\n    {file = \"cryptography-45.0.5-cp37-abi3-manylinux_2_28_aarch64.whl\", hash = \"sha256:9b4cf6318915dccfe218e69bbec417fdd7c7185aa7aab139a2c0beb7468c89f0\"},\n    {file = \"cryptography-45.0.5-cp37-abi3-manylinux_2_28_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:2089cc8f70a6e454601525e5bf2779e665d7865af002a5dec8d14e561002e135\"},\n    {file = \"cryptography-45.0.5-cp37-abi3-manylinux_2_28_x86_64.whl\", hash = \"sha256:0027d566d65a38497bc37e0dd7c2f8ceda73597d2ac9ba93810204f56f52ebc7\"},\n    {file = \"cryptography-45.0.5-cp37-abi3-manylinux_2_34_aarch64.whl\", hash = \"sha256:be97d3a19c16a9be00edf79dca949c8fa7eff621763666a145f9f9535a5d7f42\"},\n    {file = \"cryptography-45.0.5-cp37-abi3-manylinux_2_34_x86_64.whl\", hash = \"sha256:7760c1c2e1a7084153a0f68fab76e754083b126a47d0117c9ed15e69e2103492\"},\n    {file = \"cryptography-45.0.5-cp37-abi3-musllinux_1_2_aarch64.whl\", hash = \"sha256:6ff8728d8d890b3dda5765276d1bc6fb099252915a2cd3aff960c4c195745dd0\"},\n    {file = \"cryptography-45.0.5-cp37-abi3-musllinux_1_2_x86_64.whl\", hash = \"sha256:7259038202a47fdecee7e62e0fd0b0738b6daa335354396c6ddebdbe1206af2a\"},\n    {file = \"cryptography-45.0.5-cp37-abi3-win32.whl\", hash = \"sha256:1e1da5accc0c750056c556a93c3e9cb828970206c68867712ca5805e46dc806f\"},\n    {file = \"cryptography-45.0.5-cp37-abi3-win_amd64.whl\", hash = \"sha256:90cb0a7bb35959f37e23303b7eed0a32280510030daba3f7fdfbb65defde6a97\"},\n    {file = \"cryptography-45.0.5-pp310-pypy310_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:206210d03c1193f4e1ff681d22885181d47efa1ab3018766a7b32a7b3d6e6afd\"},\n    {file = \"cryptography-45.0.5-pp310-pypy310_pp73-manylinux_2_28_aarch64.whl\", hash = \"sha256:c648025b6840fe62e57107e0a25f604db740e728bd67da4f6f060f03017d5097\"},\n    {file = \"cryptography-45.0.5-pp310-pypy310_pp73-manylinux_2_28_x86_64.whl\", hash = \"sha256:b8fa8b0a35a9982a3c60ec79905ba5bb090fc0b9addcfd3dc2dd04267e45f25e\"},\n    {file = \"cryptography-45.0.5-pp310-pypy310_pp73-manylinux_2_34_aarch64.whl\", hash = \"sha256:14d96584701a887763384f3c47f0ca7c1cce322aa1c31172680eb596b890ec30\"},\n    {file = \"cryptography-45.0.5-pp310-pypy310_pp73-manylinux_2_34_x86_64.whl\", hash = \"sha256:57c816dfbd1659a367831baca4b775b2a5b43c003daf52e9d57e1d30bc2e1b0e\"},\n    {file = \"cryptography-45.0.5-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:b9e38e0a83cd51e07f5a48ff9691cae95a79bea28fe4ded168a8e5c6c77e819d\"},\n    {file = \"cryptography-45.0.5-pp311-pypy311_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:8c4a6ff8a30e9e3d38ac0539e9a9e02540ab3f827a3394f8852432f6b0ea152e\"},\n    {file = \"cryptography-45.0.5-pp311-pypy311_pp73-manylinux_2_28_aarch64.whl\", hash = \"sha256:bd4c45986472694e5121084c6ebbd112aa919a25e783b87eb95953c9573906d6\"},\n    {file = \"cryptography-45.0.5-pp311-pypy311_pp73-manylinux_2_28_x86_64.whl\", hash = \"sha256:982518cd64c54fcada9d7e5cf28eabd3ee76bd03ab18e08a48cad7e8b6f31b18\"},\n    {file = \"cryptography-45.0.5-pp311-pypy311_pp73-manylinux_2_34_aarch64.whl\", hash = \"sha256:12e55281d993a793b0e883066f590c1ae1e802e3acb67f8b442e721e475e6463\"},\n    {file = \"cryptography-45.0.5-pp311-pypy311_pp73-manylinux_2_34_x86_64.whl\", hash = \"sha256:5aa1e32983d4443e310f726ee4b071ab7569f58eedfdd65e9675484a4eb67bd1\"},\n    {file = \"cryptography-45.0.5-pp311-pypy311_pp73-win_amd64.whl\", hash = \"sha256:e357286c1b76403dd384d938f93c46b2b058ed4dfcdce64a770f0537ed3feb6f\"},\n    {file = \"cryptography-45.0.5.tar.gz\", hash = \"sha256:72e76caa004ab63accdf26023fccd1d087f6d90ec6048ff33ad0445abf7f605a\"},\n]\n\n[package.dependencies]\ncffi = {version = \">=1.14\", markers = \"platform_python_implementation != \\\"PyPy\\\"\"}\n\n[package.extras]\ndocs = [\"sphinx (>=5.3.0)\", \"sphinx-inline-tabs\", \"sphinx-rtd-theme (>=3.0.0)\"]\ndocstest = [\"pyenchant (>=3)\", \"readme-renderer (>=30.0)\", \"sphinxcontrib-spelling (>=7.3.1)\"]\nnox = [\"nox (>=2024.4.15)\", \"nox[uv] (>=2024.3.2)\"]\npep8test = [\"check-sdist\", \"click (>=8.0.1)\", \"mypy (>=1.4)\", \"ruff (>=0.3.6)\"]\nsdist = [\"build (>=1.0.0)\"]\nssh = [\"bcrypt (>=3.1.5)\"]\ntest = [\"certifi (>=2024)\", \"cryptography-vectors (==45.0.5)\", \"pretend (>=0.7)\", \"pytest (>=7.4.0)\", \"pytest-benchmark (>=4.0)\", \"pytest-cov (>=2.10.1)\", \"pytest-xdist (>=3.5.0)\"]\ntest-randomorder = [\"pytest-randomly\"]\n\n[[package]]\nname = \"cvxpy\"\nversion = \"1.6.6\"\ndescription = \"A domain-specific language for modeling convex optimization problems in Python.\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"cvxpy-1.6.6-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:5a23a18a1b88b008996b3cb696b8b64c315c44bd875b449658784f8a0b70aa02\"},\n    {file = \"cvxpy-1.6.6-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:101fb9b433cc2e334d3596ad611fcc3e2fa5d484bb0c65eda9ee2d7213de05b2\"},\n    {file = \"cvxpy-1.6.6-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ed5a3b2da9c47eddad2113327ac81689524ebb4ba174ea1f52117921541fd705\"},\n    {file = \"cvxpy-1.6.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f0f3c6bd27f62036b5a23e24beab0491d2e1af330bafa2872484658323ed3ece\"},\n    {file = \"cvxpy-1.6.6-cp310-cp310-win_amd64.whl\", hash = \"sha256:5d2aecceeac9f5b9297c26ea0080a8de0da94f2660103c6b2c996f6900fb9dab\"},\n    {file = \"cvxpy-1.6.6-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:d9046f1481d0b518efe82c4c8fd29ad1e7878bd1c426a29a1d4b770e620dd12c\"},\n    {file = \"cvxpy-1.6.6-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:0ad3abd3dabe5ae5d4d88b53d62d13d53c3515dbbd4ffb3348df91eef6b23171\"},\n    {file = \"cvxpy-1.6.6-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ca252631ff112684a9f06fbedeb4517148646e5a26577077130d35c69a3e8a61\"},\n    {file = \"cvxpy-1.6.6-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:eb67053bb3ffb886af17f198fe73f9f0c963865de47ed716af8728a1a2763507\"},\n    {file = \"cvxpy-1.6.6-cp311-cp311-win_amd64.whl\", hash = \"sha256:200f969a171e7b7f6d682e51c9c595e7fec7014de551355a915aad16e9a824b2\"},\n    {file = \"cvxpy-1.6.6-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:73b82adb9a32ac75d98b52b0520dfcea846e5d5fe7d84c539b101043d51d532b\"},\n    {file = \"cvxpy-1.6.6-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:3b3e2b5db609434608c7f535ab483b055c3012ca02bb97b1cc76a97ef0ea9fef\"},\n    {file = \"cvxpy-1.6.6-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9bf2c311becaac48ea566692c53dba9bd39f0c4dd10534945191e39fd398e7ee\"},\n    {file = \"cvxpy-1.6.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:863535ba8d89806a8cfcd5cb7939aef7ec7c45a7109780af72ceda6090410887\"},\n    {file = \"cvxpy-1.6.6-cp312-cp312-win_amd64.whl\", hash = \"sha256:0bc83872e7054434c9c242a1a154daacae4c57f2818c7edfefcbf69a0f628748\"},\n    {file = \"cvxpy-1.6.6-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:9d7aa7ecf5409459aaa5f39ec4889a472314d5790f478c093b6ebe733b4e4bd3\"},\n    {file = \"cvxpy-1.6.6-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:23eb8dad835c425630a5d6b249c8685bd5d9038ad564cf6317e9ae259046b654\"},\n    {file = \"cvxpy-1.6.6-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:091bf83fb4b7d58ea73380325f654239be6e7f556f2546c1cb767c41bf6815e3\"},\n    {file = \"cvxpy-1.6.6-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b461bd6cb9dd975ca5bf1ac86a3602036158eca7cdff8d824e8a7c30efe43f66\"},\n    {file = \"cvxpy-1.6.6-cp313-cp313-win_amd64.whl\", hash = \"sha256:7790b15365411778acbe25d23368f4e2776f28f44c7cbb6059101072e40fc028\"},\n    {file = \"cvxpy-1.6.6-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:060e09cdc0cb7044ee8b4fd736168ecda86edcf64af3f39ab579f59a36336ba3\"},\n    {file = \"cvxpy-1.6.6-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:220711c4cef001804613eccdbe1d104ba2be705b47ba1f8dc073ebc542bc5ca5\"},\n    {file = \"cvxpy-1.6.6-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3d011ca756ea13632a739431a59b3a0d17e36e8dab280059763c09c3d615662f\"},\n    {file = \"cvxpy-1.6.6-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:845bb27ad6d7c8069e1fa769b638a0f07dfb4cbaa2f1e92dbc3c4ef5eb6cdeab\"},\n    {file = \"cvxpy-1.6.6-cp39-cp39-win_amd64.whl\", hash = \"sha256:5d8a7a567823ea43b5e24f390bb298ebd905cfb3570b4feeed0bcb80815f1400\"},\n    {file = \"cvxpy-1.6.6.tar.gz\", hash = \"sha256:b424f2416b2d8935628e1291e97d532ec34ae046246fe9d2d2d69115ff1ba701\"},\n]\n\n[package.dependencies]\nclarabel = \">=0.5.0\"\nnumpy = \">=1.21.6\"\nosqp = \">=0.6.2\"\nscipy = \">=1.11.0\"\nscs = \">=3.2.4.post1\"\n\n[package.extras]\ncbc = [\"cylp (>=0.91.5)\"]\ncvxopt = [\"cvxopt\"]\ndaqp = [\"daqp\"]\ndiffcp = [\"diffcp\"]\ndoc = [\"sphinx\", \"sphinx-design\", \"sphinx-immaterial (>=0.11.7)\", \"sphinx-inline-tabs\", \"sphinxcontrib.jquery\"]\necos = [\"ecos\"]\necos-bb = [\"ecos\"]\nglop = [\"ortools (>=9.7,<9.12)\"]\nglpk = [\"cvxopt\"]\nglpk-mi = [\"cvxopt\"]\ngurobi = [\"gurobipy\"]\nhighs = [\"highspy\"]\nmosek = [\"Mosek\"]\npdlp = [\"ortools (>=9.7,<9.12)\"]\npiqp = [\"piqp\"]\nproxqp = [\"proxsuite\"]\nqoco = [\"qoco\"]\nscip = [\"PySCIPOpt\"]\nscipy = [\"scipy\"]\ntesting = [\"hypothesis\", \"pytest\"]\nxpress = [\"xpress\"]\n\n[[package]]\nname = \"cvxpylayers\"\nversion = \"0.1.9\"\ndescription = \"Differentiable convex optimization layers\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"cvxpylayers-0.1.9-py3-none-any.whl\", hash = \"sha256:8b3d547ca1862462c290e4767b12b67beeda2bacc8db7106f7c8aec35f17be59\"},\n    {file = \"cvxpylayers-0.1.9.tar.gz\", hash = \"sha256:aa72a475b28930b09855acbddce21ef3c1226aa3d86fec3dedc27afe5329f5f8\"},\n]\n\n[package.dependencies]\ncvxpy = \">=1.5.0\"\ndiffcp = \">=1.1.0\"\nnumpy = \">=1.15\"\nscipy = \">=1.1.0\"\n\n[[package]]\nname = \"diffcp\"\nversion = \"1.1.4\"\ndescription = \"A library to compute gradients for convex optimization problems\"\noptional = false\npython-versions = \">=3.10\"\nfiles = [\n    {file = \"diffcp-1.1.4-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:aca2bc7e663af9a591687509556038e879694b5520422562a511dd0d93468715\"},\n    {file = \"diffcp-1.1.4-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:8e85db837778e00f89d8f30f4b3fb6a0ecde55ffd5e0551cb1f9498a0ed1c874\"},\n    {file = \"diffcp-1.1.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:197c7a62efffead68549809dc993876460a568eed19b3436552935055d8abf8d\"},\n    {file = \"diffcp-1.1.4-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:2b0ce191a85a1b0f0f31a17498669b339a522f20fdcc7ff91ef3c5c7c9edd780\"},\n    {file = \"diffcp-1.1.4-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:3471138129b28f3f80bc0fde2e8c8c670aaf7da530fb3c9b36134b941795960a\"},\n    {file = \"diffcp-1.1.4-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:c93e55f210179701dfb4d835250691099f109fbae0e93819fe833b11f4130be0\"},\n    {file = \"diffcp-1.1.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:07f9150663aa62468223dc18e5512e8f195e98bd0320fed56d427e7aa18479f5\"},\n    {file = \"diffcp-1.1.4-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:2ca684039fbb011d073831100ae86bf46108c27e1220612d8bdaa31ade83e9c2\"},\n    {file = \"diffcp-1.1.4-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:40c573b63167cf9bc71b24a423826b74ff05ff425b66b081ac3566e2eb72589c\"},\n    {file = \"diffcp-1.1.4-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:e46fa2aac1c69e4d17c71ca134bbdacc32fe7be6634198526806fe6b335a0ef9\"},\n    {file = \"diffcp-1.1.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cc655c4af380214fae477dcbbf4ef23e424dbb78471ce5cfe292c6823f605c8d\"},\n    {file = \"diffcp-1.1.4-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:5ec267629777d0143844a645625abe45f98999ef0e83635c9f30f6789a97f373\"},\n    {file = \"diffcp-1.1.4-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:c50dccc6c144f536a8490e17dc426b176664ea318dce66a87d82e4498916203f\"},\n    {file = \"diffcp-1.1.4-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:f928ddc032f2f18e284c585f7b70a58b16cde6980ae79bf8a624fa9f8e029804\"},\n    {file = \"diffcp-1.1.4-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bfc188ade6f87a0a2aac3016e4e5ea54d4004ac8eaa546db3963425c46eabaf8\"},\n    {file = \"diffcp-1.1.4-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:d9031caf41ba01a5942df1b69ac4600d68973bf0db1c71ae4892ca9d4c8d34e9\"},\n    {file = \"diffcp-1.1.4.tar.gz\", hash = \"sha256:2c7aac13544fedcf858b33fec6aaf50cc8be6e6996ac6a54a46697e2697ab24c\"},\n]\n\n[package.dependencies]\nthreadpoolctl = \">=1.1\"\n\n[package.extras]\ntest = [\"clarabel (>=0.5.1)\", \"ecos (>=2.0.10)\", \"scs (>=3.0.0)\"]\n\n[[package]]\nname = \"distlib\"\nversion = \"0.3.9\"\ndescription = \"Distribution utilities\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"distlib-0.3.9-py2.py3-none-any.whl\", hash = \"sha256:47f8c22fd27c27e25a65601af709b38e4f0a45ea4fc2e710f65755fa8caaaf87\"},\n    {file = \"distlib-0.3.9.tar.gz\", hash = \"sha256:a60f20dea646b8a33f3e7772f74dc0b2d0772d2837ee1342a00645c81edf9403\"},\n]\n\n[[package]]\nname = \"docker-pycreds\"\nversion = \"0.4.0\"\ndescription = \"Python bindings for the docker credentials store API\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"docker-pycreds-0.4.0.tar.gz\", hash = \"sha256:6ce3270bcaf404cc4c3e27e4b6c70d3521deae82fb508767870fdbf772d584d4\"},\n    {file = \"docker_pycreds-0.4.0-py2.py3-none-any.whl\", hash = \"sha256:7266112468627868005106ec19cd0d722702d2b7d5912a28e19b826c3d37af49\"},\n]\n\n[package.dependencies]\nsix = \">=1.4.0\"\n\n[[package]]\nname = \"duckdb\"\nversion = \"0.10.3\"\ndescription = \"DuckDB in-process database\"\noptional = false\npython-versions = \">=3.7.0\"\nfiles = [\n    {file = \"duckdb-0.10.3-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:cd25cc8d001c09a19340739ba59d33e12a81ab285b7a6bed37169655e1cefb31\"},\n    {file = \"duckdb-0.10.3-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:2f9259c637b917ca0f4c63887e8d9b35ec248f5d987c886dfc4229d66a791009\"},\n    {file = \"duckdb-0.10.3-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:b48f5f1542f1e4b184e6b4fc188f497be8b9c48127867e7d9a5f4a3e334f88b0\"},\n    {file = \"duckdb-0.10.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e327f7a3951ea154bb56e3fef7da889e790bd9a67ca3c36afc1beb17d3feb6d6\"},\n    {file = \"duckdb-0.10.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5d8b20ed67da004b4481973f4254fd79a0e5af957d2382eac8624b5c527ec48c\"},\n    {file = \"duckdb-0.10.3-cp310-cp310-manylinux_2_24_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:d37680b8d7be04e4709db3a66c8b3eb7ceba2a5276574903528632f2b2cc2e60\"},\n    {file = \"duckdb-0.10.3-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:3d34b86d6a2a6dfe8bb757f90bfe7101a3bd9e3022bf19dbddfa4b32680d26a9\"},\n    {file = \"duckdb-0.10.3-cp310-cp310-win_amd64.whl\", hash = \"sha256:73b1cb283ca0f6576dc18183fd315b4e487a545667ffebbf50b08eb4e8cdc143\"},\n    {file = \"duckdb-0.10.3-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:d917dde19fcec8cadcbef1f23946e85dee626ddc133e1e3f6551f15a61a03c61\"},\n    {file = \"duckdb-0.10.3-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:46757e0cf5f44b4cb820c48a34f339a9ccf83b43d525d44947273a585a4ed822\"},\n    {file = \"duckdb-0.10.3-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:338c14d8ac53ac4aa9ec03b6f1325ecfe609ceeb72565124d489cb07f8a1e4eb\"},\n    {file = \"duckdb-0.10.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:651fcb429602b79a3cf76b662a39e93e9c3e6650f7018258f4af344c816dab72\"},\n    {file = \"duckdb-0.10.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d3ae3c73b98b6215dab93cc9bc936b94aed55b53c34ba01dec863c5cab9f8e25\"},\n    {file = \"duckdb-0.10.3-cp311-cp311-manylinux_2_24_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:56429b2cfe70e367fb818c2be19f59ce2f6b080c8382c4d10b4f90ba81f774e9\"},\n    {file = \"duckdb-0.10.3-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:b46c02c2e39e3676b1bb0dc7720b8aa953734de4fd1b762e6d7375fbeb1b63af\"},\n    {file = \"duckdb-0.10.3-cp311-cp311-win_amd64.whl\", hash = \"sha256:bcd460feef56575af2c2443d7394d405a164c409e9794a4d94cb5fdaa24a0ba4\"},\n    {file = \"duckdb-0.10.3-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:e229a7c6361afbb0d0ab29b1b398c10921263c52957aefe3ace99b0426fdb91e\"},\n    {file = \"duckdb-0.10.3-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:732b1d3b6b17bf2f32ea696b9afc9e033493c5a3b783c292ca4b0ee7cc7b0e66\"},\n    {file = \"duckdb-0.10.3-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:f5380d4db11fec5021389fb85d614680dc12757ef7c5881262742250e0b58c75\"},\n    {file = \"duckdb-0.10.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:468a4e0c0b13c55f84972b1110060d1b0f854ffeb5900a178a775259ec1562db\"},\n    {file = \"duckdb-0.10.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0fa1e7ff8d18d71defa84e79f5c86aa25d3be80d7cb7bc259a322de6d7cc72da\"},\n    {file = \"duckdb-0.10.3-cp312-cp312-manylinux_2_24_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:ed1063ed97c02e9cf2e7fd1d280de2d1e243d72268330f45344c69c7ce438a01\"},\n    {file = \"duckdb-0.10.3-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:22f2aad5bb49c007f3bfcd3e81fdedbc16a2ae41f2915fc278724ca494128b0c\"},\n    {file = \"duckdb-0.10.3-cp312-cp312-win_amd64.whl\", hash = \"sha256:8f9e2bb00a048eb70b73a494bdc868ce7549b342f7ffec88192a78e5a4e164bd\"},\n    {file = \"duckdb-0.10.3-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:a6c2fc49875b4b54e882d68703083ca6f84b27536d57d623fc872e2f502b1078\"},\n    {file = \"duckdb-0.10.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a66c125d0c30af210f7ee599e7821c3d1a7e09208196dafbf997d4e0cfcb81ab\"},\n    {file = \"duckdb-0.10.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d99dd7a1d901149c7a276440d6e737b2777e17d2046f5efb0c06ad3b8cb066a6\"},\n    {file = \"duckdb-0.10.3-cp37-cp37m-manylinux_2_24_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:5ec3bbdb209e6095d202202893763e26c17c88293b88ef986b619e6c8b6715bd\"},\n    {file = \"duckdb-0.10.3-cp37-cp37m-musllinux_1_2_x86_64.whl\", hash = \"sha256:2b3dec4ef8ed355d7b7230b40950b30d0def2c387a2e8cd7efc80b9d14134ecf\"},\n    {file = \"duckdb-0.10.3-cp37-cp37m-win_amd64.whl\", hash = \"sha256:04129f94fb49bba5eea22f941f0fb30337f069a04993048b59e2811f52d564bc\"},\n    {file = \"duckdb-0.10.3-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:d75d67024fc22c8edfd47747c8550fb3c34fb1cbcbfd567e94939ffd9c9e3ca7\"},\n    {file = \"duckdb-0.10.3-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:f3796e9507c02d0ddbba2e84c994fae131da567ce3d9cbb4cbcd32fadc5fbb26\"},\n    {file = \"duckdb-0.10.3-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:78e539d85ebd84e3e87ec44d28ad912ca4ca444fe705794e0de9be3dd5550c11\"},\n    {file = \"duckdb-0.10.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7a99b67ac674b4de32073e9bc604b9c2273d399325181ff50b436c6da17bf00a\"},\n    {file = \"duckdb-0.10.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1209a354a763758c4017a1f6a9f9b154a83bed4458287af9f71d84664ddb86b6\"},\n    {file = \"duckdb-0.10.3-cp38-cp38-manylinux_2_24_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:3b735cea64aab39b67c136ab3a571dbf834067f8472ba2f8bf0341bc91bea820\"},\n    {file = \"duckdb-0.10.3-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:816ffb9f758ed98eb02199d9321d592d7a32a6cb6aa31930f4337eb22cfc64e2\"},\n    {file = \"duckdb-0.10.3-cp38-cp38-win_amd64.whl\", hash = \"sha256:1631184b94c3dc38b13bce4045bf3ae7e1b0ecbfbb8771eb8d751d8ffe1b59b3\"},\n    {file = \"duckdb-0.10.3-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:fb98c35fc8dd65043bc08a2414dd9f59c680d7e8656295b8969f3f2061f26c52\"},\n    {file = \"duckdb-0.10.3-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:7e75c9f5b6a92b2a6816605c001d30790f6d67ce627a2b848d4d6040686efdf9\"},\n    {file = \"duckdb-0.10.3-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:ae786eddf1c2fd003466e13393b9348a44b6061af6fe7bcb380a64cac24e7df7\"},\n    {file = \"duckdb-0.10.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b9387da7b7973707b0dea2588749660dd5dd724273222680e985a2dd36787668\"},\n    {file = \"duckdb-0.10.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:538f943bf9fa8a3a7c4fafa05f21a69539d2c8a68e557233cbe9d989ae232899\"},\n    {file = \"duckdb-0.10.3-cp39-cp39-manylinux_2_24_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:6930608f35025a73eb94252964f9f19dd68cf2aaa471da3982cf6694866cfa63\"},\n    {file = \"duckdb-0.10.3-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:03bc54a9cde5490918aad82d7d2a34290e3dfb78d5b889c6626625c0f141272a\"},\n    {file = \"duckdb-0.10.3-cp39-cp39-win_amd64.whl\", hash = \"sha256:372b6e3901d85108cafe5df03c872dfb6f0dbff66165a0cf46c47246c1957aa0\"},\n    {file = \"duckdb-0.10.3.tar.gz\", hash = \"sha256:c5bd84a92bc708d3a6adffe1f554b94c6e76c795826daaaf482afc3d9c636971\"},\n]\n\n[[package]]\nname = \"equinox\"\nversion = \"0.11.12\"\ndescription = \"Elegant easy-to-use neural networks in JAX.\"\noptional = false\npython-versions = \">=3.10\"\nfiles = [\n    {file = \"equinox-0.11.12-py3-none-any.whl\", hash = \"sha256:63f7c910b037f9abb2b8942ab4ac1720d465c275b70e95dc42dd57080a0e1757\"},\n    {file = \"equinox-0.11.12.tar.gz\", hash = \"sha256:bee22aabaf7ee0cde6f2ae58cf3b981dea73d47e297361a0203e299208ef1739\"},\n]\n\n[package.dependencies]\njax = \">=0.4.38\"\njaxtyping = \">=0.2.20\"\ntyping-extensions = \">=4.5.0\"\nwadler-lindig = \">=0.1.0\"\n\n[[package]]\nname = \"filelock\"\nversion = \"3.18.0\"\ndescription = \"A platform independent file lock.\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"filelock-3.18.0-py3-none-any.whl\", hash = \"sha256:c401f4f8377c4464e6db25fff06205fd89bdd83b65eb0488ed1b160f780e21de\"},\n    {file = \"filelock-3.18.0.tar.gz\", hash = \"sha256:adbc88eabb99d2fec8c9c1b229b171f18afa655400173ddc653d5d01501fb9f2\"},\n]\n\n[package.extras]\ndocs = [\"furo (>=2024.8.6)\", \"sphinx (>=8.1.3)\", \"sphinx-autodoc-typehints (>=3)\"]\ntesting = [\"covdefaults (>=2.3)\", \"coverage (>=7.6.10)\", \"diff-cover (>=9.2.1)\", \"pytest (>=8.3.4)\", \"pytest-asyncio (>=0.25.2)\", \"pytest-cov (>=6)\", \"pytest-mock (>=3.14)\", \"pytest-timeout (>=2.3.1)\", \"virtualenv (>=20.28.1)\"]\ntyping = [\"typing-extensions (>=4.12.2)\"]\n\n[[package]]\nname = \"flake8\"\nversion = \"7.3.0\"\ndescription = \"the modular source code checker: pep8 pyflakes and co\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"flake8-7.3.0-py2.py3-none-any.whl\", hash = \"sha256:b9696257b9ce8beb888cdbe31cf885c90d31928fe202be0889a7cdafad32f01e\"},\n    {file = \"flake8-7.3.0.tar.gz\", hash = \"sha256:fe044858146b9fc69b551a4b490d69cf960fcb78ad1edcb84e7fbb1b4a8e3872\"},\n]\n\n[package.dependencies]\nmccabe = \">=0.7.0,<0.8.0\"\npycodestyle = \">=2.14.0,<2.15.0\"\npyflakes = \">=3.4.0,<3.5.0\"\n\n[[package]]\nname = \"frozenlist\"\nversion = \"1.7.0\"\ndescription = \"A list-like structure which implements collections.abc.MutableSequence\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"frozenlist-1.7.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:cc4df77d638aa2ed703b878dd093725b72a824c3c546c076e8fdf276f78ee84a\"},\n    {file = \"frozenlist-1.7.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:716a9973a2cc963160394f701964fe25012600f3d311f60c790400b00e568b61\"},\n    {file = \"frozenlist-1.7.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:a0fd1bad056a3600047fb9462cff4c5322cebc59ebf5d0a3725e0ee78955001d\"},\n    {file = \"frozenlist-1.7.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3789ebc19cb811163e70fe2bd354cea097254ce6e707ae42e56f45e31e96cb8e\"},\n    {file = \"frozenlist-1.7.0-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:af369aa35ee34f132fcfad5be45fbfcde0e3a5f6a1ec0712857f286b7d20cca9\"},\n    {file = \"frozenlist-1.7.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ac64b6478722eeb7a3313d494f8342ef3478dff539d17002f849101b212ef97c\"},\n    {file = \"frozenlist-1.7.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f89f65d85774f1797239693cef07ad4c97fdd0639544bad9ac4b869782eb1981\"},\n    {file = \"frozenlist-1.7.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1073557c941395fdfcfac13eb2456cb8aad89f9de27bae29fabca8e563b12615\"},\n    {file = \"frozenlist-1.7.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1ed8d2fa095aae4bdc7fdd80351009a48d286635edffee66bf865e37a9125c50\"},\n    {file = \"frozenlist-1.7.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:24c34bea555fe42d9f928ba0a740c553088500377448febecaa82cc3e88aa1fa\"},\n    {file = \"frozenlist-1.7.0-cp310-cp310-musllinux_1_2_armv7l.whl\", hash = \"sha256:69cac419ac6a6baad202c85aaf467b65ac860ac2e7f2ac1686dc40dbb52f6577\"},\n    {file = \"frozenlist-1.7.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:960d67d0611f4c87da7e2ae2eacf7ea81a5be967861e0c63cf205215afbfac59\"},\n    {file = \"frozenlist-1.7.0-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:41be2964bd4b15bf575e5daee5a5ce7ed3115320fb3c2b71fca05582ffa4dc9e\"},\n    {file = \"frozenlist-1.7.0-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:46d84d49e00c9429238a7ce02dc0be8f6d7cd0cd405abd1bebdc991bf27c15bd\"},\n    {file = \"frozenlist-1.7.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:15900082e886edb37480335d9d518cec978afc69ccbc30bd18610b7c1b22a718\"},\n    {file = \"frozenlist-1.7.0-cp310-cp310-win32.whl\", hash = \"sha256:400ddd24ab4e55014bba442d917203c73b2846391dd42ca5e38ff52bb18c3c5e\"},\n    {file = \"frozenlist-1.7.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:6eb93efb8101ef39d32d50bce242c84bcbddb4f7e9febfa7b524532a239b4464\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:aa51e147a66b2d74de1e6e2cf5921890de6b0f4820b257465101d7f37b49fb5a\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:9b35db7ce1cd71d36ba24f80f0c9e7cff73a28d7a74e91fe83e23d27c7828750\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:34a69a85e34ff37791e94542065c8416c1afbf820b68f720452f636d5fb990cd\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4a646531fa8d82c87fe4bb2e596f23173caec9185bfbca5d583b4ccfb95183e2\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:79b2ffbba483f4ed36a0f236ccb85fbb16e670c9238313709638167670ba235f\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:a26f205c9ca5829cbf82bb2a84b5c36f7184c4316617d7ef1b271a56720d6b30\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:bcacfad3185a623fa11ea0e0634aac7b691aa925d50a440f39b458e41c561d98\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:72c1b0fe8fe451b34f12dce46445ddf14bd2a5bcad7e324987194dc8e3a74c86\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:61d1a5baeaac6c0798ff6edfaeaa00e0e412d49946c53fae8d4b8e8b3566c4ae\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:7edf5c043c062462f09b6820de9854bf28cc6cc5b6714b383149745e287181a8\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-musllinux_1_2_armv7l.whl\", hash = \"sha256:d50ac7627b3a1bd2dcef6f9da89a772694ec04d9a61b66cf87f7d9446b4a0c31\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:ce48b2fece5aeb45265bb7a58259f45027db0abff478e3077e12b05b17fb9da7\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:fe2365ae915a1fafd982c146754e1de6ab3478def8a59c86e1f7242d794f97d5\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:45a6f2fdbd10e074e8814eb98b05292f27bad7d1883afbe009d96abdcf3bc898\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:21884e23cffabb157a9dd7e353779077bf5b8f9a58e9b262c6caad2ef5f80a56\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-win32.whl\", hash = \"sha256:284d233a8953d7b24f9159b8a3496fc1ddc00f4db99c324bd5fb5f22d8698ea7\"},\n    {file = \"frozenlist-1.7.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:387cbfdcde2f2353f19c2f66bbb52406d06ed77519ac7ee21be0232147c2592d\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:3dbf9952c4bb0e90e98aec1bd992b3318685005702656bc6f67c1a32b76787f2\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:1f5906d3359300b8a9bb194239491122e6cf1444c2efb88865426f170c262cdb\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:3dabd5a8f84573c8d10d8859a50ea2dec01eea372031929871368c09fa103478\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:aa57daa5917f1738064f302bf2626281a1cb01920c32f711fbc7bc36111058a8\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:c193dda2b6d49f4c4398962810fa7d7c78f032bf45572b3e04dd5249dff27e08\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:bfe2b675cf0aaa6d61bf8fbffd3c274b3c9b7b1623beb3809df8a81399a4a9c4\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:8fc5d5cda37f62b262405cf9652cf0856839c4be8ee41be0afe8858f17f4c94b\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:b0d5ce521d1dd7d620198829b87ea002956e4319002ef0bc8d3e6d045cb4646e\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:488d0a7d6a0008ca0db273c542098a0fa9e7dfaa7e57f70acef43f32b3f69dca\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:15a7eaba63983d22c54d255b854e8108e7e5f3e89f647fc854bd77a237e767df\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-musllinux_1_2_armv7l.whl\", hash = \"sha256:1eaa7e9c6d15df825bf255649e05bd8a74b04a4d2baa1ae46d9c2d00b2ca2cb5\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:e4389e06714cfa9d47ab87f784a7c5be91d3934cd6e9a7b85beef808297cc025\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:73bd45e1488c40b63fe5a7df892baf9e2a4d4bb6409a2b3b78ac1c6236178e01\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:99886d98e1643269760e5fe0df31e5ae7050788dd288947f7f007209b8c33f08\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:290a172aae5a4c278c6da8a96222e6337744cd9c77313efe33d5670b9f65fc43\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-win32.whl\", hash = \"sha256:426c7bc70e07cfebc178bc4c2bf2d861d720c4fff172181eeb4a4c41d4ca2ad3\"},\n    {file = \"frozenlist-1.7.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:563b72efe5da92e02eb68c59cb37205457c977aa7a449ed1b37e6939e5c47c6a\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:ee80eeda5e2a4e660651370ebffd1286542b67e268aa1ac8d6dbe973120ef7ee\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:d1a81c85417b914139e3a9b995d4a1c84559afc839a93cf2cb7f15e6e5f6ed2d\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:cbb65198a9132ebc334f237d7b0df163e4de83fb4f2bdfe46c1e654bdb0c5d43\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dab46c723eeb2c255a64f9dc05b8dd601fde66d6b19cdb82b2e09cc6ff8d8b5d\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:6aeac207a759d0dedd2e40745575ae32ab30926ff4fa49b1635def65806fddee\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:bd8c4e58ad14b4fa7802b8be49d47993182fdd4023393899632c88fd8cd994eb\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:04fb24d104f425da3540ed83cbfc31388a586a7696142004c577fa61c6298c3f\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6a5c505156368e4ea6b53b5ac23c92d7edc864537ff911d2fb24c140bb175e60\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8bd7eb96a675f18aa5c553eb7ddc24a43c8c18f22e1f9925528128c052cdbe00\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:05579bf020096fe05a764f1f84cd104a12f78eaab68842d036772dc6d4870b4b\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-musllinux_1_2_armv7l.whl\", hash = \"sha256:376b6222d114e97eeec13d46c486facd41d4f43bab626b7c3f6a8b4e81a5192c\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:0aa7e176ebe115379b5b1c95b4096fb1c17cce0847402e227e712c27bdb5a949\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:3fbba20e662b9c2130dc771e332a99eff5da078b2b2648153a40669a6d0e36ca\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:f3f4410a0a601d349dd406b5713fec59b4cee7e71678d5b17edda7f4655a940b\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:e2cdfaaec6a2f9327bf43c933c0319a7c429058e8537c508964a133dffee412e\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-win32.whl\", hash = \"sha256:5fc4df05a6591c7768459caba1b342d9ec23fa16195e744939ba5914596ae3e1\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:52109052b9791a3e6b5d1b65f4b909703984b770694d3eb64fad124c835d7cba\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-macosx_10_13_universal2.whl\", hash = \"sha256:a6f86e4193bb0e235ef6ce3dde5cbabed887e0b11f516ce8a0f4d3b33078ec2d\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:82d664628865abeb32d90ae497fb93df398a69bb3434463d172b80fc25b0dd7d\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:912a7e8375a1c9a68325a902f3953191b7b292aa3c3fb0d71a216221deca460b\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9537c2777167488d539bc5de2ad262efc44388230e5118868e172dd4a552b146\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:f34560fb1b4c3e30ba35fa9a13894ba39e5acfc5f60f57d8accde65f46cc5e74\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:acd03d224b0175f5a850edc104ac19040d35419eddad04e7cf2d5986d98427f1\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f2038310bc582f3d6a09b3816ab01737d60bf7b1ec70f5356b09e84fb7408ab1\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:b8c05e4c8e5f36e5e088caa1bf78a687528f83c043706640a92cb76cd6999384\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:765bb588c86e47d0b68f23c1bee323d4b703218037765dcf3f25c838c6fecceb\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:32dc2e08c67d86d0969714dd484fd60ff08ff81d1a1e40a77dd34a387e6ebc0c\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-musllinux_1_2_armv7l.whl\", hash = \"sha256:c0303e597eb5a5321b4de9c68e9845ac8f290d2ab3f3e2c864437d3c5a30cd65\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:a47f2abb4e29b3a8d0b530f7c3598badc6b134562b1a5caee867f7c62fee51e3\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-musllinux_1_2_ppc64le.whl\", hash = \"sha256:3d688126c242a6fabbd92e02633414d40f50bb6002fa4cf995a1d18051525657\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-musllinux_1_2_s390x.whl\", hash = \"sha256:4e7e9652b3d367c7bd449a727dc79d5043f48b88d0cbfd4f9f1060cf2b414104\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:1a85e345b4c43db8b842cab1feb41be5cc0b10a1830e6295b69d7310f99becaf\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-win32.whl\", hash = \"sha256:3a14027124ddb70dfcee5148979998066897e79f89f64b13328595c4bdf77c81\"},\n    {file = \"frozenlist-1.7.0-cp313-cp313t-win_amd64.whl\", hash = \"sha256:3bf8010d71d4507775f658e9823210b7427be36625b387221642725b515dcf3e\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:cea3dbd15aea1341ea2de490574a4a37ca080b2ae24e4b4f4b51b9057b4c3630\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:7d536ee086b23fecc36c2073c371572374ff50ef4db515e4e503925361c24f71\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:dfcebf56f703cb2e346315431699f00db126d158455e513bd14089d992101e44\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:974c5336e61d6e7eb1ea5b929cb645e882aadab0095c5a6974a111e6479f8878\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:c70db4a0ab5ab20878432c40563573229a7ed9241506181bba12f6b7d0dc41cb\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1137b78384eebaf70560a36b7b229f752fb64d463d38d1304939984d5cb887b6\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:e793a9f01b3e8b5c0bc646fb59140ce0efcc580d22a3468d70766091beb81b35\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:74739ba8e4e38221d2c5c03d90a7e542cb8ad681915f4ca8f68d04f810ee0a87\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1e63344c4e929b1a01e29bc184bbb5fd82954869033765bfe8d65d09e336a677\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:2ea2a7369eb76de2217a842f22087913cdf75f63cf1307b9024ab82dfb525938\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-musllinux_1_2_armv7l.whl\", hash = \"sha256:836b42f472a0e006e02499cef9352ce8097f33df43baaba3e0a28a964c26c7d2\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:e22b9a99741294b2571667c07d9f8cceec07cb92aae5ccda39ea1b6052ed4319\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:9a19e85cc503d958abe5218953df722748d87172f71b73cf3c9257a91b999890\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:f22dac33bb3ee8fe3e013aa7b91dc12f60d61d05b7fe32191ffa84c3aafe77bd\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:9ccec739a99e4ccf664ea0775149f2749b8a6418eb5b8384b4dc0a7d15d304cb\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-win32.whl\", hash = \"sha256:b3950f11058310008a87757f3eee16a8e1ca97979833239439586857bc25482e\"},\n    {file = \"frozenlist-1.7.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:43a82fce6769c70f2f5a06248b614a7d268080a9d20f7457ef10ecee5af82b63\"},\n    {file = \"frozenlist-1.7.0-py3-none-any.whl\", hash = \"sha256:9a5af342e34f7e97caf8c995864c7a396418ae2859cc6fdf1b1073020d516a7e\"},\n    {file = \"frozenlist-1.7.0.tar.gz\", hash = \"sha256:2e310d81923c2437ea8670467121cc3e9b0f76d3043cc1d2331d56c7fb7a3a8f\"},\n]\n\n[[package]]\nname = \"fsspec\"\nversion = \"2025.5.1\"\ndescription = \"File-system specification\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"fsspec-2025.5.1-py3-none-any.whl\", hash = \"sha256:24d3a2e663d5fc735ab256263c4075f374a174c3410c0b25e5bd1970bceaa462\"},\n    {file = \"fsspec-2025.5.1.tar.gz\", hash = \"sha256:2e55e47a540b91843b755e83ded97c6e897fa0942b11490113f09e9c443c2475\"},\n]\n\n[package.extras]\nabfs = [\"adlfs\"]\nadl = [\"adlfs\"]\narrow = [\"pyarrow (>=1)\"]\ndask = [\"dask\", \"distributed\"]\ndev = [\"pre-commit\", \"ruff\"]\ndoc = [\"numpydoc\", \"sphinx\", \"sphinx-design\", \"sphinx-rtd-theme\", \"yarl\"]\ndropbox = [\"dropbox\", \"dropboxdrivefs\", \"requests\"]\nfull = [\"adlfs\", \"aiohttp (!=4.0.0a0,!=4.0.0a1)\", \"dask\", \"distributed\", \"dropbox\", \"dropboxdrivefs\", \"fusepy\", \"gcsfs\", \"libarchive-c\", \"ocifs\", \"panel\", \"paramiko\", \"pyarrow (>=1)\", \"pygit2\", \"requests\", \"s3fs\", \"smbprotocol\", \"tqdm\"]\nfuse = [\"fusepy\"]\ngcs = [\"gcsfs\"]\ngit = [\"pygit2\"]\ngithub = [\"requests\"]\ngs = [\"gcsfs\"]\ngui = [\"panel\"]\nhdfs = [\"pyarrow (>=1)\"]\nhttp = [\"aiohttp (!=4.0.0a0,!=4.0.0a1)\"]\nlibarchive = [\"libarchive-c\"]\noci = [\"ocifs\"]\ns3 = [\"s3fs\"]\nsftp = [\"paramiko\"]\nsmb = [\"smbprotocol\"]\nssh = [\"paramiko\"]\ntest = [\"aiohttp (!=4.0.0a0,!=4.0.0a1)\", \"numpy\", \"pytest\", \"pytest-asyncio (!=0.22.0)\", \"pytest-benchmark\", \"pytest-cov\", \"pytest-mock\", \"pytest-recording\", \"pytest-rerunfailures\", \"requests\"]\ntest-downstream = [\"aiobotocore (>=2.5.4,<3.0.0)\", \"dask[dataframe,test]\", \"moto[server] (>4,<5)\", \"pytest-timeout\", \"xarray\"]\ntest-full = [\"adlfs\", \"aiohttp (!=4.0.0a0,!=4.0.0a1)\", \"cloudpickle\", \"dask\", \"distributed\", \"dropbox\", \"dropboxdrivefs\", \"fastparquet\", \"fusepy\", \"gcsfs\", \"jinja2\", \"kerchunk\", \"libarchive-c\", \"lz4\", \"notebook\", \"numpy\", \"ocifs\", \"pandas\", \"panel\", \"paramiko\", \"pyarrow\", \"pyarrow (>=1)\", \"pyftpdlib\", \"pygit2\", \"pytest\", \"pytest-asyncio (!=0.22.0)\", \"pytest-benchmark\", \"pytest-cov\", \"pytest-mock\", \"pytest-recording\", \"pytest-rerunfailures\", \"python-snappy\", \"requests\", \"smbprotocol\", \"tqdm\", \"urllib3\", \"zarr\", \"zstandard\"]\ntqdm = [\"tqdm\"]\n\n[[package]]\nname = \"gitdb\"\nversion = \"4.0.12\"\ndescription = \"Git Object Database\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"gitdb-4.0.12-py3-none-any.whl\", hash = \"sha256:67073e15955400952c6565cc3e707c554a4eea2e428946f7a4c162fab9bd9bcf\"},\n    {file = \"gitdb-4.0.12.tar.gz\", hash = \"sha256:5ef71f855d191a3326fcfbc0d5da835f26b13fbcba60c32c21091c349ffdb571\"},\n]\n\n[package.dependencies]\nsmmap = \">=3.0.1,<6\"\n\n[[package]]\nname = \"gitpython\"\nversion = \"3.1.44\"\ndescription = \"GitPython is a Python library used to interact with Git repositories\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"GitPython-3.1.44-py3-none-any.whl\", hash = \"sha256:9e0e10cda9bed1ee64bc9a6de50e7e38a9c9943241cd7f585f6df3ed28011110\"},\n    {file = \"gitpython-3.1.44.tar.gz\", hash = \"sha256:c87e30b26253bf5418b01b0660f818967f3c503193838337fe5e573331249269\"},\n]\n\n[package.dependencies]\ngitdb = \">=4.0.1,<5\"\n\n[package.extras]\ndoc = [\"sphinx (>=7.1.2,<7.2)\", \"sphinx-autodoc-typehints\", \"sphinx_rtd_theme\"]\ntest = [\"coverage[toml]\", \"ddt (>=1.1.1,!=1.4.3)\", \"mock\", \"mypy\", \"pre-commit\", \"pytest (>=7.3.1)\", \"pytest-cov\", \"pytest-instafail\", \"pytest-mock\", \"pytest-sugar\", \"typing-extensions\"]\n\n[[package]]\nname = \"identify\"\nversion = \"2.6.12\"\ndescription = \"File identification library for Python\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"identify-2.6.12-py2.py3-none-any.whl\", hash = \"sha256:ad9672d5a72e0d2ff7c5c8809b62dfa60458626352fb0eb7b55e69bdc45334a2\"},\n    {file = \"identify-2.6.12.tar.gz\", hash = \"sha256:d8de45749f1efb108badef65ee8386f0f7bb19a7f26185f74de6367bffbaf0e6\"},\n]\n\n[package.extras]\nlicense = [\"ukkonen\"]\n\n[[package]]\nname = \"idna\"\nversion = \"3.10\"\ndescription = \"Internationalized Domain Names in Applications (IDNA)\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"idna-3.10-py3-none-any.whl\", hash = \"sha256:946d195a0d259cbba61165e88e65941f16e9b36ea6ddb97f00452bae8b1287d3\"},\n    {file = \"idna-3.10.tar.gz\", hash = \"sha256:12f65c9b470abda6dc35cf8e63cc574b1c52b11df2c86030af0ac09b01b13ea9\"},\n]\n\n[package.extras]\nall = [\"flake8 (>=7.1.1)\", \"mypy (>=1.11.2)\", \"pytest (>=8.3.2)\", \"ruff (>=0.6.2)\"]\n\n[[package]]\nname = \"iniconfig\"\nversion = \"2.1.0\"\ndescription = \"brain-dead simple config-ini parsing\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"iniconfig-2.1.0-py3-none-any.whl\", hash = \"sha256:9deba5723312380e77435581c6bf4935c94cbfab9b1ed33ef8d238ea168eb760\"},\n    {file = \"iniconfig-2.1.0.tar.gz\", hash = \"sha256:3abbd2e30b36733fee78f9c7f7308f2d0050e88f0087fd25c2645f63c773e1c7\"},\n]\n\n[[package]]\nname = \"intel-openmp\"\nversion = \"2021.4.0\"\ndescription = \"Intel OpenMP* Runtime Library\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"intel_openmp-2021.4.0-py2.py3-none-macosx_10_15_x86_64.macosx_11_0_x86_64.whl\", hash = \"sha256:41c01e266a7fdb631a7609191709322da2bbf24b252ba763f125dd651bcc7675\"},\n    {file = \"intel_openmp-2021.4.0-py2.py3-none-manylinux1_i686.whl\", hash = \"sha256:3b921236a38384e2016f0f3d65af6732cf2c12918087128a9163225451e776f2\"},\n    {file = \"intel_openmp-2021.4.0-py2.py3-none-manylinux1_x86_64.whl\", hash = \"sha256:e2240ab8d01472fed04f3544a878cda5da16c26232b7ea1b59132dbfb48b186e\"},\n    {file = \"intel_openmp-2021.4.0-py2.py3-none-win32.whl\", hash = \"sha256:6e863d8fd3d7e8ef389d52cf97a50fe2afe1a19247e8c0d168ce021546f96fc9\"},\n    {file = \"intel_openmp-2021.4.0-py2.py3-none-win_amd64.whl\", hash = \"sha256:eef4c8bcc8acefd7f5cd3b9384dbf73d59e2c99fc56545712ded913f43c4a94f\"},\n]\n\n[[package]]\nname = \"isort\"\nversion = \"5.13.2\"\ndescription = \"A Python utility / library to sort Python imports.\"\noptional = false\npython-versions = \">=3.8.0\"\nfiles = [\n    {file = \"isort-5.13.2-py3-none-any.whl\", hash = \"sha256:8ca5e72a8d85860d5a3fa69b8745237f2939afe12dbf656afbcb47fe72d947a6\"},\n    {file = \"isort-5.13.2.tar.gz\", hash = \"sha256:48fdfcb9face5d58a4f6dde2e72a1fb8dcaf8ab26f95ab49fab84c2ddefb0109\"},\n]\n\n[package.extras]\ncolors = [\"colorama (>=0.4.6)\"]\n\n[[package]]\nname = \"jax\"\nversion = \"0.4.38\"\ndescription = \"Differentiate, compile, and transform Numpy code.\"\noptional = false\npython-versions = \">=3.10\"\nfiles = [\n    {file = \"jax-0.4.38-py3-none-any.whl\", hash = \"sha256:78987306f7041ea8500d99df1a17c33ed92620c2268c4c3677fb24e06712be64\"},\n    {file = \"jax-0.4.38.tar.gz\", hash = \"sha256:43bae65881628319e0a2148e8f81a202fbc2b8d048e35c7cb1df2416672fa4a8\"},\n]\n\n[package.dependencies]\njaxlib = \"0.4.38\"\nml_dtypes = \">=0.4.0\"\nnumpy = [\n    {version = \">=1.24\", markers = \"python_version < \\\"3.12\\\"\"},\n    {version = \">=1.26.0\", markers = \"python_version >= \\\"3.12\\\"\"},\n]\nopt_einsum = \"*\"\nscipy = [\n    {version = \">=1.10\", markers = \"python_version < \\\"3.12\\\"\"},\n    {version = \">=1.11.1\", markers = \"python_version >= \\\"3.12\\\"\"},\n]\n\n[package.extras]\nci = [\"jaxlib (==0.4.36)\"]\ncuda = [\"jax-cuda12-plugin[with-cuda] (==0.4.38)\", \"jaxlib (==0.4.38)\"]\ncuda12 = [\"jax-cuda12-plugin[with-cuda] (==0.4.38)\", \"jaxlib (==0.4.38)\"]\ncuda12-local = [\"jax-cuda12-plugin (==0.4.38)\", \"jaxlib (==0.4.38)\"]\ncuda12-pip = [\"jax-cuda12-plugin[with-cuda] (==0.4.38)\", \"jaxlib (==0.4.38)\"]\nk8s = [\"kubernetes\"]\nminimum-jaxlib = [\"jaxlib (==0.4.38)\"]\ntpu = [\"jaxlib (==0.4.38)\", \"libtpu (==0.0.7)\", \"libtpu-nightly (==0.1.dev20241010+nightly.cleanup)\", \"requests\"]\n\n[[package]]\nname = \"jaxlib\"\nversion = \"0.4.38\"\ndescription = \"XLA library for JAX\"\noptional = false\npython-versions = \">=3.10\"\nfiles = [\n    {file = \"jaxlib-0.4.38-cp310-cp310-macosx_10_14_x86_64.whl\", hash = \"sha256:55c19b9d3f33a6fc59f644aa5a21fba02639ccdd776cb4a9b5526625f57839ff\"},\n    {file = \"jaxlib-0.4.38-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:30b2f52cb50d74734af2f477c2533a7a583e3bb7b2c8acdeb361ee77d940577a\"},\n    {file = \"jaxlib-0.4.38-cp310-cp310-manylinux2014_aarch64.whl\", hash = \"sha256:ee19c163a8fdf0839d4c18b88a5fbfb4e731ba7c437416d3e5483e570bb764e4\"},\n    {file = \"jaxlib-0.4.38-cp310-cp310-manylinux2014_x86_64.whl\", hash = \"sha256:61aeccb9a27c67fdb8450f6357240019cd4511cb9d62a44e4764756d384853ad\"},\n    {file = \"jaxlib-0.4.38-cp310-cp310-win_amd64.whl\", hash = \"sha256:d6ab745a89d0fb737a36fe1d8b86659e3fffe6ee8303b20651b26193d5edc0ef\"},\n    {file = \"jaxlib-0.4.38-cp311-cp311-macosx_10_14_x86_64.whl\", hash = \"sha256:b67fdeabd6dfed08b7768f3bdffb521160085f8305669bd197beef61d08de08b\"},\n    {file = \"jaxlib-0.4.38-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:3fb0eaae7369157afecbead50aaf29e73ffddfa77a2335d721bd9794f3c510e4\"},\n    {file = \"jaxlib-0.4.38-cp311-cp311-manylinux2014_aarch64.whl\", hash = \"sha256:43db58c4c427627296366a56c10318e1f00f503690e17f94bb4344293e1995e0\"},\n    {file = \"jaxlib-0.4.38-cp311-cp311-manylinux2014_x86_64.whl\", hash = \"sha256:2751ff7037d6a997d0be0e77cc4be381c5a9f9bb8b314edb755c13a6fd969f45\"},\n    {file = \"jaxlib-0.4.38-cp311-cp311-win_amd64.whl\", hash = \"sha256:35226968fc9de6873d1571670eac4117f5ed80e955f7a1775204d1044abe16c6\"},\n    {file = \"jaxlib-0.4.38-cp312-cp312-macosx_10_14_x86_64.whl\", hash = \"sha256:3fefea985f0415816f3bbafd3f03a437050275ef9bac9a72c1314e1644ac57c1\"},\n    {file = \"jaxlib-0.4.38-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:f33bcafe32c97a562ecf6894d7c41674c80c0acdedfa5423d49af51147149874\"},\n    {file = \"jaxlib-0.4.38-cp312-cp312-manylinux2014_aarch64.whl\", hash = \"sha256:496f45b0e001a2341309cd0c74af0b670537dced79c168cb230cfcc773f0aa86\"},\n    {file = \"jaxlib-0.4.38-cp312-cp312-manylinux2014_x86_64.whl\", hash = \"sha256:dad6c0a96567c06d083c0469fec40f201210b099365bd698be31a6d2ec88fd59\"},\n    {file = \"jaxlib-0.4.38-cp312-cp312-win_amd64.whl\", hash = \"sha256:966cdec36cfa978f5b4582bcb4147fe511725b94c1a752dac3a5f52ce46b6fa3\"},\n    {file = \"jaxlib-0.4.38-cp313-cp313-macosx_10_14_x86_64.whl\", hash = \"sha256:41e55ae5818a882e5789e848f6f16687ac132bcfbb5a5fa114a5d18b78d05f2d\"},\n    {file = \"jaxlib-0.4.38-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:6fe326b8af366387dd47ccf312583b2b17fed12712c9b74a648b18a13cbdbabf\"},\n    {file = \"jaxlib-0.4.38-cp313-cp313-manylinux2014_aarch64.whl\", hash = \"sha256:248cca3771ebf24b070f49701364ceada33e6139445b06c782cca5ac5ad92bf4\"},\n    {file = \"jaxlib-0.4.38-cp313-cp313-manylinux2014_x86_64.whl\", hash = \"sha256:2ce77ba8cda9259a4bca97afc1c722e4291a6c463a63f8d372c6edc85117d625\"},\n    {file = \"jaxlib-0.4.38-cp313-cp313-win_amd64.whl\", hash = \"sha256:4103db0b3a38a5dc132741237453c24d8547290a22079ba1b577d6c88c95300a\"},\n]\n\n[package.dependencies]\nml-dtypes = \">=0.2.0\"\nnumpy = \">=1.24\"\nscipy = [\n    {version = \">=1.10\", markers = \"python_version < \\\"3.12\\\"\"},\n    {version = \">=1.11.1\", markers = \"python_version >= \\\"3.12\\\"\"},\n]\n\n[[package]]\nname = \"jaxopt\"\nversion = \"0.8.5\"\ndescription = \"Hardware accelerated, batchable and differentiable optimizers in JAX.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"jaxopt-0.8.5-py3-none-any.whl\", hash = \"sha256:ff221d1a86908ec759eb1e219ee1d12bf208a70707e961bf7401076fe7cf4d5e\"},\n    {file = \"jaxopt-0.8.5.tar.gz\", hash = \"sha256:2790bd68ef132b216c083a8bc7a2704eceb35a92c0fc0a1e652e79dfb1e9e9ab\"},\n]\n\n[package.dependencies]\njax = \">=0.2.18\"\njaxlib = \">=0.1.69\"\nnumpy = \">=1.18.4\"\nscipy = \">=1.0.0\"\n\n[[package]]\nname = \"jaxtyping\"\nversion = \"0.3.2\"\ndescription = \"Type annotations and runtime checking for shape and dtype of JAX/NumPy/PyTorch/etc. arrays.\"\noptional = false\npython-versions = \">=3.10\"\nfiles = [\n    {file = \"jaxtyping-0.3.2-py3-none-any.whl\", hash = \"sha256:6a020fd276226ddb5ac4f5725323843dd65e3c7e85c64fd62431e5f738c74e04\"},\n    {file = \"jaxtyping-0.3.2.tar.gz\", hash = \"sha256:f30483fac4b42e915db8ad2414a85c3b63284aa7d3c100b96b59f755cf4a86ad\"},\n]\n\n[package.dependencies]\nwadler-lindig = \">=0.1.3\"\n\n[package.extras]\ndocs = [\"hippogriffe (==0.2.0)\", \"mkdocs (==1.6.1)\", \"mkdocs-include-exclude-files (==0.1.0)\", \"mkdocs-ipynb (==0.1.0)\", \"mkdocs-material (==9.6.7)\", \"mkdocstrings[python] (==0.28.3)\", \"pymdown-extensions (==10.14.3)\"]\n\n[[package]]\nname = \"jinja2\"\nversion = \"3.1.6\"\ndescription = \"A very fast and expressive template engine.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"jinja2-3.1.6-py3-none-any.whl\", hash = \"sha256:85ece4451f492d0c13c5dd7c13a64681a86afae63a5f347908daf103ce6d2f67\"},\n    {file = \"jinja2-3.1.6.tar.gz\", hash = \"sha256:0137fb05990d35f1275a587e9aee6d56da821fc83491a0fb838183be43f66d6d\"},\n]\n\n[package.dependencies]\nMarkupSafe = \">=2.0\"\n\n[package.extras]\ni18n = [\"Babel (>=2.7)\"]\n\n[[package]]\nname = \"joblib\"\nversion = \"1.5.1\"\ndescription = \"Lightweight pipelining with Python functions\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"joblib-1.5.1-py3-none-any.whl\", hash = \"sha256:4719a31f054c7d766948dcd83e9613686b27114f190f717cec7eaa2084f8a74a\"},\n    {file = \"joblib-1.5.1.tar.gz\", hash = \"sha256:f4f86e351f39fe3d0d32a9f2c3d8af1ee4cec285aafcb27003dda5205576b444\"},\n]\n\n[[package]]\nname = \"lightning-utilities\"\nversion = \"0.14.3\"\ndescription = \"Lightning toolbox for across the our ecosystem.\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"lightning_utilities-0.14.3-py3-none-any.whl\", hash = \"sha256:4ab9066aa36cd7b93a05713808901909e96cc3f187ea6fd3052b2fd91313b468\"},\n    {file = \"lightning_utilities-0.14.3.tar.gz\", hash = \"sha256:37e2f83f273890052955a44054382c211a303012ee577619efbaa5df9e65e9f5\"},\n]\n\n[package.dependencies]\npackaging = \">=17.1\"\nsetuptools = \"*\"\ntyping_extensions = \"*\"\n\n[package.extras]\ncli = [\"fire\"]\ndocs = [\"requests (>=2.0.0)\"]\ntyping = [\"fire\", \"mypy (>=1.0.0)\", \"types-setuptools\"]\n\n[[package]]\nname = \"markupsafe\"\nversion = \"3.0.2\"\ndescription = \"Safely add untrusted strings to HTML/XML markup.\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:7e94c425039cde14257288fd61dcfb01963e658efbc0ff54f5306b06054700f8\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:9e2d922824181480953426608b81967de705c3cef4d1af983af849d7bd619158\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:38a9ef736c01fccdd6600705b09dc574584b89bea478200c5fbf112a6b0d5579\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bbcb445fa71794da8f178f0f6d66789a28d7319071af7a496d4d507ed566270d\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:57cb5a3cf367aeb1d316576250f65edec5bb3be939e9247ae594b4bcbc317dfb\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:3809ede931876f5b2ec92eef964286840ed3540dadf803dd570c3b7e13141a3b\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:e07c3764494e3776c602c1e78e298937c3315ccc9043ead7e685b7f2b8d47b3c\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:b424c77b206d63d500bcb69fa55ed8d0e6a3774056bdc4839fc9298a7edca171\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-win32.whl\", hash = \"sha256:fcabf5ff6eea076f859677f5f0b6b5c1a51e70a376b0579e0eadef8db48c6b50\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:6af100e168aa82a50e186c82875a5893c5597a0c1ccdb0d8b40240b1f28b969a\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:9025b4018f3a1314059769c7bf15441064b2207cb3f065e6ea1e7359cb46db9d\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:93335ca3812df2f366e80509ae119189886b0f3c2b81325d39efdb84a1e2ae93\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2cb8438c3cbb25e220c2ab33bb226559e7afb3baec11c4f218ffa7308603c832\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a123e330ef0853c6e822384873bef7507557d8e4a082961e1defa947aa59ba84\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1e084f686b92e5b83186b07e8a17fc09e38fff551f3602b249881fec658d3eca\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:d8213e09c917a951de9d09ecee036d5c7d36cb6cb7dbaece4c71a60d79fb9798\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:5b02fb34468b6aaa40dfc198d813a641e3a63b98c2b05a16b9f80b7ec314185e\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:0bff5e0ae4ef2e1ae4fdf2dfd5b76c75e5c2fa4132d05fc1b0dabcd20c7e28c4\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-win32.whl\", hash = \"sha256:6c89876f41da747c8d3677a2b540fb32ef5715f97b66eeb0c6b66f5e3ef6f59d\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:70a87b411535ccad5ef2f1df5136506a10775d267e197e4cf531ced10537bd6b\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:9778bd8ab0a994ebf6f84c2b949e65736d5575320a17ae8984a77fab08db94cf\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:846ade7b71e3536c4e56b386c2a47adf5741d2d8b94ec9dc3e92e5e1ee1e2225\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1c99d261bd2d5f6b59325c92c73df481e05e57f19837bdca8413b9eac4bd8028\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e17c96c14e19278594aa4841ec148115f9c7615a47382ecb6b82bd8fea3ab0c8\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:88416bd1e65dcea10bc7569faacb2c20ce071dd1f87539ca2ab364bf6231393c\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:2181e67807fc2fa785d0592dc2d6206c019b9502410671cc905d132a92866557\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:52305740fe773d09cffb16f8ed0427942901f00adedac82ec8b67752f58a1b22\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:ad10d3ded218f1039f11a75f8091880239651b52e9bb592ca27de44eed242a48\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-win32.whl\", hash = \"sha256:0f4ca02bea9a23221c0182836703cbf8930c5e9454bacce27e767509fa286a30\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-win_amd64.whl\", hash = \"sha256:8e06879fc22a25ca47312fbe7c8264eb0b662f6db27cb2d3bbbc74b1df4b9b87\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:ba9527cdd4c926ed0760bc301f6728ef34d841f405abf9d4f959c478421e4efd\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:f8b3d067f2e40fe93e1ccdd6b2e1d16c43140e76f02fb1319a05cf2b79d99430\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:569511d3b58c8791ab4c2e1285575265991e6d8f8700c7be0e88f86cb0672094\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:15ab75ef81add55874e7ab7055e9c397312385bd9ced94920f2802310c930396\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f3818cb119498c0678015754eba762e0d61e5b52d34c8b13d770f0719f7b1d79\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:cdb82a876c47801bb54a690c5ae105a46b392ac6099881cdfb9f6e95e4014c6a\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:cabc348d87e913db6ab4aa100f01b08f481097838bdddf7c7a84b7575b7309ca\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:444dcda765c8a838eaae23112db52f1efaf750daddb2d9ca300bcae1039adc5c\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-win32.whl\", hash = \"sha256:bcf3e58998965654fdaff38e58584d8937aa3096ab5354d493c77d1fdd66d7a1\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-win_amd64.whl\", hash = \"sha256:e6a2a455bd412959b57a172ce6328d2dd1f01cb2135efda2e4576e8a23fa3b0f\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-macosx_10_13_universal2.whl\", hash = \"sha256:b5a6b3ada725cea8a5e634536b1b01c30bcdcd7f9c6fff4151548d5bf6b3a36c\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:a904af0a6162c73e3edcb969eeeb53a63ceeb5d8cf642fade7d39e7963a22ddb\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4aa4e5faecf353ed117801a068ebab7b7e09ffb6e1d5e412dc852e0da018126c\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c0ef13eaeee5b615fb07c9a7dadb38eac06a0608b41570d8ade51c56539e509d\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d16a81a06776313e817c951135cf7340a3e91e8c1ff2fac444cfd75fffa04afe\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:6381026f158fdb7c72a168278597a5e3a5222e83ea18f543112b2662a9b699c5\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:3d79d162e7be8f996986c064d1c7c817f6df3a77fe3d6859f6f9e7be4b8c213a\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:131a3c7689c85f5ad20f9f6fb1b866f402c445b220c19fe4308c0b147ccd2ad9\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-win32.whl\", hash = \"sha256:ba8062ed2cf21c07a9e295d5b8a2a5ce678b913b45fdf68c32d95d6c1291e0b6\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-win_amd64.whl\", hash = \"sha256:e444a31f8db13eb18ada366ab3cf45fd4b31e4db1236a4448f68778c1d1a5a2f\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:eaa0a10b7f72326f1372a713e73c3f739b524b3af41feb43e4921cb529f5929a\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:48032821bbdf20f5799ff537c7ac3d1fba0ba032cfc06194faffa8cda8b560ff\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1a9d3f5f0901fdec14d8d2f66ef7d035f2157240a433441719ac9a3fba440b13\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:88b49a3b9ff31e19998750c38e030fc7bb937398b1f78cfa599aaef92d693144\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:cfad01eed2c2e0c01fd0ecd2ef42c492f7f93902e39a42fc9ee1692961443a29\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:1225beacc926f536dc82e45f8a4d68502949dc67eea90eab715dea3a21c1b5f0\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:3169b1eefae027567d1ce6ee7cae382c57fe26e82775f460f0b2778beaad66c0\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:eb7972a85c54febfb25b5c4b4f3af4dcc731994c7da0d8a0b4a6eb0640e1d178\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-win32.whl\", hash = \"sha256:8c4e8c3ce11e1f92f6536ff07154f9d49677ebaaafc32db9db4620bc11ed480f\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:6e296a513ca3d94054c2c881cc913116e90fd030ad1c656b3869762b754f5f8a\"},\n    {file = \"markupsafe-3.0.2.tar.gz\", hash = \"sha256:ee55d3edf80167e48ea11a923c7386f4669df67d7994554387f84e7d8b0a2bf0\"},\n]\n\n[[package]]\nname = \"mccabe\"\nversion = \"0.7.0\"\ndescription = \"McCabe checker, plugin for flake8\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"mccabe-0.7.0-py2.py3-none-any.whl\", hash = \"sha256:6c2d30ab6be0e4a46919781807b4f0d834ebdd6c6e3dca0bda5a15f863427b6e\"},\n    {file = \"mccabe-0.7.0.tar.gz\", hash = \"sha256:348e0240c33b60bbdf4e523192ef919f28cb2c3d7d5c7794f74009290f236325\"},\n]\n\n[[package]]\nname = \"mkl\"\nversion = \"2021.4.0\"\ndescription = \"Intel® oneAPI Math Kernel Library\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"mkl-2021.4.0-py2.py3-none-macosx_10_15_x86_64.macosx_11_0_x86_64.whl\", hash = \"sha256:67460f5cd7e30e405b54d70d1ed3ca78118370b65f7327d495e9c8847705e2fb\"},\n    {file = \"mkl-2021.4.0-py2.py3-none-manylinux1_i686.whl\", hash = \"sha256:636d07d90e68ccc9630c654d47ce9fdeb036bb46e2b193b3a9ac8cfea683cce5\"},\n    {file = \"mkl-2021.4.0-py2.py3-none-manylinux1_x86_64.whl\", hash = \"sha256:398dbf2b0d12acaf54117a5210e8f191827f373d362d796091d161f610c1ebfb\"},\n    {file = \"mkl-2021.4.0-py2.py3-none-win32.whl\", hash = \"sha256:439c640b269a5668134e3dcbcea4350459c4a8bc46469669b2d67e07e3d330e8\"},\n    {file = \"mkl-2021.4.0-py2.py3-none-win_amd64.whl\", hash = \"sha256:ceef3cafce4c009dd25f65d7ad0d833a0fbadc3d8903991ec92351fe5de1e718\"},\n]\n\n[package.dependencies]\nintel-openmp = \"==2021.*\"\ntbb = \"==2021.*\"\n\n[[package]]\nname = \"ml-dtypes\"\nversion = \"0.4.1\"\ndescription = \"\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"ml_dtypes-0.4.1-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:1fe8b5b5e70cd67211db94b05cfd58dace592f24489b038dc6f9fe347d2e07d5\"},\n    {file = \"ml_dtypes-0.4.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8c09a6d11d8475c2a9fd2bc0695628aec105f97cab3b3a3fb7c9660348ff7d24\"},\n    {file = \"ml_dtypes-0.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9f5e8f75fa371020dd30f9196e7d73babae2abd51cf59bdd56cb4f8de7e13354\"},\n    {file = \"ml_dtypes-0.4.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:15fdd922fea57e493844e5abb930b9c0bd0af217d9edd3724479fc3d7ce70e3f\"},\n    {file = \"ml_dtypes-0.4.1-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:2d55b588116a7085d6e074cf0cdb1d6fa3875c059dddc4d2c94a4cc81c23e975\"},\n    {file = \"ml_dtypes-0.4.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e138a9b7a48079c900ea969341a5754019a1ad17ae27ee330f7ebf43f23877f9\"},\n    {file = \"ml_dtypes-0.4.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:74c6cfb5cf78535b103fde9ea3ded8e9f16f75bc07789054edc7776abfb3d752\"},\n    {file = \"ml_dtypes-0.4.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:274cc7193dd73b35fb26bef6c5d40ae3eb258359ee71cd82f6e96a8c948bdaa6\"},\n    {file = \"ml_dtypes-0.4.1-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:827d3ca2097085cf0355f8fdf092b888890bb1b1455f52801a2d7756f056f54b\"},\n    {file = \"ml_dtypes-0.4.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:772426b08a6172a891274d581ce58ea2789cc8abc1c002a27223f314aaf894e7\"},\n    {file = \"ml_dtypes-0.4.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:126e7d679b8676d1a958f2651949fbfa182832c3cd08020d8facd94e4114f3e9\"},\n    {file = \"ml_dtypes-0.4.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:df0fb650d5c582a9e72bb5bd96cfebb2cdb889d89daff621c8fbc60295eba66c\"},\n    {file = \"ml_dtypes-0.4.1-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:e35e486e97aee577d0890bc3bd9e9f9eece50c08c163304008587ec8cfe7575b\"},\n    {file = \"ml_dtypes-0.4.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:560be16dc1e3bdf7c087eb727e2cf9c0e6a3d87e9f415079d2491cc419b3ebf5\"},\n    {file = \"ml_dtypes-0.4.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ad0b757d445a20df39035c4cdeed457ec8b60d236020d2560dbc25887533cf50\"},\n    {file = \"ml_dtypes-0.4.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:ef0d7e3fece227b49b544fa69e50e607ac20948f0043e9f76b44f35f229ea450\"},\n    {file = \"ml_dtypes-0.4.1.tar.gz\", hash = \"sha256:fad5f2de464fd09127e49b7fd1252b9006fb43d2edc1ff112d390c324af5ca7a\"},\n]\n\n[package.dependencies]\nnumpy = {version = \">=1.26.0\", markers = \"python_version >= \\\"3.12\\\"\"}\n\n[package.extras]\ndev = [\"absl-py\", \"pyink\", \"pylint (>=2.6.0)\", \"pytest\", \"pytest-xdist\"]\n\n[[package]]\nname = \"ml-dtypes\"\nversion = \"0.5.1\"\ndescription = \"\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"ml_dtypes-0.5.1-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:bd73f51957949069573ff783563486339a9285d72e2f36c18e0c1aa9ca7eb190\"},\n    {file = \"ml_dtypes-0.5.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:810512e2eccdfc3b41eefa3a27402371a3411453a1efc7e9c000318196140fed\"},\n    {file = \"ml_dtypes-0.5.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:141b2ea2f20bb10802ddca55d91fe21231ef49715cfc971998e8f2a9838f3dbe\"},\n    {file = \"ml_dtypes-0.5.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:26ebcc69d7b779c8f129393e99732961b5cc33fcff84090451f448c89b0e01b4\"},\n    {file = \"ml_dtypes-0.5.1-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:023ce2f502efd4d6c1e0472cc58ce3640d051d40e71e27386bed33901e201327\"},\n    {file = \"ml_dtypes-0.5.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7000b6e4d8ef07542c05044ec5d8bbae1df083b3f56822c3da63993a113e716f\"},\n    {file = \"ml_dtypes-0.5.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c09526488c3a9e8b7a23a388d4974b670a9a3dd40c5c8a61db5593ce9b725bab\"},\n    {file = \"ml_dtypes-0.5.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:15ad0f3b0323ce96c24637a88a6f44f6713c64032f27277b069f285c3cf66478\"},\n    {file = \"ml_dtypes-0.5.1-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:6f462f5eca22fb66d7ff9c4744a3db4463af06c49816c4b6ac89b16bfcdc592e\"},\n    {file = \"ml_dtypes-0.5.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6f76232163b5b9c34291b54621ee60417601e2e4802a188a0ea7157cd9b323f4\"},\n    {file = \"ml_dtypes-0.5.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ad4953c5eb9c25a56d11a913c2011d7e580a435ef5145f804d98efa14477d390\"},\n    {file = \"ml_dtypes-0.5.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:9626d0bca1fb387d5791ca36bacbba298c5ef554747b7ebeafefb4564fc83566\"},\n    {file = \"ml_dtypes-0.5.1-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:12651420130ee7cc13059fc56dac6ad300c3af3848b802d475148c9defd27c23\"},\n    {file = \"ml_dtypes-0.5.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c9945669d3dadf8acb40ec2e57d38c985d8c285ea73af57fc5b09872c516106d\"},\n    {file = \"ml_dtypes-0.5.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bf9975bda82a99dc935f2ae4c83846d86df8fd6ba179614acac8e686910851da\"},\n    {file = \"ml_dtypes-0.5.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:fd918d4e6a4e0c110e2e05be7a7814d10dc1b95872accbf6512b80a109b71ae1\"},\n    {file = \"ml_dtypes-0.5.1-cp313-cp313t-macosx_10_13_universal2.whl\", hash = \"sha256:05f23447a1c20ddf4dc7c2c661aa9ed93fcb2658f1017c204d1e758714dc28a8\"},\n    {file = \"ml_dtypes-0.5.1-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1b7fbe5571fdf28fd3aaab3ef4aafc847de9ebf263be959958c1ca58ec8eadf5\"},\n    {file = \"ml_dtypes-0.5.1-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d13755f8e8445b3870114e5b6240facaa7cb0c3361e54beba3e07fa912a6e12b\"},\n    {file = \"ml_dtypes-0.5.1-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:b8a9d46b4df5ae2135a8e8e72b465448ebbc1559997f4f9304a9ecc3413efb5b\"},\n    {file = \"ml_dtypes-0.5.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:afb2009ac98da274e893e03162f6269398b2b00d947e7057ee2469a921d58135\"},\n    {file = \"ml_dtypes-0.5.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:aefedc579ece2f8fb38f876aa7698204ee4c372d0e54f1c1ffa8ca580b54cc60\"},\n    {file = \"ml_dtypes-0.5.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:8f2c028954f16ede77902b223a8da2d9cbb3892375b85809a5c3cfb1587960c4\"},\n    {file = \"ml_dtypes-0.5.1.tar.gz\", hash = \"sha256:ac5b58559bb84a95848ed6984eb8013249f90b6bab62aa5acbad876e256002c9\"},\n]\n\n[package.dependencies]\nnumpy = [\n    {version = \">=1.23.3\", markers = \"python_version >= \\\"3.11\\\" and python_version < \\\"3.12\\\"\"},\n    {version = \">=1.26.0\", markers = \"python_version >= \\\"3.12\\\" and python_version < \\\"3.13\\\"\"},\n]\n\n[package.extras]\ndev = [\"absl-py\", \"pyink\", \"pylint (>=2.6.0)\", \"pytest\", \"pytest-xdist\"]\n\n[[package]]\nname = \"mpmath\"\nversion = \"1.3.0\"\ndescription = \"Python library for arbitrary-precision floating-point arithmetic\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"mpmath-1.3.0-py3-none-any.whl\", hash = \"sha256:a0b2b9fe80bbcd81a6647ff13108738cfb482d481d826cc0e02f5b35e5c88d2c\"},\n    {file = \"mpmath-1.3.0.tar.gz\", hash = \"sha256:7a28eb2a9774d00c7bc92411c19a89209d5da7c4c9a9e227be8330a23a25b91f\"},\n]\n\n[package.extras]\ndevelop = [\"codecov\", \"pycodestyle\", \"pytest (>=4.6)\", \"pytest-cov\", \"wheel\"]\ndocs = [\"sphinx\"]\ngmpy = [\"gmpy2 (>=2.1.0a4)\"]\ntests = [\"pytest (>=4.6)\"]\n\n[[package]]\nname = \"multidict\"\nversion = \"6.6.3\"\ndescription = \"multidict implementation\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"multidict-6.6.3-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:a2be5b7b35271f7fff1397204ba6708365e3d773579fe2a30625e16c4b4ce817\"},\n    {file = \"multidict-6.6.3-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:12f4581d2930840295c461764b9a65732ec01250b46c6b2c510d7ee68872b140\"},\n    {file = \"multidict-6.6.3-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:dd7793bab517e706c9ed9d7310b06c8672fd0aeee5781bfad612f56b8e0f7d14\"},\n    {file = \"multidict-6.6.3-cp310-cp310-manylinux1_i686.manylinux2014_i686.manylinux_2_17_i686.manylinux_2_5_i686.whl\", hash = \"sha256:72d8815f2cd3cf3df0f83cac3f3ef801d908b2d90409ae28102e0553af85545a\"},\n    {file = \"multidict-6.6.3-cp310-cp310-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:531e331a2ee53543ab32b16334e2deb26f4e6b9b28e41f8e0c87e99a6c8e2d69\"},\n    {file = \"multidict-6.6.3-cp310-cp310-manylinux2014_armv7l.manylinux_2_17_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:42ca5aa9329a63be8dc49040f63817d1ac980e02eeddba763a9ae5b4027b9c9c\"},\n    {file = \"multidict-6.6.3-cp310-cp310-manylinux2014_ppc64le.manylinux_2_17_ppc64le.manylinux_2_28_ppc64le.whl\", hash = \"sha256:208b9b9757060b9faa6f11ab4bc52846e4f3c2fb8b14d5680c8aac80af3dc751\"},\n    {file = \"multidict-6.6.3-cp310-cp310-manylinux2014_s390x.manylinux_2_17_s390x.manylinux_2_28_s390x.whl\", hash = \"sha256:acf6b97bd0884891af6a8b43d0f586ab2fcf8e717cbd47ab4bdddc09e20652d8\"},\n    {file = \"multidict-6.6.3-cp310-cp310-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:68e9e12ed00e2089725669bdc88602b0b6f8d23c0c95e52b95f0bc69f7fe9b55\"},\n    {file = \"multidict-6.6.3-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:05db2f66c9addb10cfa226e1acb363450fab2ff8a6df73c622fefe2f5af6d4e7\"},\n    {file = \"multidict-6.6.3-cp310-cp310-musllinux_1_2_armv7l.whl\", hash = \"sha256:0db58da8eafb514db832a1b44f8fa7906fdd102f7d982025f816a93ba45e3dcb\"},\n    {file = \"multidict-6.6.3-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:14117a41c8fdb3ee19c743b1c027da0736fdb79584d61a766da53d399b71176c\"},\n    {file = \"multidict-6.6.3-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:877443eaaabcd0b74ff32ebeed6f6176c71850feb7d6a1d2db65945256ea535c\"},\n    {file = \"multidict-6.6.3-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:70b72e749a4f6e7ed8fb334fa8d8496384840319512746a5f42fa0aec79f4d61\"},\n    {file = \"multidict-6.6.3-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:43571f785b86afd02b3855c5ac8e86ec921b760298d6f82ff2a61daf5a35330b\"},\n    {file = \"multidict-6.6.3-cp310-cp310-win32.whl\", hash = \"sha256:20c5a0c3c13a15fd5ea86c42311859f970070e4e24de5a550e99d7c271d76318\"},\n    {file = \"multidict-6.6.3-cp310-cp310-win_amd64.whl\", hash = \"sha256:ab0a34a007704c625e25a9116c6770b4d3617a071c8a7c30cd338dfbadfe6485\"},\n    {file = \"multidict-6.6.3-cp310-cp310-win_arm64.whl\", hash = \"sha256:769841d70ca8bdd140a715746199fc6473414bd02efd678d75681d2d6a8986c5\"},\n    {file = \"multidict-6.6.3-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:18f4eba0cbac3546b8ae31e0bbc55b02c801ae3cbaf80c247fcdd89b456ff58c\"},\n    {file = \"multidict-6.6.3-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:ef43b5dd842382329e4797c46f10748d8c2b6e0614f46b4afe4aee9ac33159df\"},\n    {file = \"multidict-6.6.3-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:bf9bd1fd5eec01494e0f2e8e446a74a85d5e49afb63d75a9934e4a5423dba21d\"},\n    {file = \"multidict-6.6.3-cp311-cp311-manylinux1_i686.manylinux2014_i686.manylinux_2_17_i686.manylinux_2_5_i686.whl\", hash = \"sha256:5bd8d6f793a787153956cd35e24f60485bf0651c238e207b9a54f7458b16d539\"},\n    {file = \"multidict-6.6.3-cp311-cp311-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:1bf99b4daf908c73856bd87ee0a2499c3c9a3d19bb04b9c6025e66af3fd07462\"},\n    {file = \"multidict-6.6.3-cp311-cp311-manylinux2014_armv7l.manylinux_2_17_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:0b9e59946b49dafaf990fd9c17ceafa62976e8471a14952163d10a7a630413a9\"},\n    {file = \"multidict-6.6.3-cp311-cp311-manylinux2014_ppc64le.manylinux_2_17_ppc64le.manylinux_2_28_ppc64le.whl\", hash = \"sha256:e2db616467070d0533832d204c54eea6836a5e628f2cb1e6dfd8cd6ba7277cb7\"},\n    {file = \"multidict-6.6.3-cp311-cp311-manylinux2014_s390x.manylinux_2_17_s390x.manylinux_2_28_s390x.whl\", hash = \"sha256:7394888236621f61dcdd25189b2768ae5cc280f041029a5bcf1122ac63df79f9\"},\n    {file = \"multidict-6.6.3-cp311-cp311-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:f114d8478733ca7388e7c7e0ab34b72547476b97009d643644ac33d4d3fe1821\"},\n    {file = \"multidict-6.6.3-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:cdf22e4db76d323bcdc733514bf732e9fb349707c98d341d40ebcc6e9318ef3d\"},\n    {file = \"multidict-6.6.3-cp311-cp311-musllinux_1_2_armv7l.whl\", hash = \"sha256:e995a34c3d44ab511bfc11aa26869b9d66c2d8c799fa0e74b28a473a692532d6\"},\n    {file = \"multidict-6.6.3-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:766a4a5996f54361d8d5a9050140aa5362fe48ce51c755a50c0bc3706460c430\"},\n    {file = \"multidict-6.6.3-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:3893a0d7d28a7fe6ca7a1f760593bc13038d1d35daf52199d431b61d2660602b\"},\n    {file = \"multidict-6.6.3-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:934796c81ea996e61914ba58064920d6cad5d99140ac3167901eb932150e2e56\"},\n    {file = \"multidict-6.6.3-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:9ed948328aec2072bc00f05d961ceadfd3e9bfc2966c1319aeaf7b7c21219183\"},\n    {file = \"multidict-6.6.3-cp311-cp311-win32.whl\", hash = \"sha256:9f5b28c074c76afc3e4c610c488e3493976fe0e596dd3db6c8ddfbb0134dcac5\"},\n    {file = \"multidict-6.6.3-cp311-cp311-win_amd64.whl\", hash = \"sha256:bc7f6fbc61b1c16050a389c630da0b32fc6d4a3d191394ab78972bf5edc568c2\"},\n    {file = \"multidict-6.6.3-cp311-cp311-win_arm64.whl\", hash = \"sha256:d4e47d8faffaae822fb5cba20937c048d4f734f43572e7079298a6c39fb172cb\"},\n    {file = \"multidict-6.6.3-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:056bebbeda16b2e38642d75e9e5310c484b7c24e3841dc0fb943206a72ec89d6\"},\n    {file = \"multidict-6.6.3-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:e5f481cccb3c5c5e5de5d00b5141dc589c1047e60d07e85bbd7dea3d4580d63f\"},\n    {file = \"multidict-6.6.3-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:10bea2ee839a759ee368b5a6e47787f399b41e70cf0c20d90dfaf4158dfb4e55\"},\n    {file = \"multidict-6.6.3-cp312-cp312-manylinux1_i686.manylinux2014_i686.manylinux_2_17_i686.manylinux_2_5_i686.whl\", hash = \"sha256:2334cfb0fa9549d6ce2c21af2bfbcd3ac4ec3646b1b1581c88e3e2b1779ec92b\"},\n    {file = \"multidict-6.6.3-cp312-cp312-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:b8fee016722550a2276ca2cb5bb624480e0ed2bd49125b2b73b7010b9090e888\"},\n    {file = \"multidict-6.6.3-cp312-cp312-manylinux2014_armv7l.manylinux_2_17_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:e5511cb35f5c50a2db21047c875eb42f308c5583edf96bd8ebf7d770a9d68f6d\"},\n    {file = \"multidict-6.6.3-cp312-cp312-manylinux2014_ppc64le.manylinux_2_17_ppc64le.manylinux_2_28_ppc64le.whl\", hash = \"sha256:712b348f7f449948e0a6c4564a21c7db965af900973a67db432d724619b3c680\"},\n    {file = \"multidict-6.6.3-cp312-cp312-manylinux2014_s390x.manylinux_2_17_s390x.manylinux_2_28_s390x.whl\", hash = \"sha256:e4e15d2138ee2694e038e33b7c3da70e6b0ad8868b9f8094a72e1414aeda9c1a\"},\n    {file = \"multidict-6.6.3-cp312-cp312-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:8df25594989aebff8a130f7899fa03cbfcc5d2b5f4a461cf2518236fe6f15961\"},\n    {file = \"multidict-6.6.3-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:159ca68bfd284a8860f8d8112cf0521113bffd9c17568579e4d13d1f1dc76b65\"},\n    {file = \"multidict-6.6.3-cp312-cp312-musllinux_1_2_armv7l.whl\", hash = \"sha256:e098c17856a8c9ade81b4810888c5ad1914099657226283cab3062c0540b0643\"},\n    {file = \"multidict-6.6.3-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:67c92ed673049dec52d7ed39f8cf9ebbadf5032c774058b4406d18c8f8fe7063\"},\n    {file = \"multidict-6.6.3-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:bd0578596e3a835ef451784053cfd327d607fc39ea1a14812139339a18a0dbc3\"},\n    {file = \"multidict-6.6.3-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:346055630a2df2115cd23ae271910b4cae40f4e336773550dca4889b12916e75\"},\n    {file = \"multidict-6.6.3-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:555ff55a359302b79de97e0468e9ee80637b0de1fce77721639f7cd9440b3a10\"},\n    {file = \"multidict-6.6.3-cp312-cp312-win32.whl\", hash = \"sha256:73ab034fb8d58ff85c2bcbadc470efc3fafeea8affcf8722855fb94557f14cc5\"},\n    {file = \"multidict-6.6.3-cp312-cp312-win_amd64.whl\", hash = \"sha256:04cbcce84f63b9af41bad04a54d4cc4e60e90c35b9e6ccb130be2d75b71f8c17\"},\n    {file = \"multidict-6.6.3-cp312-cp312-win_arm64.whl\", hash = \"sha256:0f1130b896ecb52d2a1e615260f3ea2af55fa7dc3d7c3003ba0c3121a759b18b\"},\n    {file = \"multidict-6.6.3-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:540d3c06d48507357a7d57721e5094b4f7093399a0106c211f33540fdc374d55\"},\n    {file = \"multidict-6.6.3-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:9c19cea2a690f04247d43f366d03e4eb110a0dc4cd1bbeee4d445435428ed35b\"},\n    {file = \"multidict-6.6.3-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:7af039820cfd00effec86bda5d8debef711a3e86a1d3772e85bea0f243a4bd65\"},\n    {file = \"multidict-6.6.3-cp313-cp313-manylinux1_i686.manylinux2014_i686.manylinux_2_17_i686.manylinux_2_5_i686.whl\", hash = \"sha256:500b84f51654fdc3944e936f2922114349bf8fdcac77c3092b03449f0e5bc2b3\"},\n    {file = \"multidict-6.6.3-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:f3fc723ab8a5c5ed6c50418e9bfcd8e6dceba6c271cee6728a10a4ed8561520c\"},\n    {file = \"multidict-6.6.3-cp313-cp313-manylinux2014_armv7l.manylinux_2_17_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:94c47ea3ade005b5976789baaed66d4de4480d0a0bf31cef6edaa41c1e7b56a6\"},\n    {file = \"multidict-6.6.3-cp313-cp313-manylinux2014_ppc64le.manylinux_2_17_ppc64le.manylinux_2_28_ppc64le.whl\", hash = \"sha256:dbc7cf464cc6d67e83e136c9f55726da3a30176f020a36ead246eceed87f1cd8\"},\n    {file = \"multidict-6.6.3-cp313-cp313-manylinux2014_s390x.manylinux_2_17_s390x.manylinux_2_28_s390x.whl\", hash = \"sha256:900eb9f9da25ada070f8ee4a23f884e0ee66fe4e1a38c3af644256a508ad81ca\"},\n    {file = \"multidict-6.6.3-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:7c6df517cf177da5d47ab15407143a89cd1a23f8b335f3a28d57e8b0a3dbb884\"},\n    {file = \"multidict-6.6.3-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:4ef421045f13879e21c994b36e728d8e7d126c91a64b9185810ab51d474f27e7\"},\n    {file = \"multidict-6.6.3-cp313-cp313-musllinux_1_2_armv7l.whl\", hash = \"sha256:6c1e61bb4f80895c081790b6b09fa49e13566df8fbff817da3f85b3a8192e36b\"},\n    {file = \"multidict-6.6.3-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:e5e8523bb12d7623cd8300dbd91b9e439a46a028cd078ca695eb66ba31adee3c\"},\n    {file = \"multidict-6.6.3-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:ef58340cc896219e4e653dade08fea5c55c6df41bcc68122e3be3e9d873d9a7b\"},\n    {file = \"multidict-6.6.3-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:fc9dc435ec8699e7b602b94fe0cd4703e69273a01cbc34409af29e7820f777f1\"},\n    {file = \"multidict-6.6.3-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:9e864486ef4ab07db5e9cb997bad2b681514158d6954dd1958dfb163b83d53e6\"},\n    {file = \"multidict-6.6.3-cp313-cp313-win32.whl\", hash = \"sha256:5633a82fba8e841bc5c5c06b16e21529573cd654f67fd833650a215520a6210e\"},\n    {file = \"multidict-6.6.3-cp313-cp313-win_amd64.whl\", hash = \"sha256:e93089c1570a4ad54c3714a12c2cef549dc9d58e97bcded193d928649cab78e9\"},\n    {file = \"multidict-6.6.3-cp313-cp313-win_arm64.whl\", hash = \"sha256:c60b401f192e79caec61f166da9c924e9f8bc65548d4246842df91651e83d600\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-macosx_10_13_universal2.whl\", hash = \"sha256:02fd8f32d403a6ff13864b0851f1f523d4c988051eea0471d4f1fd8010f11134\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:f3aa090106b1543f3f87b2041eef3c156c8da2aed90c63a2fbed62d875c49c37\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:e924fb978615a5e33ff644cc42e6aa241effcf4f3322c09d4f8cebde95aff5f8\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-manylinux1_i686.manylinux2014_i686.manylinux_2_17_i686.manylinux_2_5_i686.whl\", hash = \"sha256:b9fe5a0e57c6dbd0e2ce81ca66272282c32cd11d31658ee9553849d91289e1c1\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:b24576f208793ebae00280c59927c3b7c2a3b1655e443a25f753c4611bc1c373\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-manylinux2014_armv7l.manylinux_2_17_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:135631cb6c58eac37d7ac0df380294fecdc026b28837fa07c02e459c7fb9c54e\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-manylinux2014_ppc64le.manylinux_2_17_ppc64le.manylinux_2_28_ppc64le.whl\", hash = \"sha256:274d416b0df887aef98f19f21578653982cfb8a05b4e187d4a17103322eeaf8f\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-manylinux2014_s390x.manylinux_2_17_s390x.manylinux_2_28_s390x.whl\", hash = \"sha256:e252017a817fad7ce05cafbe5711ed40faeb580e63b16755a3a24e66fa1d87c0\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:2e4cc8d848cd4fe1cdee28c13ea79ab0ed37fc2e89dd77bac86a2e7959a8c3bc\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:9e236a7094b9c4c1b7585f6b9cca34b9d833cf079f7e4c49e6a4a6ec9bfdc68f\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-musllinux_1_2_armv7l.whl\", hash = \"sha256:e0cb0ab69915c55627c933f0b555a943d98ba71b4d1c57bc0d0a66e2567c7471\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:81ef2f64593aba09c5212a3d0f8c906a0d38d710a011f2f42759704d4557d3f2\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-musllinux_1_2_ppc64le.whl\", hash = \"sha256:b9cbc60010de3562545fa198bfc6d3825df430ea96d2cc509c39bd71e2e7d648\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-musllinux_1_2_s390x.whl\", hash = \"sha256:70d974eaaa37211390cd02ef93b7e938de564bbffa866f0b08d07e5e65da783d\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:3713303e4a6663c6d01d648a68f2848701001f3390a030edaaf3fc949c90bf7c\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-win32.whl\", hash = \"sha256:639ecc9fe7cd73f2495f62c213e964843826f44505a3e5d82805aa85cac6f89e\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-win_amd64.whl\", hash = \"sha256:9f97e181f344a0ef3881b573d31de8542cc0dbc559ec68c8f8b5ce2c2e91646d\"},\n    {file = \"multidict-6.6.3-cp313-cp313t-win_arm64.whl\", hash = \"sha256:ce8b7693da41a3c4fde5871c738a81490cea5496c671d74374c8ab889e1834fb\"},\n    {file = \"multidict-6.6.3-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:c8161b5a7778d3137ea2ee7ae8a08cce0010de3b00ac671c5ebddeaa17cefd22\"},\n    {file = \"multidict-6.6.3-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:1328201ee930f069961ae707d59c6627ac92e351ed5b92397cf534d1336ce557\"},\n    {file = \"multidict-6.6.3-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:b1db4d2093d6b235de76932febf9d50766cf49a5692277b2c28a501c9637f616\"},\n    {file = \"multidict-6.6.3-cp39-cp39-manylinux1_i686.manylinux2014_i686.manylinux_2_17_i686.manylinux_2_5_i686.whl\", hash = \"sha256:53becb01dd8ebd19d1724bebe369cfa87e4e7f29abbbe5c14c98ce4c383e16cd\"},\n    {file = \"multidict-6.6.3-cp39-cp39-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:41bb9d1d4c303886e2d85bade86e59885112a7f4277af5ad47ab919a2251f306\"},\n    {file = \"multidict-6.6.3-cp39-cp39-manylinux2014_armv7l.manylinux_2_17_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:775b464d31dac90f23192af9c291dc9f423101857e33e9ebf0020a10bfcf4144\"},\n    {file = \"multidict-6.6.3-cp39-cp39-manylinux2014_ppc64le.manylinux_2_17_ppc64le.manylinux_2_28_ppc64le.whl\", hash = \"sha256:d04d01f0a913202205a598246cf77826fe3baa5a63e9f6ccf1ab0601cf56eca0\"},\n    {file = \"multidict-6.6.3-cp39-cp39-manylinux2014_s390x.manylinux_2_17_s390x.manylinux_2_28_s390x.whl\", hash = \"sha256:d25594d3b38a2e6cabfdcafef339f754ca6e81fbbdb6650ad773ea9775af35ab\"},\n    {file = \"multidict-6.6.3-cp39-cp39-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:35712f1748d409e0707b165bf49f9f17f9e28ae85470c41615778f8d4f7d9609\"},\n    {file = \"multidict-6.6.3-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:1c8082e5814b662de8589d6a06c17e77940d5539080cbab9fe6794b5241b76d9\"},\n    {file = \"multidict-6.6.3-cp39-cp39-musllinux_1_2_armv7l.whl\", hash = \"sha256:61af8a4b771f1d4d000b3168c12c3120ccf7284502a94aa58c68a81f5afac090\"},\n    {file = \"multidict-6.6.3-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:448e4a9afccbf297577f2eaa586f07067441e7b63c8362a3540ba5a38dc0f14a\"},\n    {file = \"multidict-6.6.3-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:233ad16999afc2bbd3e534ad8dbe685ef8ee49a37dbc2cdc9514e57b6d589ced\"},\n    {file = \"multidict-6.6.3-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:bb933c891cd4da6bdcc9733d048e994e22e1883287ff7540c2a0f3b117605092\"},\n    {file = \"multidict-6.6.3-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:37b09ca60998e87734699e88c2363abfd457ed18cfbf88e4009a4e83788e63ed\"},\n    {file = \"multidict-6.6.3-cp39-cp39-win32.whl\", hash = \"sha256:f54cb79d26d0cd420637d184af38f0668558f3c4bbe22ab7ad830e67249f2e0b\"},\n    {file = \"multidict-6.6.3-cp39-cp39-win_amd64.whl\", hash = \"sha256:295adc9c0551e5d5214b45cf29ca23dbc28c2d197a9c30d51aed9e037cb7c578\"},\n    {file = \"multidict-6.6.3-cp39-cp39-win_arm64.whl\", hash = \"sha256:15332783596f227db50fb261c2c251a58ac3873c457f3a550a95d5c0aa3c770d\"},\n    {file = \"multidict-6.6.3-py3-none-any.whl\", hash = \"sha256:8db10f29c7541fc5da4defd8cd697e1ca429db743fa716325f236079b96f775a\"},\n    {file = \"multidict-6.6.3.tar.gz\", hash = \"sha256:798a9eb12dab0a6c2e29c1de6f3468af5cb2da6053a20dfa3344907eed0937cc\"},\n]\n\n[[package]]\nname = \"mypy\"\nversion = \"1.16.1\"\ndescription = \"Optional static typing for Python\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"mypy-1.16.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:b4f0fed1022a63c6fec38f28b7fc77fca47fd490445c69d0a66266c59dd0b88a\"},\n    {file = \"mypy-1.16.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:86042bbf9f5a05ea000d3203cf87aa9d0ccf9a01f73f71c58979eb9249f46d72\"},\n    {file = \"mypy-1.16.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:ea7469ee5902c95542bea7ee545f7006508c65c8c54b06dc2c92676ce526f3ea\"},\n    {file = \"mypy-1.16.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:352025753ef6a83cb9e7f2427319bb7875d1fdda8439d1e23de12ab164179574\"},\n    {file = \"mypy-1.16.1-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:ff9fa5b16e4c1364eb89a4d16bcda9987f05d39604e1e6c35378a2987c1aac2d\"},\n    {file = \"mypy-1.16.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:1256688e284632382f8f3b9e2123df7d279f603c561f099758e66dd6ed4e8bd6\"},\n    {file = \"mypy-1.16.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:472e4e4c100062488ec643f6162dd0d5208e33e2f34544e1fc931372e806c0cc\"},\n    {file = \"mypy-1.16.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:ea16e2a7d2714277e349e24d19a782a663a34ed60864006e8585db08f8ad1782\"},\n    {file = \"mypy-1.16.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:08e850ea22adc4d8a4014651575567b0318ede51e8e9fe7a68f25391af699507\"},\n    {file = \"mypy-1.16.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:22d76a63a42619bfb90122889b903519149879ddbf2ba4251834727944c8baca\"},\n    {file = \"mypy-1.16.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:2c7ce0662b6b9dc8f4ed86eb7a5d505ee3298c04b40ec13b30e572c0e5ae17c4\"},\n    {file = \"mypy-1.16.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:211287e98e05352a2e1d4e8759c5490925a7c784ddc84207f4714822f8cf99b6\"},\n    {file = \"mypy-1.16.1-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:af4792433f09575d9eeca5c63d7d90ca4aeceda9d8355e136f80f8967639183d\"},\n    {file = \"mypy-1.16.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:66df38405fd8466ce3517eda1f6640611a0b8e70895e2a9462d1d4323c5eb4b9\"},\n    {file = \"mypy-1.16.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:44e7acddb3c48bd2713994d098729494117803616e116032af192871aed80b79\"},\n    {file = \"mypy-1.16.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:0ab5eca37b50188163fa7c1b73c685ac66c4e9bdee4a85c9adac0e91d8895e15\"},\n    {file = \"mypy-1.16.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:dedb6229b2c9086247e21a83c309754b9058b438704ad2f6807f0d8227f6ebdd\"},\n    {file = \"mypy-1.16.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:1f0435cf920e287ff68af3d10a118a73f212deb2ce087619eb4e648116d1fe9b\"},\n    {file = \"mypy-1.16.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:ddc91eb318c8751c69ddb200a5937f1232ee8efb4e64e9f4bc475a33719de438\"},\n    {file = \"mypy-1.16.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:87ff2c13d58bdc4bbe7dc0dedfe622c0f04e2cb2a492269f3b418df2de05c536\"},\n    {file = \"mypy-1.16.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:0a7cfb0fe29fe5a9841b7c8ee6dffb52382c45acdf68f032145b75620acfbd6f\"},\n    {file = \"mypy-1.16.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:051e1677689c9d9578b9c7f4d206d763f9bbd95723cd1416fad50db49d52f359\"},\n    {file = \"mypy-1.16.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:d5d2309511cc56c021b4b4e462907c2b12f669b2dbeb68300110ec27723971be\"},\n    {file = \"mypy-1.16.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:4f58ac32771341e38a853c5d0ec0dfe27e18e27da9cdb8bbc882d2249c71a3ee\"},\n    {file = \"mypy-1.16.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:7fc688329af6a287567f45cc1cefb9db662defeb14625213a5b7da6e692e2069\"},\n    {file = \"mypy-1.16.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:5e198ab3f55924c03ead626ff424cad1732d0d391478dfbf7bb97b34602395da\"},\n    {file = \"mypy-1.16.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:09aa4f91ada245f0a45dbc47e548fd94e0dd5a8433e0114917dc3b526912a30c\"},\n    {file = \"mypy-1.16.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:13c7cd5b1cb2909aa318a90fd1b7e31f17c50b242953e7dd58345b2a814f6383\"},\n    {file = \"mypy-1.16.1-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:58e07fb958bc5d752a280da0e890c538f1515b79a65757bbdc54252ba82e0b40\"},\n    {file = \"mypy-1.16.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:f895078594d918f93337a505f8add9bd654d1a24962b4c6ed9390e12531eb31b\"},\n    {file = \"mypy-1.16.1-py3-none-any.whl\", hash = \"sha256:5fc2ac4027d0ef28d6ba69a0343737a23c4d1b83672bf38d1fe237bdc0643b37\"},\n    {file = \"mypy-1.16.1.tar.gz\", hash = \"sha256:6bd00a0a2094841c5e47e7374bb42b83d64c527a502e3334e1173a0c24437bab\"},\n]\n\n[package.dependencies]\nmypy_extensions = \">=1.0.0\"\npathspec = \">=0.9.0\"\ntyping_extensions = \">=4.6.0\"\n\n[package.extras]\ndmypy = [\"psutil (>=4.0)\"]\nfaster-cache = [\"orjson\"]\ninstall-types = [\"pip\"]\nmypyc = [\"setuptools (>=50)\"]\nreports = [\"lxml\"]\n\n[[package]]\nname = \"mypy-extensions\"\nversion = \"1.1.0\"\ndescription = \"Type system extensions for programs checked with the mypy type checker.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"mypy_extensions-1.1.0-py3-none-any.whl\", hash = \"sha256:1be4cccdb0f2482337c4743e60421de3a356cd97508abadd57d47403e94f5505\"},\n    {file = \"mypy_extensions-1.1.0.tar.gz\", hash = \"sha256:52e68efc3284861e772bbcd66823fde5ae21fd2fdb51c62a211403730b916558\"},\n]\n\n[[package]]\nname = \"networkx\"\nversion = \"2.8.8\"\ndescription = \"Python package for creating and manipulating graphs and networks\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"networkx-2.8.8-py3-none-any.whl\", hash = \"sha256:e435dfa75b1d7195c7b8378c3859f0445cd88c6b0375c181ed66823a9ceb7524\"},\n    {file = \"networkx-2.8.8.tar.gz\", hash = \"sha256:230d388117af870fce5647a3c52401fcf753e94720e6ea6b4197a5355648885e\"},\n]\n\n[package.extras]\ndefault = [\"matplotlib (>=3.4)\", \"numpy (>=1.19)\", \"pandas (>=1.3)\", \"scipy (>=1.8)\"]\ndeveloper = [\"mypy (>=0.982)\", \"pre-commit (>=2.20)\"]\ndoc = [\"nb2plots (>=0.6)\", \"numpydoc (>=1.5)\", \"pillow (>=9.2)\", \"pydata-sphinx-theme (>=0.11)\", \"sphinx (>=5.2)\", \"sphinx-gallery (>=0.11)\", \"texext (>=0.6.6)\"]\nextra = [\"lxml (>=4.6)\", \"pydot (>=1.4.2)\", \"pygraphviz (>=1.9)\", \"sympy (>=1.10)\"]\ntest = [\"codecov (>=2.1)\", \"pytest (>=7.2)\", \"pytest-cov (>=4.0)\"]\n\n[[package]]\nname = \"nodeenv\"\nversion = \"1.9.1\"\ndescription = \"Node.js virtual environment builder\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7\"\nfiles = [\n    {file = \"nodeenv-1.9.1-py2.py3-none-any.whl\", hash = \"sha256:ba11c9782d29c27c70ffbdda2d7415098754709be8a7056d79a737cd901155c9\"},\n    {file = \"nodeenv-1.9.1.tar.gz\", hash = \"sha256:6ec12890a2dab7946721edbfbcd91f3319c6ccc9aec47be7c7e6b7011ee6645f\"},\n]\n\n[[package]]\nname = \"numpy\"\nversion = \"1.26.4\"\ndescription = \"Fundamental package for array computing in Python\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"numpy-1.26.4-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:9ff0f4f29c51e2803569d7a51c2304de5554655a60c5d776e35b4a41413830d0\"},\n    {file = \"numpy-1.26.4-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:2e4ee3380d6de9c9ec04745830fd9e2eccb3e6cf790d39d7b98ffd19b0dd754a\"},\n    {file = \"numpy-1.26.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d209d8969599b27ad20994c8e41936ee0964e6da07478d6c35016bc386b66ad4\"},\n    {file = \"numpy-1.26.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ffa75af20b44f8dba823498024771d5ac50620e6915abac414251bd971b4529f\"},\n    {file = \"numpy-1.26.4-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:62b8e4b1e28009ef2846b4c7852046736bab361f7aeadeb6a5b89ebec3c7055a\"},\n    {file = \"numpy-1.26.4-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:a4abb4f9001ad2858e7ac189089c42178fcce737e4169dc61321660f1a96c7d2\"},\n    {file = \"numpy-1.26.4-cp310-cp310-win32.whl\", hash = \"sha256:bfe25acf8b437eb2a8b2d49d443800a5f18508cd811fea3181723922a8a82b07\"},\n    {file = \"numpy-1.26.4-cp310-cp310-win_amd64.whl\", hash = \"sha256:b97fe8060236edf3662adfc2c633f56a08ae30560c56310562cb4f95500022d5\"},\n    {file = \"numpy-1.26.4-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:4c66707fabe114439db9068ee468c26bbdf909cac0fb58686a42a24de1760c71\"},\n    {file = \"numpy-1.26.4-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:edd8b5fe47dab091176d21bb6de568acdd906d1887a4584a15a9a96a1dca06ef\"},\n    {file = \"numpy-1.26.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7ab55401287bfec946ced39700c053796e7cc0e3acbef09993a9ad2adba6ca6e\"},\n    {file = \"numpy-1.26.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:666dbfb6ec68962c033a450943ded891bed2d54e6755e35e5835d63f4f6931d5\"},\n    {file = \"numpy-1.26.4-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:96ff0b2ad353d8f990b63294c8986f1ec3cb19d749234014f4e7eb0112ceba5a\"},\n    {file = \"numpy-1.26.4-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:60dedbb91afcbfdc9bc0b1f3f402804070deed7392c23eb7a7f07fa857868e8a\"},\n    {file = \"numpy-1.26.4-cp311-cp311-win32.whl\", hash = \"sha256:1af303d6b2210eb850fcf03064d364652b7120803a0b872f5211f5234b399f20\"},\n    {file = \"numpy-1.26.4-cp311-cp311-win_amd64.whl\", hash = \"sha256:cd25bcecc4974d09257ffcd1f098ee778f7834c3ad767fe5db785be9a4aa9cb2\"},\n    {file = \"numpy-1.26.4-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:b3ce300f3644fb06443ee2222c2201dd3a89ea6040541412b8fa189341847218\"},\n    {file = \"numpy-1.26.4-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:03a8c78d01d9781b28a6989f6fa1bb2c4f2d51201cf99d3dd875df6fbd96b23b\"},\n    {file = \"numpy-1.26.4-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9fad7dcb1aac3c7f0584a5a8133e3a43eeb2fe127f47e3632d43d677c66c102b\"},\n    {file = \"numpy-1.26.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:675d61ffbfa78604709862923189bad94014bef562cc35cf61d3a07bba02a7ed\"},\n    {file = \"numpy-1.26.4-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:ab47dbe5cc8210f55aa58e4805fe224dac469cde56b9f731a4c098b91917159a\"},\n    {file = \"numpy-1.26.4-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:1dda2e7b4ec9dd512f84935c5f126c8bd8b9f2fc001e9f54af255e8c5f16b0e0\"},\n    {file = \"numpy-1.26.4-cp312-cp312-win32.whl\", hash = \"sha256:50193e430acfc1346175fcbdaa28ffec49947a06918b7b92130744e81e640110\"},\n    {file = \"numpy-1.26.4-cp312-cp312-win_amd64.whl\", hash = \"sha256:08beddf13648eb95f8d867350f6a018a4be2e5ad54c8d8caed89ebca558b2818\"},\n    {file = \"numpy-1.26.4-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:7349ab0fa0c429c82442a27a9673fc802ffdb7c7775fad780226cb234965e53c\"},\n    {file = \"numpy-1.26.4-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:52b8b60467cd7dd1e9ed082188b4e6bb35aa5cdd01777621a1658910745b90be\"},\n    {file = \"numpy-1.26.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d5241e0a80d808d70546c697135da2c613f30e28251ff8307eb72ba696945764\"},\n    {file = \"numpy-1.26.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f870204a840a60da0b12273ef34f7051e98c3b5961b61b0c2c1be6dfd64fbcd3\"},\n    {file = \"numpy-1.26.4-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:679b0076f67ecc0138fd2ede3a8fd196dddc2ad3254069bcb9faf9a79b1cebcd\"},\n    {file = \"numpy-1.26.4-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:47711010ad8555514b434df65f7d7b076bb8261df1ca9bb78f53d3b2db02e95c\"},\n    {file = \"numpy-1.26.4-cp39-cp39-win32.whl\", hash = \"sha256:a354325ee03388678242a4d7ebcd08b5c727033fcff3b2f536aea978e15ee9e6\"},\n    {file = \"numpy-1.26.4-cp39-cp39-win_amd64.whl\", hash = \"sha256:3373d5d70a5fe74a2c1bb6d2cfd9609ecf686d47a2d7b1d37a8f3b6bf6003aea\"},\n    {file = \"numpy-1.26.4-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:afedb719a9dcfc7eaf2287b839d8198e06dcd4cb5d276a3df279231138e83d30\"},\n    {file = \"numpy-1.26.4-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:95a7476c59002f2f6c590b9b7b998306fba6a5aa646b1e22ddfeaf8f78c3a29c\"},\n    {file = \"numpy-1.26.4-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:7e50d0a0cc3189f9cb0aeb3a6a6af18c16f59f004b866cd2be1c14b36134a4a0\"},\n    {file = \"numpy-1.26.4.tar.gz\", hash = \"sha256:2a02aba9ed12e4ac4eb3ea9421c420301a0c6460d9830d74a9df87efa4912010\"},\n]\n\n[[package]]\nname = \"nvidia-cublas-cu12\"\nversion = \"12.1.3.1\"\ndescription = \"CUBLAS native runtime libraries\"\noptional = false\npython-versions = \">=3\"\nfiles = [\n    {file = \"nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl\", hash = \"sha256:ee53ccca76a6fc08fb9701aa95b6ceb242cdaab118c3bb152af4e579af792728\"},\n    {file = \"nvidia_cublas_cu12-12.1.3.1-py3-none-win_amd64.whl\", hash = \"sha256:2b964d60e8cf11b5e1073d179d85fa340c120e99b3067558f3cf98dd69d02906\"},\n]\n\n[[package]]\nname = \"nvidia-cuda-cupti-cu12\"\nversion = \"12.1.105\"\ndescription = \"CUDA profiling tools runtime libs.\"\noptional = false\npython-versions = \">=3\"\nfiles = [\n    {file = \"nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl\", hash = \"sha256:e54fde3983165c624cb79254ae9818a456eb6e87a7fd4d56a2352c24ee542d7e\"},\n    {file = \"nvidia_cuda_cupti_cu12-12.1.105-py3-none-win_amd64.whl\", hash = \"sha256:bea8236d13a0ac7190bd2919c3e8e6ce1e402104276e6f9694479e48bb0eb2a4\"},\n]\n\n[[package]]\nname = \"nvidia-cuda-nvrtc-cu12\"\nversion = \"12.1.105\"\ndescription = \"NVRTC native runtime libraries\"\noptional = false\npython-versions = \">=3\"\nfiles = [\n    {file = \"nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl\", hash = \"sha256:339b385f50c309763ca65456ec75e17bbefcbbf2893f462cb8b90584cd27a1c2\"},\n    {file = \"nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-win_amd64.whl\", hash = \"sha256:0a98a522d9ff138b96c010a65e145dc1b4850e9ecb75a0172371793752fd46ed\"},\n]\n\n[[package]]\nname = \"nvidia-cuda-runtime-cu12\"\nversion = \"12.1.105\"\ndescription = \"CUDA Runtime native Libraries\"\noptional = false\npython-versions = \">=3\"\nfiles = [\n    {file = \"nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl\", hash = \"sha256:6e258468ddf5796e25f1dc591a31029fa317d97a0a94ed93468fc86301d61e40\"},\n    {file = \"nvidia_cuda_runtime_cu12-12.1.105-py3-none-win_amd64.whl\", hash = \"sha256:dfb46ef84d73fababab44cf03e3b83f80700d27ca300e537f85f636fac474344\"},\n]\n\n[[package]]\nname = \"nvidia-cudnn-cu12\"\nversion = \"8.9.2.26\"\ndescription = \"cuDNN runtime libraries\"\noptional = false\npython-versions = \">=3\"\nfiles = [\n    {file = \"nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl\", hash = \"sha256:5ccb288774fdfb07a7e7025ffec286971c06d8d7b4fb162525334616d7629ff9\"},\n]\n\n[package.dependencies]\nnvidia-cublas-cu12 = \"*\"\n\n[[package]]\nname = \"nvidia-cufft-cu12\"\nversion = \"11.0.2.54\"\ndescription = \"CUFFT native runtime libraries\"\noptional = false\npython-versions = \">=3\"\nfiles = [\n    {file = \"nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl\", hash = \"sha256:794e3948a1aa71fd817c3775866943936774d1c14e7628c74f6f7417224cdf56\"},\n    {file = \"nvidia_cufft_cu12-11.0.2.54-py3-none-win_amd64.whl\", hash = \"sha256:d9ac353f78ff89951da4af698f80870b1534ed69993f10a4cf1d96f21357e253\"},\n]\n\n[[package]]\nname = \"nvidia-curand-cu12\"\nversion = \"10.3.2.106\"\ndescription = \"CURAND native runtime libraries\"\noptional = false\npython-versions = \">=3\"\nfiles = [\n    {file = \"nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl\", hash = \"sha256:9d264c5036dde4e64f1de8c50ae753237c12e0b1348738169cd0f8a536c0e1e0\"},\n    {file = \"nvidia_curand_cu12-10.3.2.106-py3-none-win_amd64.whl\", hash = \"sha256:75b6b0c574c0037839121317e17fd01f8a69fd2ef8e25853d826fec30bdba74a\"},\n]\n\n[[package]]\nname = \"nvidia-cusolver-cu12\"\nversion = \"11.4.5.107\"\ndescription = \"CUDA solver native runtime libraries\"\noptional = false\npython-versions = \">=3\"\nfiles = [\n    {file = \"nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl\", hash = \"sha256:8a7ec542f0412294b15072fa7dab71d31334014a69f953004ea7a118206fe0dd\"},\n    {file = \"nvidia_cusolver_cu12-11.4.5.107-py3-none-win_amd64.whl\", hash = \"sha256:74e0c3a24c78612192a74fcd90dd117f1cf21dea4822e66d89e8ea80e3cd2da5\"},\n]\n\n[package.dependencies]\nnvidia-cublas-cu12 = \"*\"\nnvidia-cusparse-cu12 = \"*\"\nnvidia-nvjitlink-cu12 = \"*\"\n\n[[package]]\nname = \"nvidia-cusparse-cu12\"\nversion = \"12.1.0.106\"\ndescription = \"CUSPARSE native runtime libraries\"\noptional = false\npython-versions = \">=3\"\nfiles = [\n    {file = \"nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl\", hash = \"sha256:f3b50f42cf363f86ab21f720998517a659a48131e8d538dc02f8768237bd884c\"},\n    {file = \"nvidia_cusparse_cu12-12.1.0.106-py3-none-win_amd64.whl\", hash = \"sha256:b798237e81b9719373e8fae8d4f091b70a0cf09d9d85c95a557e11df2d8e9a5a\"},\n]\n\n[package.dependencies]\nnvidia-nvjitlink-cu12 = \"*\"\n\n[[package]]\nname = \"nvidia-nccl-cu12\"\nversion = \"2.20.5\"\ndescription = \"NVIDIA Collective Communication Library (NCCL) Runtime\"\noptional = false\npython-versions = \">=3\"\nfiles = [\n    {file = \"nvidia_nccl_cu12-2.20.5-py3-none-manylinux2014_aarch64.whl\", hash = \"sha256:1fc150d5c3250b170b29410ba682384b14581db722b2531b0d8d33c595f33d01\"},\n    {file = \"nvidia_nccl_cu12-2.20.5-py3-none-manylinux2014_x86_64.whl\", hash = \"sha256:057f6bf9685f75215d0c53bf3ac4a10b3e6578351de307abad9e18a99182af56\"},\n]\n\n[[package]]\nname = \"nvidia-nvjitlink-cu12\"\nversion = \"12.9.86\"\ndescription = \"Nvidia JIT LTO Library\"\noptional = false\npython-versions = \">=3\"\nfiles = [\n    {file = \"nvidia_nvjitlink_cu12-12.9.86-py3-none-manylinux2010_x86_64.manylinux_2_12_x86_64.whl\", hash = \"sha256:e3f1171dbdc83c5932a45f0f4c99180a70de9bd2718c1ab77d14104f6d7147f9\"},\n    {file = \"nvidia_nvjitlink_cu12-12.9.86-py3-none-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:994a05ef08ef4b0b299829cde613a424382aff7efb08a7172c1fa616cc3af2ca\"},\n    {file = \"nvidia_nvjitlink_cu12-12.9.86-py3-none-win_amd64.whl\", hash = \"sha256:cc6fcec260ca843c10e34c936921a1c426b351753587fdd638e8cff7b16bb9db\"},\n]\n\n[[package]]\nname = \"nvidia-nvtx-cu12\"\nversion = \"12.1.105\"\ndescription = \"NVIDIA Tools Extension\"\noptional = false\npython-versions = \">=3\"\nfiles = [\n    {file = \"nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl\", hash = \"sha256:dc21cf308ca5691e7c04d962e213f8a4aa9bbfa23d95412f452254c2caeb09e5\"},\n    {file = \"nvidia_nvtx_cu12-12.1.105-py3-none-win_amd64.whl\", hash = \"sha256:65f4d98982b31b60026e0e6de73fbdfc09d08a96f4656dd3665ca616a11e1e82\"},\n]\n\n[[package]]\nname = \"opt-einsum\"\nversion = \"3.4.0\"\ndescription = \"Path optimization of einsum functions.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"opt_einsum-3.4.0-py3-none-any.whl\", hash = \"sha256:69bb92469f86a1565195ece4ac0323943e83477171b91d24c35afe028a90d7cd\"},\n    {file = \"opt_einsum-3.4.0.tar.gz\", hash = \"sha256:96ca72f1b886d148241348783498194c577fa30a8faac108586b14f1ba4473ac\"},\n]\n\n[[package]]\nname = \"optax\"\nversion = \"0.2.5\"\ndescription = \"A gradient processing and optimization library in JAX.\"\noptional = false\npython-versions = \">=3.10\"\nfiles = [\n    {file = \"optax-0.2.5-py3-none-any.whl\", hash = \"sha256:966deae936207f268ac8f564d8ed228d645ac1aaddefbbf194096d2299b24ba8\"},\n    {file = \"optax-0.2.5.tar.gz\", hash = \"sha256:b2e38c7aea376186deae758ba7a258e6ef760c6f6131e9e11bc561c65386d594\"},\n]\n\n[package.dependencies]\nabsl-py = \">=0.7.1\"\nchex = \">=0.1.87\"\njax = \">=0.4.27\"\njaxlib = \">=0.4.27\"\nnumpy = \">=1.18.0\"\n\n[package.extras]\ndocs = [\"flax\", \"ipython (>=8.8.0)\", \"matplotlib (>=3.5.0)\", \"myst-nb (>=1.0.0)\", \"sphinx (>=6.0.0)\", \"sphinx-autodoc-typehints\", \"sphinx-book-theme (>=1.0.1)\", \"sphinx-collections (>=0.0.1)\", \"sphinx-gallery (>=0.14.0)\", \"sphinx_contributors\", \"sphinxcontrib-katex\"]\ntest = [\"flax (>=0.5.3)\", \"scikit-learn\", \"scipy (>=1.7.1)\"]\n\n[[package]]\nname = \"osqp\"\nversion = \"1.0.4\"\ndescription = \"OSQP: The Operator Splitting QP Solver\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"osqp-1.0.4-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:2f4f06e1a67c272b8a4a0741020e859a8c67802466597397da2869802eb6a345\"},\n    {file = \"osqp-1.0.4-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:738d0b03d350b97c2cfeecc41620082a913e1efd06d2d58e4cc1d54d00ebfac5\"},\n    {file = \"osqp-1.0.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b9ce84caf57a0166123c923b5ca4d8f126799351f8454e96e25c339240e2b4db\"},\n    {file = \"osqp-1.0.4-cp310-cp310-win_amd64.whl\", hash = \"sha256:67a7af7779be5036d1f1729489781628feaa1dffa33ae44feefa172b6b9e173e\"},\n    {file = \"osqp-1.0.4-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:819603a8b6d84e17bbe0e17558235e5dbe3d6b95021550d7da4942aa35b31b60\"},\n    {file = \"osqp-1.0.4-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:8e76644654e30edf97eb5d400ffa57f3541b551842921ed9ac16db8f307883d9\"},\n    {file = \"osqp-1.0.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ddd7fc52e01c602f3482878b334eed1b366a9940b2053059968d3d47688de9ef\"},\n    {file = \"osqp-1.0.4-cp311-cp311-win_amd64.whl\", hash = \"sha256:c2a2ac69feb009ac43f80f33dfe5b32baaccefd22c6fcb9176b48f755506f120\"},\n    {file = \"osqp-1.0.4-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:6432c8ea5db1b334eb20abce2c0eca081edc070ea86ec634bb62e8ca1a014e21\"},\n    {file = \"osqp-1.0.4-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:8510861708fe664a0942bccfea4b3ea566b12927e54b415f539c24b8cad095c0\"},\n    {file = \"osqp-1.0.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8a3e3321b11426fa7a33b84f87f8d8608fdcd56c3992739012370f4d475b6a8f\"},\n    {file = \"osqp-1.0.4-cp312-cp312-win_amd64.whl\", hash = \"sha256:73357ceb0cee581a8a18f32a50dda8954c80374bc94e77c06d8ececb402e2a22\"},\n    {file = \"osqp-1.0.4-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:bae336207b52bbab6d663e7fb77beaffc53279e91a14e3db76ad2726b0e935d6\"},\n    {file = \"osqp-1.0.4-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:06dc3c6d7a0e2d4552dbc98a127e6d9a70d57ab856c8343c83aca42817ee8da3\"},\n    {file = \"osqp-1.0.4-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:11e4b50f66795d12e63b25b02d0261973b36ee8612ef8c949c124c74231da183\"},\n    {file = \"osqp-1.0.4-cp313-cp313-win_amd64.whl\", hash = \"sha256:14334e9473d0dd2fde3465b0d4c7a7de827798426ae2b40cb26504b376c48413\"},\n    {file = \"osqp-1.0.4-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:195364eedde925fc7b2725a707967de03ff25e2f9dbef9197b55c007b51dffbc\"},\n    {file = \"osqp-1.0.4-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:b9ed583018f78b26b2f4117b7e8418a1b1500f3df8c8de52aadebf107673e8e0\"},\n    {file = \"osqp-1.0.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7ac97dabc10f7ec16b6457fe0d2a867528335f0f321e84e55c2edad8e31f3336\"},\n    {file = \"osqp-1.0.4-cp38-cp38-win_amd64.whl\", hash = \"sha256:611c0a001a0c122cab3750967baa9ed2c9e5022693aff1f42b651b4202948488\"},\n    {file = \"osqp-1.0.4-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:4f36aabf42f05fdeeffef0cbcda2db84dfb040f46da46cab21f7674edb613030\"},\n    {file = \"osqp-1.0.4-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:0bc86af8f2ffc257ad1af2192638b2373cb93c8debeafdaae9757a05ece3c93c\"},\n    {file = \"osqp-1.0.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:806628a62e729697596bb6d221ed519621fe70f9ff48f26a531bc58be1dd9e60\"},\n    {file = \"osqp-1.0.4-cp39-cp39-win_amd64.whl\", hash = \"sha256:a52ae0148a650c55ed25280669facc52b1a59bfbe46ae92fb6a296d263db22c7\"},\n    {file = \"osqp-1.0.4.tar.gz\", hash = \"sha256:0877552e325ff4cc1c676796ba482904eb4b66e750eff5b91df3273201f5ed00\"},\n]\n\n[package.dependencies]\njinja2 = \"*\"\njoblib = \"*\"\nnumpy = \">=1.7\"\nscipy = \">=0.13.2\"\nsetuptools = \"*\"\n\n[package.extras]\ncu12 = [\"osqp-cu12\"]\ndev = [\"pre-commit\", \"pytest (>=6)\", \"scipy (!=1.12.0)\", \"torch\"]\nmkl = [\"osqp-mkl\"]\n\n[[package]]\nname = \"packaging\"\nversion = \"25.0\"\ndescription = \"Core utilities for Python packages\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"packaging-25.0-py3-none-any.whl\", hash = \"sha256:29572ef2b1f17581046b3a2227d5c611fb25ec70ca1ba8554b24b0e69331a484\"},\n    {file = \"packaging-25.0.tar.gz\", hash = \"sha256:d443872c98d677bf60f6a1f2f8c1cb748e8fe762d2bf9d3148b5599295b0fc4f\"},\n]\n\n[[package]]\nname = \"pandas\"\nversion = \"2.3.1\"\ndescription = \"Powerful data structures for data analysis, time series, and statistics\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"pandas-2.3.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:22c2e866f7209ebc3a8f08d75766566aae02bcc91d196935a1d9e59c7b990ac9\"},\n    {file = \"pandas-2.3.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:3583d348546201aff730c8c47e49bc159833f971c2899d6097bce68b9112a4f1\"},\n    {file = \"pandas-2.3.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0f951fbb702dacd390561e0ea45cdd8ecfa7fb56935eb3dd78e306c19104b9b0\"},\n    {file = \"pandas-2.3.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cd05b72ec02ebfb993569b4931b2e16fbb4d6ad6ce80224a3ee838387d83a191\"},\n    {file = \"pandas-2.3.1-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:1b916a627919a247d865aed068eb65eb91a344b13f5b57ab9f610b7716c92de1\"},\n    {file = \"pandas-2.3.1-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:fe67dc676818c186d5a3d5425250e40f179c2a89145df477dd82945eaea89e97\"},\n    {file = \"pandas-2.3.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:2eb789ae0274672acbd3c575b0598d213345660120a257b47b5dafdc618aec83\"},\n    {file = \"pandas-2.3.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:2b0540963d83431f5ce8870ea02a7430adca100cec8a050f0811f8e31035541b\"},\n    {file = \"pandas-2.3.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:fe7317f578c6a153912bd2292f02e40c1d8f253e93c599e82620c7f69755c74f\"},\n    {file = \"pandas-2.3.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e6723a27ad7b244c0c79d8e7007092d7c8f0f11305770e2f4cd778b3ad5f9f85\"},\n    {file = \"pandas-2.3.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3462c3735fe19f2638f2c3a40bd94ec2dc5ba13abbb032dd2fa1f540a075509d\"},\n    {file = \"pandas-2.3.1-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:98bcc8b5bf7afed22cc753a28bc4d9e26e078e777066bc53fac7904ddef9a678\"},\n    {file = \"pandas-2.3.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:4d544806b485ddf29e52d75b1f559142514e60ef58a832f74fb38e48d757b299\"},\n    {file = \"pandas-2.3.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:b3cd4273d3cb3707b6fffd217204c52ed92859533e31dc03b7c5008aa933aaab\"},\n    {file = \"pandas-2.3.1-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:689968e841136f9e542020698ee1c4fbe9caa2ed2213ae2388dc7b81721510d3\"},\n    {file = \"pandas-2.3.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:025e92411c16cbe5bb2a4abc99732a6b132f439b8aab23a59fa593eb00704232\"},\n    {file = \"pandas-2.3.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9b7ff55f31c4fcb3e316e8f7fa194566b286d6ac430afec0d461163312c5841e\"},\n    {file = \"pandas-2.3.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7dcb79bf373a47d2a40cf7232928eb7540155abbc460925c2c96d2d30b006eb4\"},\n    {file = \"pandas-2.3.1-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:56a342b231e8862c96bdb6ab97170e203ce511f4d0429589c8ede1ee8ece48b8\"},\n    {file = \"pandas-2.3.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:ca7ed14832bce68baef331f4d7f294411bed8efd032f8109d690df45e00c4679\"},\n    {file = \"pandas-2.3.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:ac942bfd0aca577bef61f2bc8da8147c4ef6879965ef883d8e8d5d2dc3e744b8\"},\n    {file = \"pandas-2.3.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:9026bd4a80108fac2239294a15ef9003c4ee191a0f64b90f170b40cfb7cf2d22\"},\n    {file = \"pandas-2.3.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:6de8547d4fdb12421e2d047a2c446c623ff4c11f47fddb6b9169eb98ffba485a\"},\n    {file = \"pandas-2.3.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:782647ddc63c83133b2506912cc6b108140a38a37292102aaa19c81c83db2928\"},\n    {file = \"pandas-2.3.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2ba6aff74075311fc88504b1db890187a3cd0f887a5b10f5525f8e2ef55bfdb9\"},\n    {file = \"pandas-2.3.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:e5635178b387bd2ba4ac040f82bc2ef6e6b500483975c4ebacd34bec945fda12\"},\n    {file = \"pandas-2.3.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:6f3bf5ec947526106399a9e1d26d40ee2b259c66422efdf4de63c848492d91bb\"},\n    {file = \"pandas-2.3.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:1c78cf43c8fde236342a1cb2c34bcff89564a7bfed7e474ed2fffa6aed03a956\"},\n    {file = \"pandas-2.3.1-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:8dfc17328e8da77be3cf9f47509e5637ba8f137148ed0e9b5241e1baf526e20a\"},\n    {file = \"pandas-2.3.1-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:ec6c851509364c59a5344458ab935e6451b31b818be467eb24b0fe89bd05b6b9\"},\n    {file = \"pandas-2.3.1-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:911580460fc4884d9b05254b38a6bfadddfcc6aaef856fb5859e7ca202e45275\"},\n    {file = \"pandas-2.3.1-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2f4d6feeba91744872a600e6edbbd5b033005b431d5ae8379abee5bcfa479fab\"},\n    {file = \"pandas-2.3.1-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:fe37e757f462d31a9cd7580236a82f353f5713a80e059a29753cf938c6775d96\"},\n    {file = \"pandas-2.3.1-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:5db9637dbc24b631ff3707269ae4559bce4b7fd75c1c4d7e13f40edc42df4444\"},\n    {file = \"pandas-2.3.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:4645f770f98d656f11c69e81aeb21c6fca076a44bed3dcbb9396a4311bc7f6d8\"},\n    {file = \"pandas-2.3.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:342e59589cc454aaff7484d75b816a433350b3d7964d7847327edda4d532a2e3\"},\n    {file = \"pandas-2.3.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1d12f618d80379fde6af007f65f0c25bd3e40251dbd1636480dfffce2cf1e6da\"},\n    {file = \"pandas-2.3.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dd71c47a911da120d72ef173aeac0bf5241423f9bfea57320110a978457e069e\"},\n    {file = \"pandas-2.3.1-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:09e3b1587f0f3b0913e21e8b32c3119174551deb4a4eba4a89bc7377947977e7\"},\n    {file = \"pandas-2.3.1-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:2323294c73ed50f612f67e2bf3ae45aea04dce5690778e08a09391897f35ff88\"},\n    {file = \"pandas-2.3.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:b4b0de34dc8499c2db34000ef8baad684cfa4cbd836ecee05f323ebfba348c7d\"},\n    {file = \"pandas-2.3.1.tar.gz\", hash = \"sha256:0a95b9ac964fe83ce317827f80304d37388ea77616b1425f0ae41c9d2d0d7bb2\"},\n]\n\n[package.dependencies]\nnumpy = [\n    {version = \">=1.23.2\", markers = \"python_version == \\\"3.11\\\"\"},\n    {version = \">=1.26.0\", markers = \"python_version >= \\\"3.12\\\"\"},\n]\npython-dateutil = \">=2.8.2\"\npytz = \">=2020.1\"\ntzdata = \">=2022.7\"\n\n[package.extras]\nall = [\"PyQt5 (>=5.15.9)\", \"SQLAlchemy (>=2.0.0)\", \"adbc-driver-postgresql (>=0.8.0)\", \"adbc-driver-sqlite (>=0.8.0)\", \"beautifulsoup4 (>=4.11.2)\", \"bottleneck (>=1.3.6)\", \"dataframe-api-compat (>=0.1.7)\", \"fastparquet (>=2022.12.0)\", \"fsspec (>=2022.11.0)\", \"gcsfs (>=2022.11.0)\", \"html5lib (>=1.1)\", \"hypothesis (>=6.46.1)\", \"jinja2 (>=3.1.2)\", \"lxml (>=4.9.2)\", \"matplotlib (>=3.6.3)\", \"numba (>=0.56.4)\", \"numexpr (>=2.8.4)\", \"odfpy (>=1.4.1)\", \"openpyxl (>=3.1.0)\", \"pandas-gbq (>=0.19.0)\", \"psycopg2 (>=2.9.6)\", \"pyarrow (>=10.0.1)\", \"pymysql (>=1.0.2)\", \"pyreadstat (>=1.2.0)\", \"pytest (>=7.3.2)\", \"pytest-xdist (>=2.2.0)\", \"python-calamine (>=0.1.7)\", \"pyxlsb (>=1.0.10)\", \"qtpy (>=2.3.0)\", \"s3fs (>=2022.11.0)\", \"scipy (>=1.10.0)\", \"tables (>=3.8.0)\", \"tabulate (>=0.9.0)\", \"xarray (>=2022.12.0)\", \"xlrd (>=2.0.1)\", \"xlsxwriter (>=3.0.5)\", \"zstandard (>=0.19.0)\"]\naws = [\"s3fs (>=2022.11.0)\"]\nclipboard = [\"PyQt5 (>=5.15.9)\", \"qtpy (>=2.3.0)\"]\ncompression = [\"zstandard (>=0.19.0)\"]\ncomputation = [\"scipy (>=1.10.0)\", \"xarray (>=2022.12.0)\"]\nconsortium-standard = [\"dataframe-api-compat (>=0.1.7)\"]\nexcel = [\"odfpy (>=1.4.1)\", \"openpyxl (>=3.1.0)\", \"python-calamine (>=0.1.7)\", \"pyxlsb (>=1.0.10)\", \"xlrd (>=2.0.1)\", \"xlsxwriter (>=3.0.5)\"]\nfeather = [\"pyarrow (>=10.0.1)\"]\nfss = [\"fsspec (>=2022.11.0)\"]\ngcp = [\"gcsfs (>=2022.11.0)\", \"pandas-gbq (>=0.19.0)\"]\nhdf5 = [\"tables (>=3.8.0)\"]\nhtml = [\"beautifulsoup4 (>=4.11.2)\", \"html5lib (>=1.1)\", \"lxml (>=4.9.2)\"]\nmysql = [\"SQLAlchemy (>=2.0.0)\", \"pymysql (>=1.0.2)\"]\noutput-formatting = [\"jinja2 (>=3.1.2)\", \"tabulate (>=0.9.0)\"]\nparquet = [\"pyarrow (>=10.0.1)\"]\nperformance = [\"bottleneck (>=1.3.6)\", \"numba (>=0.56.4)\", \"numexpr (>=2.8.4)\"]\nplot = [\"matplotlib (>=3.6.3)\"]\npostgresql = [\"SQLAlchemy (>=2.0.0)\", \"adbc-driver-postgresql (>=0.8.0)\", \"psycopg2 (>=2.9.6)\"]\npyarrow = [\"pyarrow (>=10.0.1)\"]\nspss = [\"pyreadstat (>=1.2.0)\"]\nsql-other = [\"SQLAlchemy (>=2.0.0)\", \"adbc-driver-postgresql (>=0.8.0)\", \"adbc-driver-sqlite (>=0.8.0)\"]\ntest = [\"hypothesis (>=6.46.1)\", \"pytest (>=7.3.2)\", \"pytest-xdist (>=2.2.0)\"]\nxml = [\"lxml (>=4.9.2)\"]\n\n[[package]]\nname = \"pathspec\"\nversion = \"0.12.1\"\ndescription = \"Utility library for gitignore style pattern matching of file paths.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pathspec-0.12.1-py3-none-any.whl\", hash = \"sha256:a0d503e138a4c123b27490a4f7beda6a01c6f288df0e4a8b79c7eb0dc7b4cc08\"},\n    {file = \"pathspec-0.12.1.tar.gz\", hash = \"sha256:a482d51503a1ab33b1c67a6c3813a26953dbdc71c31dacaef9a838c4e29f5712\"},\n]\n\n[[package]]\nname = \"pillow\"\nversion = \"11.3.0\"\ndescription = \"Python Imaging Library (Fork)\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"pillow-11.3.0-cp310-cp310-macosx_10_10_x86_64.whl\", hash = \"sha256:1b9c17fd4ace828b3003dfd1e30bff24863e0eb59b535e8f80194d9cc7ecf860\"},\n    {file = \"pillow-11.3.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:65dc69160114cdd0ca0f35cb434633c75e8e7fad4cf855177a05bf38678f73ad\"},\n    {file = \"pillow-11.3.0-cp310-cp310-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:7107195ddc914f656c7fc8e4a5e1c25f32e9236ea3ea860f257b0436011fddd0\"},\n    {file = \"pillow-11.3.0-cp310-cp310-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:cc3e831b563b3114baac7ec2ee86819eb03caa1a2cef0b481a5675b59c4fe23b\"},\n    {file = \"pillow-11.3.0-cp310-cp310-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:f1f182ebd2303acf8c380a54f615ec883322593320a9b00438eb842c1f37ae50\"},\n    {file = \"pillow-11.3.0-cp310-cp310-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:4445fa62e15936a028672fd48c4c11a66d641d2c05726c7ec1f8ba6a572036ae\"},\n    {file = \"pillow-11.3.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:71f511f6b3b91dd543282477be45a033e4845a40278fa8dcdbfdb07109bf18f9\"},\n    {file = \"pillow-11.3.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:040a5b691b0713e1f6cbe222e0f4f74cd233421e105850ae3b3c0ceda520f42e\"},\n    {file = \"pillow-11.3.0-cp310-cp310-win32.whl\", hash = \"sha256:89bd777bc6624fe4115e9fac3352c79ed60f3bb18651420635f26e643e3dd1f6\"},\n    {file = \"pillow-11.3.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:19d2ff547c75b8e3ff46f4d9ef969a06c30ab2d4263a9e287733aa8b2429ce8f\"},\n    {file = \"pillow-11.3.0-cp310-cp310-win_arm64.whl\", hash = \"sha256:819931d25e57b513242859ce1876c58c59dc31587847bf74cfe06b2e0cb22d2f\"},\n    {file = \"pillow-11.3.0-cp311-cp311-macosx_10_10_x86_64.whl\", hash = \"sha256:1cd110edf822773368b396281a2293aeb91c90a2db00d78ea43e7e861631b722\"},\n    {file = \"pillow-11.3.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:9c412fddd1b77a75aa904615ebaa6001f169b26fd467b4be93aded278266b288\"},\n    {file = \"pillow-11.3.0-cp311-cp311-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:7d1aa4de119a0ecac0a34a9c8bde33f34022e2e8f99104e47a3ca392fd60e37d\"},\n    {file = \"pillow-11.3.0-cp311-cp311-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:91da1d88226663594e3f6b4b8c3c8d85bd504117d043740a8e0ec449087cc494\"},\n    {file = \"pillow-11.3.0-cp311-cp311-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:643f189248837533073c405ec2f0bb250ba54598cf80e8c1e043381a60632f58\"},\n    {file = \"pillow-11.3.0-cp311-cp311-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:106064daa23a745510dabce1d84f29137a37224831d88eb4ce94bb187b1d7e5f\"},\n    {file = \"pillow-11.3.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:cd8ff254faf15591e724dc7c4ddb6bf4793efcbe13802a4ae3e863cd300b493e\"},\n    {file = \"pillow-11.3.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:932c754c2d51ad2b2271fd01c3d121daaa35e27efae2a616f77bf164bc0b3e94\"},\n    {file = \"pillow-11.3.0-cp311-cp311-win32.whl\", hash = \"sha256:b4b8f3efc8d530a1544e5962bd6b403d5f7fe8b9e08227c6b255f98ad82b4ba0\"},\n    {file = \"pillow-11.3.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:1a992e86b0dd7aeb1f053cd506508c0999d710a8f07b4c791c63843fc6a807ac\"},\n    {file = \"pillow-11.3.0-cp311-cp311-win_arm64.whl\", hash = \"sha256:30807c931ff7c095620fe04448e2c2fc673fcbb1ffe2a7da3fb39613489b1ddd\"},\n    {file = \"pillow-11.3.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:fdae223722da47b024b867c1ea0be64e0df702c5e0a60e27daad39bf960dd1e4\"},\n    {file = \"pillow-11.3.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:921bd305b10e82b4d1f5e802b6850677f965d8394203d182f078873851dada69\"},\n    {file = \"pillow-11.3.0-cp312-cp312-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:eb76541cba2f958032d79d143b98a3a6b3ea87f0959bbe256c0b5e416599fd5d\"},\n    {file = \"pillow-11.3.0-cp312-cp312-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:67172f2944ebba3d4a7b54f2e95c786a3a50c21b88456329314caaa28cda70f6\"},\n    {file = \"pillow-11.3.0-cp312-cp312-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:97f07ed9f56a3b9b5f49d3661dc9607484e85c67e27f3e8be2c7d28ca032fec7\"},\n    {file = \"pillow-11.3.0-cp312-cp312-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:676b2815362456b5b3216b4fd5bd89d362100dc6f4945154ff172e206a22c024\"},\n    {file = \"pillow-11.3.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:3e184b2f26ff146363dd07bde8b711833d7b0202e27d13540bfe2e35a323a809\"},\n    {file = \"pillow-11.3.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:6be31e3fc9a621e071bc17bb7de63b85cbe0bfae91bb0363c893cbe67247780d\"},\n    {file = \"pillow-11.3.0-cp312-cp312-win32.whl\", hash = \"sha256:7b161756381f0918e05e7cb8a371fff367e807770f8fe92ecb20d905d0e1c149\"},\n    {file = \"pillow-11.3.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:a6444696fce635783440b7f7a9fc24b3ad10a9ea3f0ab66c5905be1c19ccf17d\"},\n    {file = \"pillow-11.3.0-cp312-cp312-win_arm64.whl\", hash = \"sha256:2aceea54f957dd4448264f9bf40875da0415c83eb85f55069d89c0ed436e3542\"},\n    {file = \"pillow-11.3.0-cp313-cp313-ios_13_0_arm64_iphoneos.whl\", hash = \"sha256:1c627742b539bba4309df89171356fcb3cc5a9178355b2727d1b74a6cf155fbd\"},\n    {file = \"pillow-11.3.0-cp313-cp313-ios_13_0_arm64_iphonesimulator.whl\", hash = \"sha256:30b7c02f3899d10f13d7a48163c8969e4e653f8b43416d23d13d1bbfdc93b9f8\"},\n    {file = \"pillow-11.3.0-cp313-cp313-ios_13_0_x86_64_iphonesimulator.whl\", hash = \"sha256:7859a4cc7c9295f5838015d8cc0a9c215b77e43d07a25e460f35cf516df8626f\"},\n    {file = \"pillow-11.3.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:ec1ee50470b0d050984394423d96325b744d55c701a439d2bd66089bff963d3c\"},\n    {file = \"pillow-11.3.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:7db51d222548ccfd274e4572fdbf3e810a5e66b00608862f947b163e613b67dd\"},\n    {file = \"pillow-11.3.0-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:2d6fcc902a24ac74495df63faad1884282239265c6839a0a6416d33faedfae7e\"},\n    {file = \"pillow-11.3.0-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:f0f5d8f4a08090c6d6d578351a2b91acf519a54986c055af27e7a93feae6d3f1\"},\n    {file = \"pillow-11.3.0-cp313-cp313-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:c37d8ba9411d6003bba9e518db0db0c58a680ab9fe5179f040b0463644bc9805\"},\n    {file = \"pillow-11.3.0-cp313-cp313-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:13f87d581e71d9189ab21fe0efb5a23e9f28552d5be6979e84001d3b8505abe8\"},\n    {file = \"pillow-11.3.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:023f6d2d11784a465f09fd09a34b150ea4672e85fb3d05931d89f373ab14abb2\"},\n    {file = \"pillow-11.3.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:45dfc51ac5975b938e9809451c51734124e73b04d0f0ac621649821a63852e7b\"},\n    {file = \"pillow-11.3.0-cp313-cp313-win32.whl\", hash = \"sha256:a4d336baed65d50d37b88ca5b60c0fa9d81e3a87d4a7930d3880d1624d5b31f3\"},\n    {file = \"pillow-11.3.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:0bce5c4fd0921f99d2e858dc4d4d64193407e1b99478bc5cacecba2311abde51\"},\n    {file = \"pillow-11.3.0-cp313-cp313-win_arm64.whl\", hash = \"sha256:1904e1264881f682f02b7f8167935cce37bc97db457f8e7849dc3a6a52b99580\"},\n    {file = \"pillow-11.3.0-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:4c834a3921375c48ee6b9624061076bc0a32a60b5532b322cc0ea64e639dd50e\"},\n    {file = \"pillow-11.3.0-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:5e05688ccef30ea69b9317a9ead994b93975104a677a36a8ed8106be9260aa6d\"},\n    {file = \"pillow-11.3.0-cp313-cp313t-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:1019b04af07fc0163e2810167918cb5add8d74674b6267616021ab558dc98ced\"},\n    {file = \"pillow-11.3.0-cp313-cp313t-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:f944255db153ebb2b19c51fe85dd99ef0ce494123f21b9db4877ffdfc5590c7c\"},\n    {file = \"pillow-11.3.0-cp313-cp313t-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:1f85acb69adf2aaee8b7da124efebbdb959a104db34d3a2cb0f3793dbae422a8\"},\n    {file = \"pillow-11.3.0-cp313-cp313t-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:05f6ecbeff5005399bb48d198f098a9b4b6bdf27b8487c7f38ca16eeb070cd59\"},\n    {file = \"pillow-11.3.0-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:a7bc6e6fd0395bc052f16b1a8670859964dbd7003bd0af2ff08342eb6e442cfe\"},\n    {file = \"pillow-11.3.0-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:83e1b0161c9d148125083a35c1c5a89db5b7054834fd4387499e06552035236c\"},\n    {file = \"pillow-11.3.0-cp313-cp313t-win32.whl\", hash = \"sha256:2a3117c06b8fb646639dce83694f2f9eac405472713fcb1ae887469c0d4f6788\"},\n    {file = \"pillow-11.3.0-cp313-cp313t-win_amd64.whl\", hash = \"sha256:857844335c95bea93fb39e0fa2726b4d9d758850b34075a7e3ff4f4fa3aa3b31\"},\n    {file = \"pillow-11.3.0-cp313-cp313t-win_arm64.whl\", hash = \"sha256:8797edc41f3e8536ae4b10897ee2f637235c94f27404cac7297f7b607dd0716e\"},\n    {file = \"pillow-11.3.0-cp314-cp314-macosx_10_13_x86_64.whl\", hash = \"sha256:d9da3df5f9ea2a89b81bb6087177fb1f4d1c7146d583a3fe5c672c0d94e55e12\"},\n    {file = \"pillow-11.3.0-cp314-cp314-macosx_11_0_arm64.whl\", hash = \"sha256:0b275ff9b04df7b640c59ec5a3cb113eefd3795a8df80bac69646ef699c6981a\"},\n    {file = \"pillow-11.3.0-cp314-cp314-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:0743841cabd3dba6a83f38a92672cccbd69af56e3e91777b0ee7f4dba4385632\"},\n    {file = \"pillow-11.3.0-cp314-cp314-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:2465a69cf967b8b49ee1b96d76718cd98c4e925414ead59fdf75cf0fd07df673\"},\n    {file = \"pillow-11.3.0-cp314-cp314-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:41742638139424703b4d01665b807c6468e23e699e8e90cffefe291c5832b027\"},\n    {file = \"pillow-11.3.0-cp314-cp314-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:93efb0b4de7e340d99057415c749175e24c8864302369e05914682ba642e5d77\"},\n    {file = \"pillow-11.3.0-cp314-cp314-musllinux_1_2_aarch64.whl\", hash = \"sha256:7966e38dcd0fa11ca390aed7c6f20454443581d758242023cf36fcb319b1a874\"},\n    {file = \"pillow-11.3.0-cp314-cp314-musllinux_1_2_x86_64.whl\", hash = \"sha256:98a9afa7b9007c67ed84c57c9e0ad86a6000da96eaa638e4f8abe5b65ff83f0a\"},\n    {file = \"pillow-11.3.0-cp314-cp314-win32.whl\", hash = \"sha256:02a723e6bf909e7cea0dac1b0e0310be9d7650cd66222a5f1c571455c0a45214\"},\n    {file = \"pillow-11.3.0-cp314-cp314-win_amd64.whl\", hash = \"sha256:a418486160228f64dd9e9efcd132679b7a02a5f22c982c78b6fc7dab3fefb635\"},\n    {file = \"pillow-11.3.0-cp314-cp314-win_arm64.whl\", hash = \"sha256:155658efb5e044669c08896c0c44231c5e9abcaadbc5cd3648df2f7c0b96b9a6\"},\n    {file = \"pillow-11.3.0-cp314-cp314t-macosx_10_13_x86_64.whl\", hash = \"sha256:59a03cdf019efbfeeed910bf79c7c93255c3d54bc45898ac2a4140071b02b4ae\"},\n    {file = \"pillow-11.3.0-cp314-cp314t-macosx_11_0_arm64.whl\", hash = \"sha256:f8a5827f84d973d8636e9dc5764af4f0cf2318d26744b3d902931701b0d46653\"},\n    {file = \"pillow-11.3.0-cp314-cp314t-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:ee92f2fd10f4adc4b43d07ec5e779932b4eb3dbfbc34790ada5a6669bc095aa6\"},\n    {file = \"pillow-11.3.0-cp314-cp314t-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:c96d333dcf42d01f47b37e0979b6bd73ec91eae18614864622d9b87bbd5bbf36\"},\n    {file = \"pillow-11.3.0-cp314-cp314t-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:4c96f993ab8c98460cd0c001447bff6194403e8b1d7e149ade5f00594918128b\"},\n    {file = \"pillow-11.3.0-cp314-cp314t-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:41342b64afeba938edb034d122b2dda5db2139b9a4af999729ba8818e0056477\"},\n    {file = \"pillow-11.3.0-cp314-cp314t-musllinux_1_2_aarch64.whl\", hash = \"sha256:068d9c39a2d1b358eb9f245ce7ab1b5c3246c7c8c7d9ba58cfa5b43146c06e50\"},\n    {file = \"pillow-11.3.0-cp314-cp314t-musllinux_1_2_x86_64.whl\", hash = \"sha256:a1bc6ba083b145187f648b667e05a2534ecc4b9f2784c2cbe3089e44868f2b9b\"},\n    {file = \"pillow-11.3.0-cp314-cp314t-win32.whl\", hash = \"sha256:118ca10c0d60b06d006be10a501fd6bbdfef559251ed31b794668ed569c87e12\"},\n    {file = \"pillow-11.3.0-cp314-cp314t-win_amd64.whl\", hash = \"sha256:8924748b688aa210d79883357d102cd64690e56b923a186f35a82cbc10f997db\"},\n    {file = \"pillow-11.3.0-cp314-cp314t-win_arm64.whl\", hash = \"sha256:79ea0d14d3ebad43ec77ad5272e6ff9bba5b679ef73375ea760261207fa8e0aa\"},\n    {file = \"pillow-11.3.0-cp39-cp39-macosx_10_10_x86_64.whl\", hash = \"sha256:48d254f8a4c776de343051023eb61ffe818299eeac478da55227d96e241de53f\"},\n    {file = \"pillow-11.3.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:7aee118e30a4cf54fdd873bd3a29de51e29105ab11f9aad8c32123f58c8f8081\"},\n    {file = \"pillow-11.3.0-cp39-cp39-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:23cff760a9049c502721bdb743a7cb3e03365fafcdfc2ef9784610714166e5a4\"},\n    {file = \"pillow-11.3.0-cp39-cp39-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:6359a3bc43f57d5b375d1ad54a0074318a0844d11b76abccf478c37c986d3cfc\"},\n    {file = \"pillow-11.3.0-cp39-cp39-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:092c80c76635f5ecb10f3f83d76716165c96f5229addbd1ec2bdbbda7d496e06\"},\n    {file = \"pillow-11.3.0-cp39-cp39-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:cadc9e0ea0a2431124cde7e1697106471fc4c1da01530e679b2391c37d3fbb3a\"},\n    {file = \"pillow-11.3.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:6a418691000f2a418c9135a7cf0d797c1bb7d9a485e61fe8e7722845b95ef978\"},\n    {file = \"pillow-11.3.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:97afb3a00b65cc0804d1c7abddbf090a81eaac02768af58cbdcaaa0a931e0b6d\"},\n    {file = \"pillow-11.3.0-cp39-cp39-win32.whl\", hash = \"sha256:ea944117a7974ae78059fcc1800e5d3295172bb97035c0c1d9345fca1419da71\"},\n    {file = \"pillow-11.3.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:e5c5858ad8ec655450a7c7df532e9842cf8df7cc349df7225c60d5d348c8aada\"},\n    {file = \"pillow-11.3.0-cp39-cp39-win_arm64.whl\", hash = \"sha256:6abdbfd3aea42be05702a8dd98832329c167ee84400a1d1f61ab11437f1717eb\"},\n    {file = \"pillow-11.3.0-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:3cee80663f29e3843b68199b9d6f4f54bd1d4a6b59bdd91bceefc51238bcb967\"},\n    {file = \"pillow-11.3.0-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:b5f56c3f344f2ccaf0dd875d3e180f631dc60a51b314295a3e681fe8cf851fbe\"},\n    {file = \"pillow-11.3.0-pp310-pypy310_pp73-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:e67d793d180c9df62f1f40aee3accca4829d3794c95098887edc18af4b8b780c\"},\n    {file = \"pillow-11.3.0-pp310-pypy310_pp73-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:d000f46e2917c705e9fb93a3606ee4a819d1e3aa7a9b442f6444f07e77cf5e25\"},\n    {file = \"pillow-11.3.0-pp310-pypy310_pp73-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:527b37216b6ac3a12d7838dc3bd75208ec57c1c6d11ef01902266a5a0c14fc27\"},\n    {file = \"pillow-11.3.0-pp310-pypy310_pp73-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:be5463ac478b623b9dd3937afd7fb7ab3d79dd290a28e2b6df292dc75063eb8a\"},\n    {file = \"pillow-11.3.0-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:8dc70ca24c110503e16918a658b869019126ecfe03109b754c402daff12b3d9f\"},\n    {file = \"pillow-11.3.0-pp311-pypy311_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:7c8ec7a017ad1bd562f93dbd8505763e688d388cde6e4a010ae1486916e713e6\"},\n    {file = \"pillow-11.3.0-pp311-pypy311_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:9ab6ae226de48019caa8074894544af5b53a117ccb9d3b3dcb2871464c829438\"},\n    {file = \"pillow-11.3.0-pp311-pypy311_pp73-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:fe27fb049cdcca11f11a7bfda64043c37b30e6b91f10cb5bab275806c32f6ab3\"},\n    {file = \"pillow-11.3.0-pp311-pypy311_pp73-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:465b9e8844e3c3519a983d58b80be3f668e2a7a5db97f2784e7079fbc9f9822c\"},\n    {file = \"pillow-11.3.0-pp311-pypy311_pp73-manylinux_2_27_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:5418b53c0d59b3824d05e029669efa023bbef0f3e92e75ec8428f3799487f361\"},\n    {file = \"pillow-11.3.0-pp311-pypy311_pp73-manylinux_2_27_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:504b6f59505f08ae014f724b6207ff6222662aab5cc9542577fb084ed0676ac7\"},\n    {file = \"pillow-11.3.0-pp311-pypy311_pp73-win_amd64.whl\", hash = \"sha256:c84d689db21a1c397d001aa08241044aa2069e7587b398c8cc63020390b1c1b8\"},\n    {file = \"pillow-11.3.0.tar.gz\", hash = \"sha256:3828ee7586cd0b2091b6209e5ad53e20d0649bbe87164a459d0676e035e8f523\"},\n]\n\n[package.extras]\ndocs = [\"furo\", \"olefile\", \"sphinx (>=8.2)\", \"sphinx-autobuild\", \"sphinx-copybutton\", \"sphinx-inline-tabs\", \"sphinxext-opengraph\"]\nfpx = [\"olefile\"]\nmic = [\"olefile\"]\ntest-arrow = [\"pyarrow\"]\ntests = [\"check-manifest\", \"coverage (>=7.4.2)\", \"defusedxml\", \"markdown2\", \"olefile\", \"packaging\", \"pyroma\", \"pytest\", \"pytest-cov\", \"pytest-timeout\", \"pytest-xdist\", \"trove-classifiers (>=2024.10.12)\"]\ntyping = [\"typing-extensions\"]\nxmp = [\"defusedxml\"]\n\n[[package]]\nname = \"platformdirs\"\nversion = \"4.3.8\"\ndescription = \"A small Python package for determining appropriate platform-specific dirs, e.g. a `user data dir`.\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"platformdirs-4.3.8-py3-none-any.whl\", hash = \"sha256:ff7059bb7eb1179e2685604f4aaf157cfd9535242bd23742eadc3c13542139b4\"},\n    {file = \"platformdirs-4.3.8.tar.gz\", hash = \"sha256:3d512d96e16bcb959a814c9f348431070822a6496326a4be0911c40b5a74c2bc\"},\n]\n\n[package.extras]\ndocs = [\"furo (>=2024.8.6)\", \"proselint (>=0.14)\", \"sphinx (>=8.1.3)\", \"sphinx-autodoc-typehints (>=3)\"]\ntest = [\"appdirs (==1.4.4)\", \"covdefaults (>=2.3)\", \"pytest (>=8.3.4)\", \"pytest-cov (>=6)\", \"pytest-mock (>=3.14)\"]\ntype = [\"mypy (>=1.14.1)\"]\n\n[[package]]\nname = \"pluggy\"\nversion = \"1.6.0\"\ndescription = \"plugin and hook calling mechanisms for python\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"pluggy-1.6.0-py3-none-any.whl\", hash = \"sha256:e920276dd6813095e9377c0bc5566d94c932c33b27a3e3945d8389c374dd4746\"},\n    {file = \"pluggy-1.6.0.tar.gz\", hash = \"sha256:7dcc130b76258d33b90f61b658791dede3486c3e6bfb003ee5c9bfb396dd22f3\"},\n]\n\n[package.extras]\ndev = [\"pre-commit\", \"tox\"]\ntesting = [\"coverage\", \"pytest\", \"pytest-benchmark\"]\n\n[[package]]\nname = \"polars\"\nversion = \"0.20.31\"\ndescription = \"Blazingly fast DataFrame library\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"polars-0.20.31-cp38-abi3-macosx_10_12_x86_64.whl\", hash = \"sha256:86454ade5ed302bbf87f145cfcb1b14f7a5765a9440e448659e1f3dba6ac4e79\"},\n    {file = \"polars-0.20.31-cp38-abi3-macosx_11_0_arm64.whl\", hash = \"sha256:67f2fe842262b7e1b9371edad21b760f6734d28b74c78dda88dff1bf031b9499\"},\n    {file = \"polars-0.20.31-cp38-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:24b82441f93409e0e8abd6f427b029db102f02b8de328cee9a680f84b84e3736\"},\n    {file = \"polars-0.20.31-cp38-abi3-manylinux_2_24_aarch64.whl\", hash = \"sha256:87f43bce4d41abf8c8c5658d881e4b8378e5c61010a696bfea8b4106b908e916\"},\n    {file = \"polars-0.20.31-cp38-abi3-win_amd64.whl\", hash = \"sha256:2d7567c9fd9d3b9aa93387ca9880d9e8f7acea3c0a0555c03d8c0c2f0715d43c\"},\n    {file = \"polars-0.20.31.tar.gz\", hash = \"sha256:00f62dec6bf43a4e2a5db58b99bf0e79699fe761c80ae665868eaea5168f3bbb\"},\n]\n\n[package.extras]\nadbc = [\"adbc-driver-manager\", \"adbc-driver-sqlite\"]\nall = [\"polars[adbc,async,cloudpickle,connectorx,deltalake,fastexcel,fsspec,gevent,iceberg,numpy,pandas,plot,pyarrow,pydantic,sqlalchemy,timezone,xlsx2csv,xlsxwriter]\"]\nasync = [\"nest-asyncio\"]\ncloudpickle = [\"cloudpickle\"]\nconnectorx = [\"connectorx (>=0.3.2)\"]\ndeltalake = [\"deltalake (>=0.15.0)\"]\nfastexcel = [\"fastexcel (>=0.9)\"]\nfsspec = [\"fsspec\"]\ngevent = [\"gevent\"]\niceberg = [\"pyiceberg (>=0.5.0)\"]\nmatplotlib = [\"matplotlib\"]\nnumpy = [\"numpy (>=1.16.0)\"]\nopenpyxl = [\"openpyxl (>=3.0.0)\"]\npandas = [\"pandas\", \"pyarrow (>=7.0.0)\"]\nplot = [\"hvplot (>=0.9.1)\"]\npyarrow = [\"pyarrow (>=7.0.0)\"]\npydantic = [\"pydantic\"]\npyxlsb = [\"pyxlsb (>=1.0)\"]\nsqlalchemy = [\"pandas\", \"sqlalchemy\"]\ntimezone = [\"backports-zoneinfo\", \"tzdata\"]\nxlsx2csv = [\"xlsx2csv (>=0.8.0)\"]\nxlsxwriter = [\"xlsxwriter\"]\n\n[[package]]\nname = \"pre-commit\"\nversion = \"3.8.0\"\ndescription = \"A framework for managing and maintaining multi-language pre-commit hooks.\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"pre_commit-3.8.0-py2.py3-none-any.whl\", hash = \"sha256:9a90a53bf82fdd8778d58085faf8d83df56e40dfe18f45b19446e26bf1b3a63f\"},\n    {file = \"pre_commit-3.8.0.tar.gz\", hash = \"sha256:8bb6494d4a20423842e198980c9ecf9f96607a07ea29549e180eef9ae80fe7af\"},\n]\n\n[package.dependencies]\ncfgv = \">=2.0.0\"\nidentify = \">=1.0.0\"\nnodeenv = \">=0.11.1\"\npyyaml = \">=5.1\"\nvirtualenv = \">=20.10.0\"\n\n[[package]]\nname = \"propcache\"\nversion = \"0.3.2\"\ndescription = \"Accelerated property cache\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"propcache-0.3.2-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:22d9962a358aedbb7a2e36187ff273adeaab9743373a272976d2e348d08c7770\"},\n    {file = \"propcache-0.3.2-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:0d0fda578d1dc3f77b6b5a5dce3b9ad69a8250a891760a548df850a5e8da87f3\"},\n    {file = \"propcache-0.3.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:3def3da3ac3ce41562d85db655d18ebac740cb3fa4367f11a52b3da9d03a5cc3\"},\n    {file = \"propcache-0.3.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9bec58347a5a6cebf239daba9bda37dffec5b8d2ce004d9fe4edef3d2815137e\"},\n    {file = \"propcache-0.3.2-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:55ffda449a507e9fbd4aca1a7d9aa6753b07d6166140e5a18d2ac9bc49eac220\"},\n    {file = \"propcache-0.3.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:64a67fb39229a8a8491dd42f864e5e263155e729c2e7ff723d6e25f596b1e8cb\"},\n    {file = \"propcache-0.3.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9da1cf97b92b51253d5b68cf5a2b9e0dafca095e36b7f2da335e27dc6172a614\"},\n    {file = \"propcache-0.3.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:5f559e127134b07425134b4065be45b166183fdcb433cb6c24c8e4149056ad50\"},\n    {file = \"propcache-0.3.2-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:aff2e4e06435d61f11a428360a932138d0ec288b0a31dd9bd78d200bd4a2b339\"},\n    {file = \"propcache-0.3.2-cp310-cp310-musllinux_1_2_armv7l.whl\", hash = \"sha256:4927842833830942a5d0a56e6f4839bc484785b8e1ce8d287359794818633ba0\"},\n    {file = \"propcache-0.3.2-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:6107ddd08b02654a30fb8ad7a132021759d750a82578b94cd55ee2772b6ebea2\"},\n    {file = \"propcache-0.3.2-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:70bd8b9cd6b519e12859c99f3fc9a93f375ebd22a50296c3a295028bea73b9e7\"},\n    {file = \"propcache-0.3.2-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:2183111651d710d3097338dd1893fcf09c9f54e27ff1a8795495a16a469cc90b\"},\n    {file = \"propcache-0.3.2-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:fb075ad271405dcad8e2a7ffc9a750a3bf70e533bd86e89f0603e607b93aa64c\"},\n    {file = \"propcache-0.3.2-cp310-cp310-win32.whl\", hash = \"sha256:404d70768080d3d3bdb41d0771037da19d8340d50b08e104ca0e7f9ce55fce70\"},\n    {file = \"propcache-0.3.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:7435d766f978b4ede777002e6b3b6641dd229cd1da8d3d3106a45770365f9ad9\"},\n    {file = \"propcache-0.3.2-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:0b8d2f607bd8f80ddc04088bc2a037fdd17884a6fcadc47a96e334d72f3717be\"},\n    {file = \"propcache-0.3.2-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:06766d8f34733416e2e34f46fea488ad5d60726bb9481d3cddf89a6fa2d9603f\"},\n    {file = \"propcache-0.3.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:a2dc1f4a1df4fecf4e6f68013575ff4af84ef6f478fe5344317a65d38a8e6dc9\"},\n    {file = \"propcache-0.3.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:be29c4f4810c5789cf10ddf6af80b041c724e629fa51e308a7a0fb19ed1ef7bf\"},\n    {file = \"propcache-0.3.2-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:59d61f6970ecbd8ff2e9360304d5c8876a6abd4530cb752c06586849ac8a9dc9\"},\n    {file = \"propcache-0.3.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:62180e0b8dbb6b004baec00a7983e4cc52f5ada9cd11f48c3528d8cfa7b96a66\"},\n    {file = \"propcache-0.3.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c144ca294a204c470f18cf4c9d78887810d04a3e2fbb30eea903575a779159df\"},\n    {file = \"propcache-0.3.2-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c5c2a784234c28854878d68978265617aa6dc0780e53d44b4d67f3651a17a9a2\"},\n    {file = \"propcache-0.3.2-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:5745bc7acdafa978ca1642891b82c19238eadc78ba2aaa293c6863b304e552d7\"},\n    {file = \"propcache-0.3.2-cp311-cp311-musllinux_1_2_armv7l.whl\", hash = \"sha256:c0075bf773d66fa8c9d41f66cc132ecc75e5bb9dd7cce3cfd14adc5ca184cb95\"},\n    {file = \"propcache-0.3.2-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:5f57aa0847730daceff0497f417c9de353c575d8da3579162cc74ac294c5369e\"},\n    {file = \"propcache-0.3.2-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:eef914c014bf72d18efb55619447e0aecd5fb7c2e3fa7441e2e5d6099bddff7e\"},\n    {file = \"propcache-0.3.2-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:2a4092e8549031e82facf3decdbc0883755d5bbcc62d3aea9d9e185549936dcf\"},\n    {file = \"propcache-0.3.2-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:85871b050f174bc0bfb437efbdb68aaf860611953ed12418e4361bc9c392749e\"},\n    {file = \"propcache-0.3.2-cp311-cp311-win32.whl\", hash = \"sha256:36c8d9b673ec57900c3554264e630d45980fd302458e4ac801802a7fd2ef7897\"},\n    {file = \"propcache-0.3.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:e53af8cb6a781b02d2ea079b5b853ba9430fcbe18a8e3ce647d5982a3ff69f39\"},\n    {file = \"propcache-0.3.2-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:8de106b6c84506b31c27168582cd3cb3000a6412c16df14a8628e5871ff83c10\"},\n    {file = \"propcache-0.3.2-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:28710b0d3975117239c76600ea351934ac7b5ff56e60953474342608dbbb6154\"},\n    {file = \"propcache-0.3.2-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:ce26862344bdf836650ed2487c3d724b00fbfec4233a1013f597b78c1cb73615\"},\n    {file = \"propcache-0.3.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bca54bd347a253af2cf4544bbec232ab982f4868de0dd684246b67a51bc6b1db\"},\n    {file = \"propcache-0.3.2-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:55780d5e9a2ddc59711d727226bb1ba83a22dd32f64ee15594b9392b1f544eb1\"},\n    {file = \"propcache-0.3.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:035e631be25d6975ed87ab23153db6a73426a48db688070d925aa27e996fe93c\"},\n    {file = \"propcache-0.3.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ee6f22b6eaa39297c751d0e80c0d3a454f112f5c6481214fcf4c092074cecd67\"},\n    {file = \"propcache-0.3.2-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:7ca3aee1aa955438c4dba34fc20a9f390e4c79967257d830f137bd5a8a32ed3b\"},\n    {file = \"propcache-0.3.2-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:7a4f30862869fa2b68380d677cc1c5fcf1e0f2b9ea0cf665812895c75d0ca3b8\"},\n    {file = \"propcache-0.3.2-cp312-cp312-musllinux_1_2_armv7l.whl\", hash = \"sha256:b77ec3c257d7816d9f3700013639db7491a434644c906a2578a11daf13176251\"},\n    {file = \"propcache-0.3.2-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:cab90ac9d3f14b2d5050928483d3d3b8fb6b4018893fc75710e6aa361ecb2474\"},\n    {file = \"propcache-0.3.2-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:0b504d29f3c47cf6b9e936c1852246c83d450e8e063d50562115a6be6d3a2535\"},\n    {file = \"propcache-0.3.2-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:ce2ac2675a6aa41ddb2a0c9cbff53780a617ac3d43e620f8fd77ba1c84dcfc06\"},\n    {file = \"propcache-0.3.2-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:62b4239611205294cc433845b914131b2a1f03500ff3c1ed093ed216b82621e1\"},\n    {file = \"propcache-0.3.2-cp312-cp312-win32.whl\", hash = \"sha256:df4a81b9b53449ebc90cc4deefb052c1dd934ba85012aa912c7ea7b7e38b60c1\"},\n    {file = \"propcache-0.3.2-cp312-cp312-win_amd64.whl\", hash = \"sha256:7046e79b989d7fe457bb755844019e10f693752d169076138abf17f31380800c\"},\n    {file = \"propcache-0.3.2-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:ca592ed634a73ca002967458187109265e980422116c0a107cf93d81f95af945\"},\n    {file = \"propcache-0.3.2-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:9ecb0aad4020e275652ba3975740f241bd12a61f1a784df044cf7477a02bc252\"},\n    {file = \"propcache-0.3.2-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:7f08f1cc28bd2eade7a8a3d2954ccc673bb02062e3e7da09bc75d843386b342f\"},\n    {file = \"propcache-0.3.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d1a342c834734edb4be5ecb1e9fb48cb64b1e2320fccbd8c54bf8da8f2a84c33\"},\n    {file = \"propcache-0.3.2-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:8a544caaae1ac73f1fecfae70ded3e93728831affebd017d53449e3ac052ac1e\"},\n    {file = \"propcache-0.3.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:310d11aa44635298397db47a3ebce7db99a4cc4b9bbdfcf6c98a60c8d5261cf1\"},\n    {file = \"propcache-0.3.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4c1396592321ac83157ac03a2023aa6cc4a3cc3cfdecb71090054c09e5a7cce3\"},\n    {file = \"propcache-0.3.2-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8cabf5b5902272565e78197edb682017d21cf3b550ba0460ee473753f28d23c1\"},\n    {file = \"propcache-0.3.2-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:0a2f2235ac46a7aa25bdeb03a9e7060f6ecbd213b1f9101c43b3090ffb971ef6\"},\n    {file = \"propcache-0.3.2-cp313-cp313-musllinux_1_2_armv7l.whl\", hash = \"sha256:92b69e12e34869a6970fd2f3da91669899994b47c98f5d430b781c26f1d9f387\"},\n    {file = \"propcache-0.3.2-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:54e02207c79968ebbdffc169591009f4474dde3b4679e16634d34c9363ff56b4\"},\n    {file = \"propcache-0.3.2-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:4adfb44cb588001f68c5466579d3f1157ca07f7504fc91ec87862e2b8e556b88\"},\n    {file = \"propcache-0.3.2-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:fd3e6019dc1261cd0291ee8919dd91fbab7b169bb76aeef6c716833a3f65d206\"},\n    {file = \"propcache-0.3.2-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:4c181cad81158d71c41a2bce88edce078458e2dd5ffee7eddd6b05da85079f43\"},\n    {file = \"propcache-0.3.2-cp313-cp313-win32.whl\", hash = \"sha256:8a08154613f2249519e549de2330cf8e2071c2887309a7b07fb56098f5170a02\"},\n    {file = \"propcache-0.3.2-cp313-cp313-win_amd64.whl\", hash = \"sha256:e41671f1594fc4ab0a6dec1351864713cb3a279910ae8b58f884a88a0a632c05\"},\n    {file = \"propcache-0.3.2-cp313-cp313t-macosx_10_13_universal2.whl\", hash = \"sha256:9a3cf035bbaf035f109987d9d55dc90e4b0e36e04bbbb95af3055ef17194057b\"},\n    {file = \"propcache-0.3.2-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:156c03d07dc1323d8dacaa221fbe028c5c70d16709cdd63502778e6c3ccca1b0\"},\n    {file = \"propcache-0.3.2-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:74413c0ba02ba86f55cf60d18daab219f7e531620c15f1e23d95563f505efe7e\"},\n    {file = \"propcache-0.3.2-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f066b437bb3fa39c58ff97ab2ca351db465157d68ed0440abecb21715eb24b28\"},\n    {file = \"propcache-0.3.2-cp313-cp313t-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f1304b085c83067914721e7e9d9917d41ad87696bf70f0bc7dee450e9c71ad0a\"},\n    {file = \"propcache-0.3.2-cp313-cp313t-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:ab50cef01b372763a13333b4e54021bdcb291fc9a8e2ccb9c2df98be51bcde6c\"},\n    {file = \"propcache-0.3.2-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fad3b2a085ec259ad2c2842666b2a0a49dea8463579c606426128925af1ed725\"},\n    {file = \"propcache-0.3.2-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:261fa020c1c14deafd54c76b014956e2f86991af198c51139faf41c4d5e83892\"},\n    {file = \"propcache-0.3.2-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:46d7f8aa79c927e5f987ee3a80205c987717d3659f035c85cf0c3680526bdb44\"},\n    {file = \"propcache-0.3.2-cp313-cp313t-musllinux_1_2_armv7l.whl\", hash = \"sha256:6d8f3f0eebf73e3c0ff0e7853f68be638b4043c65a70517bb575eff54edd8dbe\"},\n    {file = \"propcache-0.3.2-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:03c89c1b14a5452cf15403e291c0ccd7751d5b9736ecb2c5bab977ad6c5bcd81\"},\n    {file = \"propcache-0.3.2-cp313-cp313t-musllinux_1_2_ppc64le.whl\", hash = \"sha256:0cc17efde71e12bbaad086d679ce575268d70bc123a5a71ea7ad76f70ba30bba\"},\n    {file = \"propcache-0.3.2-cp313-cp313t-musllinux_1_2_s390x.whl\", hash = \"sha256:acdf05d00696bc0447e278bb53cb04ca72354e562cf88ea6f9107df8e7fd9770\"},\n    {file = \"propcache-0.3.2-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:4445542398bd0b5d32df908031cb1b30d43ac848e20470a878b770ec2dcc6330\"},\n    {file = \"propcache-0.3.2-cp313-cp313t-win32.whl\", hash = \"sha256:f86e5d7cd03afb3a1db8e9f9f6eff15794e79e791350ac48a8c924e6f439f394\"},\n    {file = \"propcache-0.3.2-cp313-cp313t-win_amd64.whl\", hash = \"sha256:9704bedf6e7cbe3c65eca4379a9b53ee6a83749f047808cbb5044d40d7d72198\"},\n    {file = \"propcache-0.3.2-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:a7fad897f14d92086d6b03fdd2eb844777b0c4d7ec5e3bac0fbae2ab0602bbe5\"},\n    {file = \"propcache-0.3.2-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:1f43837d4ca000243fd7fd6301947d7cb93360d03cd08369969450cc6b2ce3b4\"},\n    {file = \"propcache-0.3.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:261df2e9474a5949c46e962065d88eb9b96ce0f2bd30e9d3136bcde84befd8f2\"},\n    {file = \"propcache-0.3.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e514326b79e51f0a177daab1052bc164d9d9e54133797a3a58d24c9c87a3fe6d\"},\n    {file = \"propcache-0.3.2-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d4a996adb6904f85894570301939afeee65f072b4fd265ed7e569e8d9058e4ec\"},\n    {file = \"propcache-0.3.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:76cace5d6b2a54e55b137669b30f31aa15977eeed390c7cbfb1dafa8dfe9a701\"},\n    {file = \"propcache-0.3.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:31248e44b81d59d6addbb182c4720f90b44e1efdc19f58112a3c3a1615fb47ef\"},\n    {file = \"propcache-0.3.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:abb7fa19dbf88d3857363e0493b999b8011eea856b846305d8c0512dfdf8fbb1\"},\n    {file = \"propcache-0.3.2-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:d81ac3ae39d38588ad0549e321e6f773a4e7cc68e7751524a22885d5bbadf886\"},\n    {file = \"propcache-0.3.2-cp39-cp39-musllinux_1_2_armv7l.whl\", hash = \"sha256:cc2782eb0f7a16462285b6f8394bbbd0e1ee5f928034e941ffc444012224171b\"},\n    {file = \"propcache-0.3.2-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:db429c19a6c7e8a1c320e6a13c99799450f411b02251fb1b75e6217cf4a14fcb\"},\n    {file = \"propcache-0.3.2-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:21d8759141a9e00a681d35a1f160892a36fb6caa715ba0b832f7747da48fb6ea\"},\n    {file = \"propcache-0.3.2-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:2ca6d378f09adb13837614ad2754fa8afaee330254f404299611bce41a8438cb\"},\n    {file = \"propcache-0.3.2-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:34a624af06c048946709f4278b4176470073deda88d91342665d95f7c6270fbe\"},\n    {file = \"propcache-0.3.2-cp39-cp39-win32.whl\", hash = \"sha256:4ba3fef1c30f306b1c274ce0b8baaa2c3cdd91f645c48f06394068f37d3837a1\"},\n    {file = \"propcache-0.3.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:7a2368eed65fc69a7a7a40b27f22e85e7627b74216f0846b04ba5c116e191ec9\"},\n    {file = \"propcache-0.3.2-py3-none-any.whl\", hash = \"sha256:98f1ec44fb675f5052cccc8e609c46ed23a35a1cfd18545ad4e29002d858a43f\"},\n    {file = \"propcache-0.3.2.tar.gz\", hash = \"sha256:20d7d62e4e7ef05f221e0db2856b979540686342e7dd9973b815599c7057e168\"},\n]\n\n[[package]]\nname = \"protobuf\"\nversion = \"4.25.8\"\ndescription = \"\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"protobuf-4.25.8-cp310-abi3-win32.whl\", hash = \"sha256:504435d831565f7cfac9f0714440028907f1975e4bed228e58e72ecfff58a1e0\"},\n    {file = \"protobuf-4.25.8-cp310-abi3-win_amd64.whl\", hash = \"sha256:bd551eb1fe1d7e92c1af1d75bdfa572eff1ab0e5bf1736716814cdccdb2360f9\"},\n    {file = \"protobuf-4.25.8-cp37-abi3-macosx_10_9_universal2.whl\", hash = \"sha256:ca809b42f4444f144f2115c4c1a747b9a404d590f18f37e9402422033e464e0f\"},\n    {file = \"protobuf-4.25.8-cp37-abi3-manylinux2014_aarch64.whl\", hash = \"sha256:9ad7ef62d92baf5a8654fbb88dac7fa5594cfa70fd3440488a5ca3bfc6d795a7\"},\n    {file = \"protobuf-4.25.8-cp37-abi3-manylinux2014_x86_64.whl\", hash = \"sha256:83e6e54e93d2b696a92cad6e6efc924f3850f82b52e1563778dfab8b355101b0\"},\n    {file = \"protobuf-4.25.8-cp38-cp38-win32.whl\", hash = \"sha256:27d498ffd1f21fb81d987a041c32d07857d1d107909f5134ba3350e1ce80a4af\"},\n    {file = \"protobuf-4.25.8-cp38-cp38-win_amd64.whl\", hash = \"sha256:d552c53d0415449c8d17ced5c341caba0d89dbf433698e1436c8fa0aae7808a3\"},\n    {file = \"protobuf-4.25.8-cp39-cp39-win32.whl\", hash = \"sha256:077ff8badf2acf8bc474406706ad890466274191a48d0abd3bd6987107c9cde5\"},\n    {file = \"protobuf-4.25.8-cp39-cp39-win_amd64.whl\", hash = \"sha256:f4510b93a3bec6eba8fd8f1093e9d7fb0d4a24d1a81377c10c0e5bbfe9e4ed24\"},\n    {file = \"protobuf-4.25.8-py3-none-any.whl\", hash = \"sha256:15a0af558aa3b13efef102ae6e4f3efac06f1eea11afb3a57db2901447d9fb59\"},\n    {file = \"protobuf-4.25.8.tar.gz\", hash = \"sha256:6135cf8affe1fc6f76cced2641e4ea8d3e59518d1f24ae41ba97bcad82d397cd\"},\n]\n\n[[package]]\nname = \"psutil\"\nversion = \"7.0.0\"\ndescription = \"Cross-platform lib for process and system monitoring in Python.  NOTE: the syntax of this script MUST be kept compatible with Python 2.7.\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"psutil-7.0.0-cp36-abi3-macosx_10_9_x86_64.whl\", hash = \"sha256:101d71dc322e3cffd7cea0650b09b3d08b8e7c4109dd6809fe452dfd00e58b25\"},\n    {file = \"psutil-7.0.0-cp36-abi3-macosx_11_0_arm64.whl\", hash = \"sha256:39db632f6bb862eeccf56660871433e111b6ea58f2caea825571951d4b6aa3da\"},\n    {file = \"psutil-7.0.0-cp36-abi3-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1fcee592b4c6f146991ca55919ea3d1f8926497a713ed7faaf8225e174581e91\"},\n    {file = \"psutil-7.0.0-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4b1388a4f6875d7e2aff5c4ca1cc16c545ed41dd8bb596cefea80111db353a34\"},\n    {file = \"psutil-7.0.0-cp36-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a5f098451abc2828f7dc6b58d44b532b22f2088f4999a937557b603ce72b1993\"},\n    {file = \"psutil-7.0.0-cp36-cp36m-win32.whl\", hash = \"sha256:84df4eb63e16849689f76b1ffcb36db7b8de703d1bc1fe41773db487621b6c17\"},\n    {file = \"psutil-7.0.0-cp36-cp36m-win_amd64.whl\", hash = \"sha256:1e744154a6580bc968a0195fd25e80432d3afec619daf145b9e5ba16cc1d688e\"},\n    {file = \"psutil-7.0.0-cp37-abi3-win32.whl\", hash = \"sha256:ba3fcef7523064a6c9da440fc4d6bd07da93ac726b5733c29027d7dc95b39d99\"},\n    {file = \"psutil-7.0.0-cp37-abi3-win_amd64.whl\", hash = \"sha256:4cf3d4eb1aa9b348dec30105c55cd9b7d4629285735a102beb4441e38db90553\"},\n    {file = \"psutil-7.0.0.tar.gz\", hash = \"sha256:7be9c3eba38beccb6495ea33afd982a44074b78f28c434a1f51cc07fd315c456\"},\n]\n\n[package.extras]\ndev = [\"abi3audit\", \"black (==24.10.0)\", \"check-manifest\", \"coverage\", \"packaging\", \"pylint\", \"pyperf\", \"pypinfo\", \"pytest\", \"pytest-cov\", \"pytest-xdist\", \"requests\", \"rstcheck\", \"ruff\", \"setuptools\", \"sphinx\", \"sphinx_rtd_theme\", \"toml-sort\", \"twine\", \"virtualenv\", \"vulture\", \"wheel\"]\ntest = [\"pytest\", \"pytest-xdist\", \"setuptools\"]\n\n[[package]]\nname = \"pycares\"\nversion = \"4.9.0\"\ndescription = \"Python interface for c-ares\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"pycares-4.9.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:0b8bd9a3ee6e9bc990e1933dc7e7e2f44d4184f49a90fa444297ac12ab6c0c84\"},\n    {file = \"pycares-4.9.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:417a5c20861f35977240ad4961479a6778125bcac21eb2ad1c3aad47e2ff7fab\"},\n    {file = \"pycares-4.9.0-cp310-cp310-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ab290faa4ea53ce53e3ceea1b3a42822daffce2d260005533293a52525076750\"},\n    {file = \"pycares-4.9.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7b1df81193084c9717734e4615e8c5074b9852478c9007d1a8bb242f7f580e67\"},\n    {file = \"pycares-4.9.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:20c7a6af0c2ccd17cc5a70d76e299a90e7ebd6c4d8a3d7fff5ae533339f61431\"},\n    {file = \"pycares-4.9.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:370f41442a5b034aebdb2719b04ee04d3e805454a20d3f64f688c1c49f9137c3\"},\n    {file = \"pycares-4.9.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:340e4a3bbfd14d73c01ec0793a321b8a4a93f64c508225883291078b7ee17ac8\"},\n    {file = \"pycares-4.9.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:f0ec94785856ea4f5556aa18f4c027361ba4b26cb36c4ad97d2105ef4eec68ba\"},\n    {file = \"pycares-4.9.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:dd6b7e23a4a9e2039b5d67dfa0499d2d5f114667dc13fb5d7d03eed230c7ac4f\"},\n    {file = \"pycares-4.9.0-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:490c978b0be9d35a253a5e31dd598f6d66b453625f0eb7dc2d81b22b8c3bb3f4\"},\n    {file = \"pycares-4.9.0-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:e433faaf07f44e44f1a1b839fee847480fe3db9431509dafc9f16d618d491d0f\"},\n    {file = \"pycares-4.9.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:cf6d8851a06b79d10089962c9dadcb34dad00bf027af000f7102297a54aaff2e\"},\n    {file = \"pycares-4.9.0-cp310-cp310-win32.whl\", hash = \"sha256:4f803e7d66ac7d8342998b8b07393788991353a46b05bbaad0b253d6f3484ea8\"},\n    {file = \"pycares-4.9.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:8e17bd32267e3870855de3baed7d0efa6337344d68f44853fd9195c919f39400\"},\n    {file = \"pycares-4.9.0-cp310-cp310-win_arm64.whl\", hash = \"sha256:6b74f75d8e430f9bb11a1cc99b2e328eed74b17d8d4b476de09126f38d419eb9\"},\n    {file = \"pycares-4.9.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:16a97ee83ec60d35c7f716f117719932c27d428b1bb56b242ba1c4aa55521747\"},\n    {file = \"pycares-4.9.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:78748521423a211ce699a50c27cc5c19e98b7db610ccea98daad652ace373990\"},\n    {file = \"pycares-4.9.0-cp311-cp311-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8818b2c7a57d9d6d41e8b64d9ff87992b8ea2522fc0799686725228bc3cff6c5\"},\n    {file = \"pycares-4.9.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:96df8990f16013ca5194d6ece19dddb4ef9cd7c3efaab9f196ec3ccd44b40f8d\"},\n    {file = \"pycares-4.9.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:61af86fd58b8326e723b0d20fb96b56acaec2261c3a7c9a1c29d0a79659d613a\"},\n    {file = \"pycares-4.9.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:ec72edb276bda559813cc807bc47b423d409ffab2402417a5381077e9c2c6be1\"},\n    {file = \"pycares-4.9.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:832fb122c7376c76cab62f8862fa5e398b9575fb7c9ff6bc9811086441ee64ca\"},\n    {file = \"pycares-4.9.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:cdcfaef24f771a471671470ccfd676c0366ab6b0616fd8217b8f356c40a02b83\"},\n    {file = \"pycares-4.9.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:52cb056d06ff55d78a8665b97ae948abaaba2ca200ca59b10346d4526bce1e7d\"},\n    {file = \"pycares-4.9.0-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:54985ed3f2e8a87315269f24cb73441622857a7830adfc3a27c675a94c3261c1\"},\n    {file = \"pycares-4.9.0-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:08048e223615d4aef3dac81fe0ea18fb18d6fc97881f1eb5be95bb1379969b8d\"},\n    {file = \"pycares-4.9.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:cc60037421ce05a409484287b2cd428e1363cca73c999b5f119936bb8f255208\"},\n    {file = \"pycares-4.9.0-cp311-cp311-win32.whl\", hash = \"sha256:62b86895b60cfb91befb3086caa0792b53f949231c6c0c3053c7dfee3f1386ab\"},\n    {file = \"pycares-4.9.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:7046b3c80954beaabf2db52b09c3d6fe85f6c4646af973e61be79d1c51589932\"},\n    {file = \"pycares-4.9.0-cp311-cp311-win_arm64.whl\", hash = \"sha256:fcbda3fdf44e94d3962ca74e6ba3dc18c0d7029106f030d61c04c0876f319403\"},\n    {file = \"pycares-4.9.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:d68ca2da1001aeccdc81c4a2fb1f1f6cfdafd3d00e44e7c1ed93e3e05437f666\"},\n    {file = \"pycares-4.9.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:4f0c8fa5a384d79551a27eafa39eed29529e66ba8fa795ee432ab88d050432a3\"},\n    {file = \"pycares-4.9.0-cp312-cp312-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0eb8c428cf3b9c6ff9c641ba50ab6357b4480cd737498733e6169b0ac8a1a89b\"},\n    {file = \"pycares-4.9.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6845bd4a43abf6dab7fedbf024ef458ac3750a25b25076ea9913e5ac5fec4548\"},\n    {file = \"pycares-4.9.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:5e28f4acc3b97e46610cf164665ebf914f709daea6ced0ca4358ce55bc1c3d6b\"},\n    {file = \"pycares-4.9.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:9464a39861840ce35a79352c34d653a9db44f9333af7c9feddb97998d3e00c07\"},\n    {file = \"pycares-4.9.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e0611c1bd46d1fc6bdd9305b8850eb84c77df485769f72c574ed7b8389dfbee2\"},\n    {file = \"pycares-4.9.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:d4fb5a38a51d03b75ac4320357e632c2e72e03fdeb13263ee333a40621415fdc\"},\n    {file = \"pycares-4.9.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:df5edae05fb3e1370ab7639e67e8891fdaa9026cb10f05dbd57893713f7a9cfe\"},\n    {file = \"pycares-4.9.0-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:397123ea53d261007bb0aa7e767ef238778f45026db40bed8196436da2cc73de\"},\n    {file = \"pycares-4.9.0-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:bb0d874d0b131b29894fd8a0f842be91ac21d50f90ec04cff4bb3f598464b523\"},\n    {file = \"pycares-4.9.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:497cc03a61ec1585eb17d2cb086a29a6a67d24babf1e9be519b47222916a3b06\"},\n    {file = \"pycares-4.9.0-cp312-cp312-win32.whl\", hash = \"sha256:b46e46313fdb5e82da15478652aac0fd15e1c9f33e08153bad845aa4007d6f84\"},\n    {file = \"pycares-4.9.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:12547a06445777091605a7581da15a0da158058beb8a05a3ebbf7301fd1f58d4\"},\n    {file = \"pycares-4.9.0-cp312-cp312-win_arm64.whl\", hash = \"sha256:f1e10bf1e8eb80b08e5c828627dba1ebc4acd54803bd0a27d92b9063b6aa99d8\"},\n    {file = \"pycares-4.9.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:574d815112a95ab09d75d0a9dc7dea737c06985e3125cf31c32ba6a3ed6ca006\"},\n    {file = \"pycares-4.9.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:50e5ab06361d59625a27a7ad93d27e067dc7c9f6aa529a07d691eb17f3b43605\"},\n    {file = \"pycares-4.9.0-cp313-cp313-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:785f5fd11ff40237d9bc8afa441551bb449e2812c74334d1d10859569e07515c\"},\n    {file = \"pycares-4.9.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e194a500e403eba89b91fb863c917495c5b3dfcd1ce0ee8dc3a6f99a1360e2fc\"},\n    {file = \"pycares-4.9.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:112dd49cdec4e6150a8d95b197e8b6b7b4468a3170b30738ed9b248cb2240c04\"},\n    {file = \"pycares-4.9.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:94aa3c2f3eb0aa69160137134775501f06c901188e722aac63d2a210d4084f99\"},\n    {file = \"pycares-4.9.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b510d71255cf5a92ccc2643a553548fcb0623d6ed11c8c633b421d99d7fa4167\"},\n    {file = \"pycares-4.9.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:5c6aa30b1492b8130f7832bf95178642c710ce6b7ba610c2b17377f77177e3cd\"},\n    {file = \"pycares-4.9.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:e5767988e044faffe2aff6a76aa08df99a8b6ef2641be8b00ea16334ce5dea93\"},\n    {file = \"pycares-4.9.0-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:b9928a942820a82daa3207509eaba9e0fa9660756ac56667ec2e062815331fcb\"},\n    {file = \"pycares-4.9.0-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:556c854174da76d544714cdfab10745ed5d4b99eec5899f7b13988cd26ff4763\"},\n    {file = \"pycares-4.9.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:d42e2202ca9aa9a0a9a6e43a4a4408bbe0311aaa44800fa27b8fd7f82b20152a\"},\n    {file = \"pycares-4.9.0-cp313-cp313-win32.whl\", hash = \"sha256:cce8ef72c9ed4982c84114e6148a4e42e989d745de7862a0ad8b3f1cdc05def2\"},\n    {file = \"pycares-4.9.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:318cdf24f826f1d2f0c5a988730bd597e1683296628c8f1be1a5b96643c284fe\"},\n    {file = \"pycares-4.9.0-cp313-cp313-win_arm64.whl\", hash = \"sha256:faa9de8e647ed06757a2c117b70a7645a755561def814da6aca0d766cf71a402\"},\n    {file = \"pycares-4.9.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:8310d27d68fa25be9781ce04d330f4860634a2ac34dd9265774b5f404679b41f\"},\n    {file = \"pycares-4.9.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:99cf98452d3285307eec123049f2c9c50b109e06751b0727c6acefb6da30c6a0\"},\n    {file = \"pycares-4.9.0-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6ffd6e8c8250655504602b076f106653e085e6b1e15318013442558101aa4777\"},\n    {file = \"pycares-4.9.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a4065858d8c812159c9a55601fda73760d9e5e3300f7868d9e546eab1084f36c\"},\n    {file = \"pycares-4.9.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:91ee6818113faf9013945c2b54bcd6b123d0ac192ae3099cf4288cedaf2dbb25\"},\n    {file = \"pycares-4.9.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:21f0602059ec11857ab7ad608c7ec8bc6f7a302c04559ec06d33e82f040585f8\"},\n    {file = \"pycares-4.9.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e22e5b46ed9b12183091da56e4a5a20813b5436c4f13135d7a1c20a84027ca8a\"},\n    {file = \"pycares-4.9.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:9eded8649867bfd7aea7589c5755eae4d37686272f6ed7a995da40890d02de71\"},\n    {file = \"pycares-4.9.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:f71d31cbbe066657a2536c98aad850724a9ab7b1cd2624f491832ae9667ea8e7\"},\n    {file = \"pycares-4.9.0-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:2b30945982ab4741f097efc5b0853051afc3c11df26996ed53a700c7575175af\"},\n    {file = \"pycares-4.9.0-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:54a8f1f067d64810426491d33033f5353b54f35e5339126440ad4e6afbf3f149\"},\n    {file = \"pycares-4.9.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:41556a269a192349e92eee953f62eddd867e9eddb27f444b261e2c1c4a4a9eff\"},\n    {file = \"pycares-4.9.0-cp39-cp39-win32.whl\", hash = \"sha256:524d6c14eaa167ed098a4fe54856d1248fa20c296cdd6976f9c1b838ba32d014\"},\n    {file = \"pycares-4.9.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:15f930c733d36aa487b4ad60413013bd811281b5ea4ca620070fa38505d84df4\"},\n    {file = \"pycares-4.9.0-cp39-cp39-win_arm64.whl\", hash = \"sha256:79b7addb2a41267d46650ac0d9c4f3b3233b036f186b85606f7586881dfb4b69\"},\n    {file = \"pycares-4.9.0.tar.gz\", hash = \"sha256:8ee484ddb23dbec4d88d14ed5b6d592c1960d2e93c385d5e52b6fad564d82395\"},\n]\n\n[package.dependencies]\ncffi = \">=1.5.0\"\n\n[package.extras]\nidna = [\"idna (>=2.1)\"]\n\n[[package]]\nname = \"pycodestyle\"\nversion = \"2.14.0\"\ndescription = \"Python style guide checker\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"pycodestyle-2.14.0-py2.py3-none-any.whl\", hash = \"sha256:dd6bf7cb4ee77f8e016f9c8e74a35ddd9f67e1d5fd4184d86c3b98e07099f42d\"},\n    {file = \"pycodestyle-2.14.0.tar.gz\", hash = \"sha256:c4b5b517d278089ff9d0abdec919cd97262a3367449ea1c8b49b91529167b783\"},\n]\n\n[[package]]\nname = \"pycoingecko\"\nversion = \"3.2.0\"\ndescription = \"Python wrapper around the CoinGecko API\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"pycoingecko-3.2.0-py3-none-any.whl\", hash = \"sha256:b4fec16e9420b3e2f1ae38ea95710b631c9809cf1bffbf0021cc6608e357925b\"},\n    {file = \"pycoingecko-3.2.0.tar.gz\", hash = \"sha256:c48935d6e608efd9a798cbc4be30f1b43176cb680503dfef8f9352e038fc7605\"},\n]\n\n[package.dependencies]\nrequests = \"*\"\n\n[[package]]\nname = \"pycparser\"\nversion = \"2.22\"\ndescription = \"C parser in Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pycparser-2.22-py3-none-any.whl\", hash = \"sha256:c3702b6d3dd8c7abc1afa565d7e63d53a1d0bd86cdc24edd75470f4de499cfcc\"},\n    {file = \"pycparser-2.22.tar.gz\", hash = \"sha256:491c8be9c040f5390f5bf44a5b07752bd07f56edf992381b05c701439eec10f6\"},\n]\n\n[[package]]\nname = \"pyflakes\"\nversion = \"3.4.0\"\ndescription = \"passive checker of Python programs\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"pyflakes-3.4.0-py2.py3-none-any.whl\", hash = \"sha256:f742a7dbd0d9cb9ea41e9a24a918996e8170c799fa528688d40dd582c8265f4f\"},\n    {file = \"pyflakes-3.4.0.tar.gz\", hash = \"sha256:b24f96fafb7d2ab0ec5075b7350b3d2d2218eab42003821c06344973d3ea2f58\"},\n]\n\n[[package]]\nname = \"pygments\"\nversion = \"2.19.2\"\ndescription = \"Pygments is a syntax highlighting package written in Python.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pygments-2.19.2-py3-none-any.whl\", hash = \"sha256:86540386c03d588bb81d44bc3928634ff26449851e99741617ecb9037ee5ec0b\"},\n    {file = \"pygments-2.19.2.tar.gz\", hash = \"sha256:636cb2477cec7f8952536970bc533bc43743542f70392ae026374600add5b887\"},\n]\n\n[package.extras]\nwindows-terminal = [\"colorama (>=0.4.6)\"]\n\n[[package]]\nname = \"pytest\"\nversion = \"8.4.1\"\ndescription = \"pytest: simple powerful testing with Python\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"pytest-8.4.1-py3-none-any.whl\", hash = \"sha256:539c70ba6fcead8e78eebbf1115e8b589e7565830d7d006a8723f19ac8a0afb7\"},\n    {file = \"pytest-8.4.1.tar.gz\", hash = \"sha256:7c67fd69174877359ed9371ec3af8a3d2b04741818c51e5e99cc1742251fa93c\"},\n]\n\n[package.dependencies]\ncolorama = {version = \">=0.4\", markers = \"sys_platform == \\\"win32\\\"\"}\niniconfig = \">=1\"\npackaging = \">=20\"\npluggy = \">=1.5,<2\"\npygments = \">=2.7.2\"\n\n[package.extras]\ndev = [\"argcomplete\", \"attrs (>=19.2)\", \"hypothesis (>=3.56)\", \"mock\", \"requests\", \"setuptools\", \"xmlschema\"]\n\n[[package]]\nname = \"python-dateutil\"\nversion = \"2.9.0.post0\"\ndescription = \"Extensions to the standard Python datetime module\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,>=2.7\"\nfiles = [\n    {file = \"python-dateutil-2.9.0.post0.tar.gz\", hash = \"sha256:37dd54208da7e1cd875388217d5e00ebd4179249f90fb72437e91a35459a0ad3\"},\n    {file = \"python_dateutil-2.9.0.post0-py2.py3-none-any.whl\", hash = \"sha256:a8b2bc7bffae282281c8140a97d3aa9c14da0b136dfe83f850eea9a5f7470427\"},\n]\n\n[package.dependencies]\nsix = \">=1.5\"\n\n[[package]]\nname = \"pytz\"\nversion = \"2025.2\"\ndescription = \"World timezone definitions, modern and historical\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"pytz-2025.2-py2.py3-none-any.whl\", hash = \"sha256:5ddf76296dd8c44c26eb8f4b6f35488f3ccbf6fbbd7adee0b7262d43f0ec2f00\"},\n    {file = \"pytz-2025.2.tar.gz\", hash = \"sha256:360b9e3dbb49a209c21ad61809c7fb453643e048b38924c765813546746e81c3\"},\n]\n\n[[package]]\nname = \"pyyaml\"\nversion = \"6.0.2\"\ndescription = \"YAML parser and emitter for Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"PyYAML-6.0.2-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:0a9a2848a5b7feac301353437eb7d5957887edbf81d56e903999a75a3d743086\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:29717114e51c84ddfba879543fb232a6ed60086602313ca38cce623c1d62cfbf\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8824b5a04a04a047e72eea5cec3bc266db09e35de6bdfe34c9436ac5ee27d237\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:7c36280e6fb8385e520936c3cb3b8042851904eba0e58d277dca80a5cfed590b\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ec031d5d2feb36d1d1a24380e4db6d43695f3748343d99434e6f5f9156aaa2ed\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:936d68689298c36b53b29f23c6dbb74de12b4ac12ca6cfe0e047bedceea56180\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:23502f431948090f597378482b4812b0caae32c22213aecf3b55325e049a6c68\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-win32.whl\", hash = \"sha256:2e99c6826ffa974fe6e27cdb5ed0021786b03fc98e5ee3c5bfe1fd5015f42b99\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:a4d3091415f010369ae4ed1fc6b79def9416358877534caf6a0fdd2146c87a3e\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:cc1c1159b3d456576af7a3e4d1ba7e6924cb39de8f67111c735f6fc832082774\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:1e2120ef853f59c7419231f3bf4e7021f1b936f6ebd222406c3b60212205d2ee\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5d225db5a45f21e78dd9358e58a98702a0302f2659a3c6cd320564b75b86f47c\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5ac9328ec4831237bec75defaf839f7d4564be1e6b25ac710bd1a96321cc8317\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3ad2a3decf9aaba3d29c8f537ac4b243e36bef957511b4766cb0057d32b0be85\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:ff3824dc5261f50c9b0dfb3be22b4567a6f938ccce4587b38952d85fd9e9afe4\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:797b4f722ffa07cc8d62053e4cff1486fa6dc094105d13fea7b1de7d8bf71c9e\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-win32.whl\", hash = \"sha256:11d8f3dd2b9c1207dcaf2ee0bbbfd5991f571186ec9cc78427ba5bd32afae4b5\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:e10ce637b18caea04431ce14fabcf5c64a1c61ec9c56b071a4b7ca131ca52d44\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:c70c95198c015b85feafc136515252a261a84561b7b1d51e3384e0655ddf25ab\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:ce826d6ef20b1bc864f0a68340c8b3287705cae2f8b4b1d932177dcc76721725\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1f71ea527786de97d1a0cc0eacd1defc0985dcf6b3f17bb77dcfc8c34bec4dc5\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:9b22676e8097e9e22e36d6b7bda33190d0d400f345f23d4065d48f4ca7ae0425\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:80bab7bfc629882493af4aa31a4cfa43a4c57c83813253626916b8c7ada83476\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:0833f8694549e586547b576dcfaba4a6b55b9e96098b36cdc7ebefe667dfed48\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:8b9c7197f7cb2738065c481a0461e50ad02f18c78cd75775628afb4d7137fb3b\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-win32.whl\", hash = \"sha256:ef6107725bd54b262d6dedcc2af448a266975032bc85ef0172c5f059da6325b4\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-win_amd64.whl\", hash = \"sha256:7e7401d0de89a9a855c839bc697c079a4af81cf878373abd7dc625847d25cbd8\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:efdca5630322a10774e8e98e1af481aad470dd62c3170801852d752aa7a783ba\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:50187695423ffe49e2deacb8cd10510bc361faac997de9efef88badc3bb9e2d1\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0ffe8360bab4910ef1b9e87fb812d8bc0a308b0d0eef8c8f44e0254ab3b07133\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:17e311b6c678207928d649faa7cb0d7b4c26a0ba73d41e99c4fff6b6c3276484\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:70b189594dbe54f75ab3a1acec5f1e3faa7e8cf2f1e08d9b561cb41b845f69d5\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:41e4e3953a79407c794916fa277a82531dd93aad34e29c2a514c2c0c5fe971cc\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:68ccc6023a3400877818152ad9a1033e3db8625d899c72eacb5a668902e4d652\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-win32.whl\", hash = \"sha256:bc2fa7c6b47d6bc618dd7fb02ef6fdedb1090ec036abab80d4681424b84c1183\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-win_amd64.whl\", hash = \"sha256:8388ee1976c416731879ac16da0aff3f63b286ffdd57cdeb95f3f2e085687563\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:24471b829b3bf607e04e88d79542a9d48bb037c2267d7927a874e6c205ca7e9a\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d7fded462629cfa4b685c5416b949ebad6cec74af5e2d42905d41e257e0869f5\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:d84a1718ee396f54f3a086ea0a66d8e552b2ab2017ef8b420e92edbc841c352d\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9056c1ecd25795207ad294bcf39f2db3d845767be0ea6e6a34d856f006006083\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:82d09873e40955485746739bcb8b4586983670466c23382c19cffecbf1fd8706\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-win32.whl\", hash = \"sha256:43fa96a3ca0d6b1812e01ced1044a003533c47f6ee8aca31724f78e93ccc089a\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:01179a4a8559ab5de078078f37e5c1a30d76bb88519906844fd7bdea1b7729ff\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:688ba32a1cffef67fd2e9398a2efebaea461578b0923624778664cc1c914db5d\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:a8786accb172bd8afb8be14490a16625cbc387036876ab6ba70912730faf8e1f\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d8e03406cac8513435335dbab54c0d385e4a49e4945d2909a581c83647ca0290\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f753120cb8181e736c57ef7636e83f31b9c0d1722c516f7e86cf15b7aa57ff12\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3b1fdb9dc17f5a7677423d508ab4f243a726dea51fa5e70992e59a7411c89d19\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:0b69e4ce7a131fe56b7e4d770c67429700908fc0752af059838b1cfb41960e4e\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:a9f8c2e67970f13b16084e04f134610fd1d374bf477b17ec1599185cf611d725\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-win32.whl\", hash = \"sha256:6395c297d42274772abc367baaa79683958044e5d3835486c16da75d2a694631\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:39693e1f8320ae4f43943590b49779ffb98acb81f788220ea932a6b6c51004d8\"},\n    {file = \"pyyaml-6.0.2.tar.gz\", hash = \"sha256:d584d9ec91ad65861cc08d42e834324ef890a082e591037abe114850ff7bbc3e\"},\n]\n\n[[package]]\nname = \"requests\"\nversion = \"2.32.4\"\ndescription = \"Python HTTP for Humans.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"requests-2.32.4-py3-none-any.whl\", hash = \"sha256:27babd3cda2a6d50b30443204ee89830707d396671944c998b5975b031ac2b2c\"},\n    {file = \"requests-2.32.4.tar.gz\", hash = \"sha256:27d0316682c8a29834d3264820024b62a36942083d52caf2f14c0591336d3422\"},\n]\n\n[package.dependencies]\ncertifi = \">=2017.4.17\"\ncharset_normalizer = \">=2,<4\"\nidna = \">=2.5,<4\"\nurllib3 = \">=1.21.1,<3\"\n\n[package.extras]\nsocks = [\"PySocks (>=1.5.6,!=1.5.7)\"]\nuse-chardet-on-py3 = [\"chardet (>=3.0.2,<6)\"]\n\n[[package]]\nname = \"scipy\"\nversion = \"1.16.0\"\ndescription = \"Fundamental algorithms for scientific computing in Python\"\noptional = false\npython-versions = \">=3.11\"\nfiles = [\n    {file = \"scipy-1.16.0-cp311-cp311-macosx_10_14_x86_64.whl\", hash = \"sha256:deec06d831b8f6b5fb0b652433be6a09db29e996368ce5911faf673e78d20085\"},\n    {file = \"scipy-1.16.0-cp311-cp311-macosx_12_0_arm64.whl\", hash = \"sha256:d30c0fe579bb901c61ab4bb7f3eeb7281f0d4c4a7b52dbf563c89da4fd2949be\"},\n    {file = \"scipy-1.16.0-cp311-cp311-macosx_14_0_arm64.whl\", hash = \"sha256:b2243561b45257f7391d0f49972fca90d46b79b8dbcb9b2cb0f9df928d370ad4\"},\n    {file = \"scipy-1.16.0-cp311-cp311-macosx_14_0_x86_64.whl\", hash = \"sha256:e6d7dfc148135e9712d87c5f7e4f2ddc1304d1582cb3a7d698bbadedb61c7afd\"},\n    {file = \"scipy-1.16.0-cp311-cp311-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:90452f6a9f3fe5a2cf3748e7be14f9cc7d9b124dce19667b54f5b429d680d539\"},\n    {file = \"scipy-1.16.0-cp311-cp311-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:a2f0bf2f58031c8701a8b601df41701d2a7be17c7ffac0a4816aeba89c4cdac8\"},\n    {file = \"scipy-1.16.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:6c4abb4c11fc0b857474241b812ce69ffa6464b4bd8f4ecb786cf240367a36a7\"},\n    {file = \"scipy-1.16.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:b370f8f6ac6ef99815b0d5c9f02e7ade77b33007d74802efc8316c8db98fd11e\"},\n    {file = \"scipy-1.16.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:a16ba90847249bedce8aa404a83fb8334b825ec4a8e742ce6012a7a5e639f95c\"},\n    {file = \"scipy-1.16.0-cp312-cp312-macosx_10_14_x86_64.whl\", hash = \"sha256:7eb6bd33cef4afb9fa5f1fb25df8feeb1e52d94f21a44f1d17805b41b1da3180\"},\n    {file = \"scipy-1.16.0-cp312-cp312-macosx_12_0_arm64.whl\", hash = \"sha256:1dbc8fdba23e4d80394ddfab7a56808e3e6489176d559c6c71935b11a2d59db1\"},\n    {file = \"scipy-1.16.0-cp312-cp312-macosx_14_0_arm64.whl\", hash = \"sha256:7dcf42c380e1e3737b343dec21095c9a9ad3f9cbe06f9c05830b44b1786c9e90\"},\n    {file = \"scipy-1.16.0-cp312-cp312-macosx_14_0_x86_64.whl\", hash = \"sha256:26ec28675f4a9d41587266084c626b02899db373717d9312fa96ab17ca1ae94d\"},\n    {file = \"scipy-1.16.0-cp312-cp312-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:952358b7e58bd3197cfbd2f2f2ba829f258404bdf5db59514b515a8fe7a36c52\"},\n    {file = \"scipy-1.16.0-cp312-cp312-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:03931b4e870c6fef5b5c0970d52c9f6ddd8c8d3e934a98f09308377eba6f3824\"},\n    {file = \"scipy-1.16.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:512c4f4f85912767c351a0306824ccca6fd91307a9f4318efe8fdbd9d30562ef\"},\n    {file = \"scipy-1.16.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:e69f798847e9add03d512eaf5081a9a5c9a98757d12e52e6186ed9681247a1ac\"},\n    {file = \"scipy-1.16.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:adf9b1999323ba335adc5d1dc7add4781cb5a4b0ef1e98b79768c05c796c4e49\"},\n    {file = \"scipy-1.16.0-cp313-cp313-macosx_10_14_x86_64.whl\", hash = \"sha256:e9f414cbe9ca289a73e0cc92e33a6a791469b6619c240aa32ee18abdce8ab451\"},\n    {file = \"scipy-1.16.0-cp313-cp313-macosx_12_0_arm64.whl\", hash = \"sha256:bbba55fb97ba3cdef9b1ee973f06b09d518c0c7c66a009c729c7d1592be1935e\"},\n    {file = \"scipy-1.16.0-cp313-cp313-macosx_14_0_arm64.whl\", hash = \"sha256:58e0d4354eacb6004e7aa1cd350e5514bd0270acaa8d5b36c0627bb3bb486974\"},\n    {file = \"scipy-1.16.0-cp313-cp313-macosx_14_0_x86_64.whl\", hash = \"sha256:75b2094ec975c80efc273567436e16bb794660509c12c6a31eb5c195cbf4b6dc\"},\n    {file = \"scipy-1.16.0-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:6b65d232157a380fdd11a560e7e21cde34fdb69d65c09cb87f6cc024ee376351\"},\n    {file = \"scipy-1.16.0-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:1d8747f7736accd39289943f7fe53a8333be7f15a82eea08e4afe47d79568c32\"},\n    {file = \"scipy-1.16.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:eb9f147a1b8529bb7fec2a85cf4cf42bdfadf9e83535c309a11fdae598c88e8b\"},\n    {file = \"scipy-1.16.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:d2b83c37edbfa837a8923d19c749c1935ad3d41cf196006a24ed44dba2ec4358\"},\n    {file = \"scipy-1.16.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:79a3c13d43c95aa80b87328a46031cf52508cf5f4df2767602c984ed1d3c6bbe\"},\n    {file = \"scipy-1.16.0-cp313-cp313t-macosx_10_14_x86_64.whl\", hash = \"sha256:f91b87e1689f0370690e8470916fe1b2308e5b2061317ff76977c8f836452a47\"},\n    {file = \"scipy-1.16.0-cp313-cp313t-macosx_12_0_arm64.whl\", hash = \"sha256:88a6ca658fb94640079e7a50b2ad3b67e33ef0f40e70bdb7dc22017dae73ac08\"},\n    {file = \"scipy-1.16.0-cp313-cp313t-macosx_14_0_arm64.whl\", hash = \"sha256:ae902626972f1bd7e4e86f58fd72322d7f4ec7b0cfc17b15d4b7006efc385176\"},\n    {file = \"scipy-1.16.0-cp313-cp313t-macosx_14_0_x86_64.whl\", hash = \"sha256:8cb824c1fc75ef29893bc32b3ddd7b11cf9ab13c1127fe26413a05953b8c32ed\"},\n    {file = \"scipy-1.16.0-cp313-cp313t-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:de2db7250ff6514366a9709c2cba35cb6d08498e961cba20d7cff98a7ee88938\"},\n    {file = \"scipy-1.16.0-cp313-cp313t-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:e85800274edf4db8dd2e4e93034f92d1b05c9421220e7ded9988b16976f849c1\"},\n    {file = \"scipy-1.16.0-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:4f720300a3024c237ace1cb11f9a84c38beb19616ba7c4cdcd771047a10a1706\"},\n    {file = \"scipy-1.16.0-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:aad603e9339ddb676409b104c48a027e9916ce0d2838830691f39552b38a352e\"},\n    {file = \"scipy-1.16.0-cp313-cp313t-win_amd64.whl\", hash = \"sha256:f56296fefca67ba605fd74d12f7bd23636267731a72cb3947963e76b8c0a25db\"},\n    {file = \"scipy-1.16.0.tar.gz\", hash = \"sha256:b5ef54021e832869c8cfb03bc3bf20366cbcd426e02a58e8a58d7584dfbb8f62\"},\n]\n\n[package.dependencies]\nnumpy = \">=1.25.2,<2.6\"\n\n[package.extras]\ndev = [\"cython-lint (>=0.12.2)\", \"doit (>=0.36.0)\", \"mypy (==1.10.0)\", \"pycodestyle\", \"pydevtool\", \"rich-click\", \"ruff (>=0.0.292)\", \"types-psutil\", \"typing_extensions\"]\ndoc = [\"intersphinx_registry\", \"jupyterlite-pyodide-kernel\", \"jupyterlite-sphinx (>=0.19.1)\", \"jupytext\", \"linkify-it-py\", \"matplotlib (>=3.5)\", \"myst-nb (>=1.2.0)\", \"numpydoc\", \"pooch\", \"pydata-sphinx-theme (>=0.15.2)\", \"sphinx (>=5.0.0,<8.2.0)\", \"sphinx-copybutton\", \"sphinx-design (>=0.4.0)\"]\ntest = [\"Cython\", \"array-api-strict (>=2.3.1)\", \"asv\", \"gmpy2\", \"hypothesis (>=6.30)\", \"meson\", \"mpmath\", \"ninja\", \"pooch\", \"pytest\", \"pytest-cov\", \"pytest-timeout\", \"pytest-xdist\", \"scikit-umfpack\", \"threadpoolctl\"]\n\n[[package]]\nname = \"scs\"\nversion = \"3.2.7.post2\"\ndescription = \"Splitting conic solver\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"scs-3.2.7.post2-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:b7271ff566ac9df929c8cf7d1b024b89c3882b541c21a7a6d9aa94480822bccb\"},\n    {file = \"scs-3.2.7.post2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:eb2997f53ef3426934599517c6e0e77f4f05cc23c3aa2380fd176c7fd22bc0c8\"},\n    {file = \"scs-3.2.7.post2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bd8307b7302f8105148478a5723a2f7d5a3cbf86ef3cc6f27567203addfa3b10\"},\n    {file = \"scs-3.2.7.post2-cp310-cp310-manylinux_2_28_aarch64.whl\", hash = \"sha256:f34cc43c9eb1092423b55f01430ad99b4e5825a6595ead8e081f985032685e8c\"},\n    {file = \"scs-3.2.7.post2-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:f645f3789bc4659de2a468c2e4db552f6656bcb286e81f3cb42d5a607028627b\"},\n    {file = \"scs-3.2.7.post2-cp310-cp310-win_amd64.whl\", hash = \"sha256:e5f90940c383b68dd7960b734105cd1dd6c11c80275321de3a6388f563a1ff19\"},\n    {file = \"scs-3.2.7.post2-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:6d551b90d9e2c0497ee17d8c3db325d6fcefa4419057954e68709da8b9184d4f\"},\n    {file = \"scs-3.2.7.post2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:7c15d035dda04a6626d3cd9b68d3bf814d2e0eb3cb372021775bd358fd8c7405\"},\n    {file = \"scs-3.2.7.post2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6da6add18f039e7e08f0ebc13cb1f853ec4c96ae81d7a578f46e0f9f0e5bf4b5\"},\n    {file = \"scs-3.2.7.post2-cp311-cp311-manylinux_2_28_aarch64.whl\", hash = \"sha256:d6c965f026e56c92b59a9c96744eb90178982c270ab196f58a0260ac392785aa\"},\n    {file = \"scs-3.2.7.post2-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:0427a5bf9aa43eb2a22083e1a43412db5054a88d695fdaa6018cd6fb3a9f0203\"},\n    {file = \"scs-3.2.7.post2-cp311-cp311-win_amd64.whl\", hash = \"sha256:4d05ec092c891eb842630f343ebc0c46d2ef6047f325a835771b13f9804d6b3b\"},\n    {file = \"scs-3.2.7.post2-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:99e4af2968b046ee55fa0dc89dcd3bfba771f1027d9224cb6efa10008d8bfee1\"},\n    {file = \"scs-3.2.7.post2-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:bc46fef9743d4629337382f034fda92dfce338659e8377afae674517b7d8345f\"},\n    {file = \"scs-3.2.7.post2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f92e925d89004276a449850926a45536f75c03cab701b5e758b1a7efa119ba08\"},\n    {file = \"scs-3.2.7.post2-cp312-cp312-manylinux_2_28_aarch64.whl\", hash = \"sha256:640faf61f85b933fdfc3d33d7ce4f0049b082b245e82d2d6a8c2c54aa0b7f540\"},\n    {file = \"scs-3.2.7.post2-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:a520c9bef84eee734df0da3e5e06aa9192d3be34cd5e6d4221cc01f4d09b20c0\"},\n    {file = \"scs-3.2.7.post2-cp312-cp312-win_amd64.whl\", hash = \"sha256:2995d4099943c3fd754b3e39fe178a9c03dcb9c7d84b40f64ac5eb26d8d6085a\"},\n    {file = \"scs-3.2.7.post2-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:aaa3753e82250913e17c792e7ca7eb0bde03ac41200923f3dfd3f6bd5ec6f308\"},\n    {file = \"scs-3.2.7.post2-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:08e9c20b482c03f292b3da7ce4cbddb2697508ffd747304564868e87da7cb4b2\"},\n    {file = \"scs-3.2.7.post2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:56af9310bd2d000c45d7829e2935b5445480ea6bcc6091c58d4e3ab2a94125be\"},\n    {file = \"scs-3.2.7.post2-cp313-cp313-manylinux_2_28_aarch64.whl\", hash = \"sha256:ec6e7bdb18d4b84c7f56f94db445ec0c43deec5aa659201467aa85b2f64b8123\"},\n    {file = \"scs-3.2.7.post2-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:91316903b2ea625990abe18bb92e8ce63536e5eafb9623ecf1cb199fb05ea574\"},\n    {file = \"scs-3.2.7.post2-cp313-cp313-win_amd64.whl\", hash = \"sha256:a2c48cd19e39bf87dae0b20a289fff44930458fc2ca2afa0f899058dc41e5545\"},\n    {file = \"scs-3.2.7.post2-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:1efca4a10fca530b22ded7bdbca004059e047e2c97a5023d5b7d5146897a7d8a\"},\n    {file = \"scs-3.2.7.post2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:604abfabdfd4a14389144791b43e1ee22507ad1d0bde27a52908166f64f1ab96\"},\n    {file = \"scs-3.2.7.post2-cp37-cp37m-manylinux_2_28_aarch64.whl\", hash = \"sha256:d17f6258d58a430acef79aa4f004e6ded323724443baed05eaa73fc4cfa40c27\"},\n    {file = \"scs-3.2.7.post2-cp37-cp37m-win_amd64.whl\", hash = \"sha256:de11c855577eb6f695ba93088d47c348858e7c34812139a3c532ebb36bd2d81d\"},\n    {file = \"scs-3.2.7.post2-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:900ccd6040f635ef6869779d70ba7260a73a0b8bcc9eb3e5eac55f54d6611044\"},\n    {file = \"scs-3.2.7.post2-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:c4fd9b7bd328d1d432d4fbb86054982a1e5c2aa589394c8257bd5f67ae84ea51\"},\n    {file = \"scs-3.2.7.post2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:746a3ee4f9307a000c6599c6e3067a0a377f3902c36e6a7c7ea01ee040b06f54\"},\n    {file = \"scs-3.2.7.post2-cp38-cp38-manylinux_2_28_aarch64.whl\", hash = \"sha256:b5f974c29c40eab2bf12b273c00daa7cc8011a2628c5397e3c61ac6b32ab9485\"},\n    {file = \"scs-3.2.7.post2-cp38-cp38-win_amd64.whl\", hash = \"sha256:05da761821a14b8ebe54427510cbe10722b3433db4e953acd7a067893e955781\"},\n    {file = \"scs-3.2.7.post2-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:ed80e841680d62a3c3b4e5757852f88df19ca6ef85bd61f7abaefb64994cfd04\"},\n    {file = \"scs-3.2.7.post2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:93de54f8acf83d224e007babfa410823838b28dc4a2d2c964396b52e13b78c61\"},\n    {file = \"scs-3.2.7.post2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3562d84b6187959f9c7bcf2ad254e82a6674593729c4d85917d2f8536f89f2b2\"},\n    {file = \"scs-3.2.7.post2-cp39-cp39-manylinux_2_28_aarch64.whl\", hash = \"sha256:f9d523d91904e2fba13ae0348789badd3270bba329208126d5457869e0180da2\"},\n    {file = \"scs-3.2.7.post2-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:4a30b9d9bdcdc823acfaf5b72b7689dd699e8ab80b9dfab529628e9b2c765266\"},\n    {file = \"scs-3.2.7.post2-cp39-cp39-win_amd64.whl\", hash = \"sha256:82422e7bc04300f6381afc4a6df2897e577cbe072daba29cd67856b28dba9718\"},\n    {file = \"scs-3.2.7.post2.tar.gz\", hash = \"sha256:4245a4f76328cc73911f20e1414df68d41ead4bcc4a187503a9cd639b644014b\"},\n]\n\n[package.dependencies]\nnumpy = \"*\"\nscipy = \"*\"\n\n[[package]]\nname = \"sentry-sdk\"\nversion = \"2.32.0\"\ndescription = \"Python client for Sentry (https://sentry.io)\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"sentry_sdk-2.32.0-py2.py3-none-any.whl\", hash = \"sha256:6cf51521b099562d7ce3606da928c473643abe99b00ce4cb5626ea735f4ec345\"},\n    {file = \"sentry_sdk-2.32.0.tar.gz\", hash = \"sha256:9016c75d9316b0f6921ac14c8cd4fb938f26002430ac5be9945ab280f78bec6b\"},\n]\n\n[package.dependencies]\ncertifi = \"*\"\nurllib3 = \">=1.26.11\"\n\n[package.extras]\naiohttp = [\"aiohttp (>=3.5)\"]\nanthropic = [\"anthropic (>=0.16)\"]\narq = [\"arq (>=0.23)\"]\nasyncpg = [\"asyncpg (>=0.23)\"]\nbeam = [\"apache-beam (>=2.12)\"]\nbottle = [\"bottle (>=0.12.13)\"]\ncelery = [\"celery (>=3)\"]\ncelery-redbeat = [\"celery-redbeat (>=2)\"]\nchalice = [\"chalice (>=1.16.0)\"]\nclickhouse-driver = [\"clickhouse-driver (>=0.2.0)\"]\ndjango = [\"django (>=1.8)\"]\nfalcon = [\"falcon (>=1.4)\"]\nfastapi = [\"fastapi (>=0.79.0)\"]\nflask = [\"blinker (>=1.1)\", \"flask (>=0.11)\", \"markupsafe\"]\ngrpcio = [\"grpcio (>=1.21.1)\", \"protobuf (>=3.8.0)\"]\nhttp2 = [\"httpcore[http2] (==1.*)\"]\nhttpx = [\"httpx (>=0.16.0)\"]\nhuey = [\"huey (>=2)\"]\nhuggingface-hub = [\"huggingface_hub (>=0.22)\"]\nlangchain = [\"langchain (>=0.0.210)\"]\nlaunchdarkly = [\"launchdarkly-server-sdk (>=9.8.0)\"]\nlitestar = [\"litestar (>=2.0.0)\"]\nloguru = [\"loguru (>=0.5)\"]\nopenai = [\"openai (>=1.0.0)\", \"tiktoken (>=0.3.0)\"]\nopenfeature = [\"openfeature-sdk (>=0.7.1)\"]\nopentelemetry = [\"opentelemetry-distro (>=0.35b0)\"]\nopentelemetry-experimental = [\"opentelemetry-distro\"]\npure-eval = [\"asttokens\", \"executing\", \"pure_eval\"]\npymongo = [\"pymongo (>=3.1)\"]\npyspark = [\"pyspark (>=2.4.4)\"]\nquart = [\"blinker (>=1.1)\", \"quart (>=0.16.1)\"]\nrq = [\"rq (>=0.6)\"]\nsanic = [\"sanic (>=0.8)\"]\nsqlalchemy = [\"sqlalchemy (>=1.2)\"]\nstarlette = [\"starlette (>=0.19.1)\"]\nstarlite = [\"starlite (>=1.48)\"]\nstatsig = [\"statsig (>=0.55.3)\"]\ntornado = [\"tornado (>=6)\"]\nunleash = [\"UnleashClient (>=6.0.1)\"]\n\n[[package]]\nname = \"setproctitle\"\nversion = \"1.3.6\"\ndescription = \"A Python module to customize the process title\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"setproctitle-1.3.6-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:ebcf34b69df4ca0eabaaaf4a3d890f637f355fed00ba806f7ebdd2d040658c26\"},\n    {file = \"setproctitle-1.3.6-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:1aa1935aa2195b76f377e5cb018290376b7bf085f0b53f5a95c0c21011b74367\"},\n    {file = \"setproctitle-1.3.6-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:13624d9925bb481bc0ccfbc7f533da38bfbfe6e80652314f789abc78c2e513bd\"},\n    {file = \"setproctitle-1.3.6-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:97a138fa875c6f281df7720dac742259e85518135cd0e3551aba1c628103d853\"},\n    {file = \"setproctitle-1.3.6-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c86e9e82bfab579327dbe9b82c71475165fbc8b2134d24f9a3b2edaf200a5c3d\"},\n    {file = \"setproctitle-1.3.6-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6af330ddc2ec05a99c3933ab3cba9365357c0b8470a7f2fa054ee4b0984f57d1\"},\n    {file = \"setproctitle-1.3.6-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:109fc07b1cd6cef9c245b2028e3e98e038283342b220def311d0239179810dbe\"},\n    {file = \"setproctitle-1.3.6-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:7df5fcc48588f82b6cc8073db069609ddd48a49b1e9734a20d0efb32464753c4\"},\n    {file = \"setproctitle-1.3.6-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:2407955dc359d735a20ac6e797ad160feb33d529a2ac50695c11a1ec680eafab\"},\n    {file = \"setproctitle-1.3.6-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:38ca045626af693da042ac35d7332e7b9dbd52e6351d6973b310612e3acee6d6\"},\n    {file = \"setproctitle-1.3.6-cp310-cp310-win32.whl\", hash = \"sha256:9483aa336687463f5497dd37a070094f3dff55e2c888994f8440fcf426a1a844\"},\n    {file = \"setproctitle-1.3.6-cp310-cp310-win_amd64.whl\", hash = \"sha256:4efc91b437f6ff2578e89e3f17d010c0a0ff01736606473d082913ecaf7859ba\"},\n    {file = \"setproctitle-1.3.6-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:a1d856b0f4e4a33e31cdab5f50d0a14998f3a2d726a3fd5cb7c4d45a57b28d1b\"},\n    {file = \"setproctitle-1.3.6-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:50706b9c0eda55f7de18695bfeead5f28b58aa42fd5219b3b1692d554ecbc9ec\"},\n    {file = \"setproctitle-1.3.6-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:af188f3305f0a65c3217c30c6d4c06891e79144076a91e8b454f14256acc7279\"},\n    {file = \"setproctitle-1.3.6-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:cce0ed8b3f64c71c140f0ec244e5fdf8ecf78ddf8d2e591d4a8b6aa1c1214235\"},\n    {file = \"setproctitle-1.3.6-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:70100e2087fe05359f249a0b5f393127b3a1819bf34dec3a3e0d4941138650c9\"},\n    {file = \"setproctitle-1.3.6-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1065ed36bd03a3fd4186d6c6de5f19846650b015789f72e2dea2d77be99bdca1\"},\n    {file = \"setproctitle-1.3.6-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:4adf6a0013fe4e0844e3ba7583ec203ca518b9394c6cc0d3354df2bf31d1c034\"},\n    {file = \"setproctitle-1.3.6-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:eb7452849f6615871eabed6560ffedfe56bc8af31a823b6be4ce1e6ff0ab72c5\"},\n    {file = \"setproctitle-1.3.6-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:a094b7ce455ca341b59a0f6ce6be2e11411ba6e2860b9aa3dbb37468f23338f4\"},\n    {file = \"setproctitle-1.3.6-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:ad1c2c2baaba62823a7f348f469a967ece0062140ca39e7a48e4bbb1f20d54c4\"},\n    {file = \"setproctitle-1.3.6-cp311-cp311-win32.whl\", hash = \"sha256:8050c01331135f77ec99d99307bfbc6519ea24d2f92964b06f3222a804a3ff1f\"},\n    {file = \"setproctitle-1.3.6-cp311-cp311-win_amd64.whl\", hash = \"sha256:9b73cf0fe28009a04a35bb2522e4c5b5176cc148919431dcb73fdbdfaab15781\"},\n    {file = \"setproctitle-1.3.6-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:af44bb7a1af163806bbb679eb8432fa7b4fb6d83a5d403b541b675dcd3798638\"},\n    {file = \"setproctitle-1.3.6-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:3cca16fd055316a48f0debfcbfb6af7cea715429fc31515ab3fcac05abd527d8\"},\n    {file = \"setproctitle-1.3.6-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ea002088d5554fd75e619742cefc78b84a212ba21632e59931b3501f0cfc8f67\"},\n    {file = \"setproctitle-1.3.6-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:bb465dd5825356c1191a038a86ee1b8166e3562d6e8add95eec04ab484cfb8a2\"},\n    {file = \"setproctitle-1.3.6-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d2c8e20487b3b73c1fa72c56f5c89430617296cd380373e7af3a538a82d4cd6d\"},\n    {file = \"setproctitle-1.3.6-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a0d6252098e98129a1decb59b46920d4eca17b0395f3d71b0d327d086fefe77d\"},\n    {file = \"setproctitle-1.3.6-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:cf355fbf0d4275d86f9f57be705d8e5eaa7f8ddb12b24ced2ea6cbd68fdb14dc\"},\n    {file = \"setproctitle-1.3.6-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:e288f8a162d663916060beb5e8165a8551312b08efee9cf68302687471a6545d\"},\n    {file = \"setproctitle-1.3.6-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:b2e54f4a2dc6edf0f5ea5b1d0a608d2af3dcb5aa8c8eeab9c8841b23e1b054fe\"},\n    {file = \"setproctitle-1.3.6-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:b6f4abde9a2946f57e8daaf1160b2351bcf64274ef539e6675c1d945dbd75e2a\"},\n    {file = \"setproctitle-1.3.6-cp312-cp312-win32.whl\", hash = \"sha256:db608db98ccc21248370d30044a60843b3f0f3d34781ceeea67067c508cd5a28\"},\n    {file = \"setproctitle-1.3.6-cp312-cp312-win_amd64.whl\", hash = \"sha256:082413db8a96b1f021088e8ec23f0a61fec352e649aba20881895815388b66d3\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:e2a9e62647dc040a76d55563580bf3bb8fe1f5b6ead08447c2ed0d7786e5e794\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:751ba352ed922e0af60458e961167fa7b732ac31c0ddd1476a2dfd30ab5958c5\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7890e291bf4708e3b61db9069ea39b3ab0651e42923a5e1f4d78a7b9e4b18301\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b2b17855ed7f994f3f259cf2dfbfad78814538536fa1a91b50253d84d87fd88d\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:2e51ec673513465663008ce402171192a053564865c2fc6dc840620871a9bd7c\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:63cc10352dc6cf35a33951656aa660d99f25f574eb78132ce41a85001a638aa7\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:0dba8faee2e4a96e934797c9f0f2d093f8239bf210406a99060b3eabe549628e\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:e3e44d08b61de0dd6f205528498f834a51a5c06689f8fb182fe26f3a3ce7dca9\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:de004939fc3fd0c1200d26ea9264350bfe501ffbf46c8cf5dc7f345f2d87a7f1\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:3f8194b4d631b003a1176a75d1acd545e04b1f54b821638e098a93e6e62830ef\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313-win32.whl\", hash = \"sha256:d714e002dd3638170fe7376dc1b686dbac9cb712cde3f7224440af722cc9866a\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313-win_amd64.whl\", hash = \"sha256:b70c07409d465f3a8b34d52f863871fb8a00755370791d2bd1d4f82b3cdaf3d5\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313t-macosx_10_13_universal2.whl\", hash = \"sha256:23a57d3b8f1549515c2dbe4a2880ebc1f27780dc126c5e064167563e015817f5\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:81c443310831e29fabbd07b75ebbfa29d0740b56f5907c6af218482d51260431\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d88c63bd395c787b0aa81d8bbc22c1809f311032ce3e823a6517b711129818e4\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313t-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d73f14b86d0e2858ece6bf5807c9889670e392c001d414b4293d0d9b291942c3\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3393859eb8f19f5804049a685bf286cb08d447e28ba5c6d8543c7bf5500d5970\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313t-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:785cd210c0311d9be28a70e281a914486d62bfd44ac926fcd70cf0b4d65dff1c\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:c051f46ed1e13ba8214b334cbf21902102807582fbfaf0fef341b9e52f0fafbf\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:49498ebf68ca3e75321ffe634fcea5cc720502bfaa79bd6b03ded92ce0dc3c24\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313t-musllinux_1_2_ppc64le.whl\", hash = \"sha256:4431629c178193f23c538cb1de3da285a99ccc86b20ee91d81eb5f1a80e0d2ba\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:d136fbf8ad4321716e44d6d6b3d8dffb4872626010884e07a1db54b7450836cf\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313t-win32.whl\", hash = \"sha256:d483cc23cc56ab32911ea0baa0d2d9ea7aa065987f47de847a0a93a58bf57905\"},\n    {file = \"setproctitle-1.3.6-cp313-cp313t-win_amd64.whl\", hash = \"sha256:74973aebea3543ad033b9103db30579ec2b950a466e09f9c2180089e8346e0ec\"},\n    {file = \"setproctitle-1.3.6-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:3884002b3a9086f3018a32ab5d4e1e8214dd70695004e27b1a45c25a6243ad0b\"},\n    {file = \"setproctitle-1.3.6-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:6a1d3aa13acfe81f355b0ce4968facc7a19b0d17223a0f80c011a1dba8388f37\"},\n    {file = \"setproctitle-1.3.6-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f24d5b9383318cbd1a5cd969377937d66cf0542f24aa728a4f49d9f98f9c0da8\"},\n    {file = \"setproctitle-1.3.6-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:a4ae2ea9afcfdd2b931ddcebf1cf82532162677e00326637b31ed5dff7d985ca\"},\n    {file = \"setproctitle-1.3.6-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:805bb33e92fc3d8aa05674db3068d14d36718e3f2c5c79b09807203f229bf4b5\"},\n    {file = \"setproctitle-1.3.6-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c1b20a5f4164cec7007be55c9cf18d2cd08ed7c3bf6769b3cd6d044ad888d74b\"},\n    {file = \"setproctitle-1.3.6-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:793a23e8d9cb6c231aa3023d700008224c6ec5b8fd622d50f3c51665e3d0a190\"},\n    {file = \"setproctitle-1.3.6-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:57bc54763bf741813a99fbde91f6be138c8706148b7b42d3752deec46545d470\"},\n    {file = \"setproctitle-1.3.6-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:b0174ca6f3018ddeaa49847f29b69612e590534c1d2186d54ab25161ecc42975\"},\n    {file = \"setproctitle-1.3.6-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:807796fe301b7ed76cf100113cc008c119daf4fea2f9f43c578002aef70c3ebf\"},\n    {file = \"setproctitle-1.3.6-cp38-cp38-win32.whl\", hash = \"sha256:5313a4e9380e46ca0e2c681ba739296f9e7c899e6f4d12a6702b2dc9fb846a31\"},\n    {file = \"setproctitle-1.3.6-cp38-cp38-win_amd64.whl\", hash = \"sha256:d5a6c4864bb6fa9fcf7b57a830d21aed69fd71742a5ebcdbafda476be673d212\"},\n    {file = \"setproctitle-1.3.6-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:391bb6a29c4fe7ccc9c30812e3744060802d89b39264cfa77f3d280d7f387ea5\"},\n    {file = \"setproctitle-1.3.6-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:156795b3db976611d09252fc80761fcdb65bb7c9b9581148da900851af25ecf4\"},\n    {file = \"setproctitle-1.3.6-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:cdd7315314b0744a7dd506f3bd0f2cf90734181529cdcf75542ee35ad885cab7\"},\n    {file = \"setproctitle-1.3.6-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:6d50bfcc1d1692dc55165b3dd2f0b9f8fb5b1f7b571a93e08d660ad54b9ca1a5\"},\n    {file = \"setproctitle-1.3.6-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:163dba68f979c61e4e2e779c4d643e968973bdae7c33c3ec4d1869f7a9ba8390\"},\n    {file = \"setproctitle-1.3.6-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9d5a369eb7ec5b2fdfa9927530b5259dd21893fa75d4e04a223332f61b84b586\"},\n    {file = \"setproctitle-1.3.6-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:18d0667bafaaae4c1dee831e2e59841c411ff399b9b4766822ba2685d419c3be\"},\n    {file = \"setproctitle-1.3.6-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:f33fbf96b52d51c23b6cff61f57816539c1c147db270cfc1cc3bc012f4a560a9\"},\n    {file = \"setproctitle-1.3.6-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:543f59601a4e32daf44741b52f9a23e0ee374f9f13b39c41d917302d98fdd7b0\"},\n    {file = \"setproctitle-1.3.6-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:2156d55308431ac3b3ec4e5e05b1726d11a5215352d6a22bb933171dee292f8c\"},\n    {file = \"setproctitle-1.3.6-cp39-cp39-win32.whl\", hash = \"sha256:17d7c833ed6545ada5ac4bb606b86a28f13a04431953d4beac29d3773aa00b1d\"},\n    {file = \"setproctitle-1.3.6-cp39-cp39-win_amd64.whl\", hash = \"sha256:2940cf13f4fc11ce69ad2ed37a9f22386bfed314b98d8aebfd4f55459aa59108\"},\n    {file = \"setproctitle-1.3.6-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:3cde5b83ec4915cd5e6ae271937fd60d14113c8f7769b4a20d51769fe70d8717\"},\n    {file = \"setproctitle-1.3.6-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:797f2846b546a8741413c57d9fb930ad5aa939d925c9c0fa6186d77580035af7\"},\n    {file = \"setproctitle-1.3.6-pp310-pypy310_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4ac3eb04bcf0119aadc6235a2c162bae5ed5f740e3d42273a7228b915722de20\"},\n    {file = \"setproctitle-1.3.6-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:0e6b5633c94c5111f7137f875e8f1ff48f53b991d5d5b90932f27dc8c1fa9ae4\"},\n    {file = \"setproctitle-1.3.6-pp38-pypy38_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:ded9e86397267732a0641d4776c7c663ea16b64d7dbc4d9cc6ad8536363a2d29\"},\n    {file = \"setproctitle-1.3.6-pp38-pypy38_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ae82507fe458f7c0c8227017f2158111a4c9e7ce94de05178894a7ea9fefc8a1\"},\n    {file = \"setproctitle-1.3.6-pp38-pypy38_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3fc97805f9d74444b027babff710bf39df1541437a6a585a983d090ae00cedde\"},\n    {file = \"setproctitle-1.3.6-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:83066ffbf77a5f82b7e96e59bdccbdda203c8dccbfc3f9f0fdad3a08d0001d9c\"},\n    {file = \"setproctitle-1.3.6-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:9b50700785eccac0819bea794d968ed8f6055c88f29364776b7ea076ac105c5d\"},\n    {file = \"setproctitle-1.3.6-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:92df0e70b884f5da35f2e01489dca3c06a79962fb75636985f1e3a17aec66833\"},\n    {file = \"setproctitle-1.3.6-pp39-pypy39_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8834ab7be6539f1bfadec7c8d12249bbbe6c2413b1d40ffc0ec408692232a0c6\"},\n    {file = \"setproctitle-1.3.6-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:a5963b663da69ad25fa1559ee064584935570def665917918938c1f1289f5ebc\"},\n    {file = \"setproctitle-1.3.6.tar.gz\", hash = \"sha256:c9f32b96c700bb384f33f7cf07954bb609d35dd82752cef57fb2ee0968409169\"},\n]\n\n[package.extras]\ntest = [\"pytest\"]\n\n[[package]]\nname = \"setuptools\"\nversion = \"80.9.0\"\ndescription = \"Easily download, build, install, upgrade, and uninstall Python packages\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"setuptools-80.9.0-py3-none-any.whl\", hash = \"sha256:062d34222ad13e0cc312a4c02d73f059e86a4acbfbdea8f8f76b28c99f306922\"},\n    {file = \"setuptools-80.9.0.tar.gz\", hash = \"sha256:f36b47402ecde768dbfafc46e8e4207b4360c654f1f3bb84475f0a28628fb19c\"},\n]\n\n[package.extras]\ncheck = [\"pytest-checkdocs (>=2.4)\", \"pytest-ruff (>=0.2.1)\", \"ruff (>=0.8.0)\"]\ncore = [\"importlib_metadata (>=6)\", \"jaraco.functools (>=4)\", \"jaraco.text (>=3.7)\", \"more_itertools\", \"more_itertools (>=8.8)\", \"packaging (>=24.2)\", \"platformdirs (>=4.2.2)\", \"tomli (>=2.0.1)\", \"wheel (>=0.43.0)\"]\ncover = [\"pytest-cov\"]\ndoc = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"pygments-github-lexers (==0.0.5)\", \"pyproject-hooks (!=1.1)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-favicon\", \"sphinx-inline-tabs\", \"sphinx-lint\", \"sphinx-notfound-page (>=1,<2)\", \"sphinx-reredirects\", \"sphinxcontrib-towncrier\", \"towncrier (<24.7)\"]\nenabler = [\"pytest-enabler (>=2.2)\"]\ntest = [\"build[virtualenv] (>=1.0.3)\", \"filelock (>=3.4.0)\", \"ini2toml[lite] (>=0.14)\", \"jaraco.develop (>=7.21)\", \"jaraco.envs (>=2.2)\", \"jaraco.path (>=3.7.2)\", \"jaraco.test (>=5.5)\", \"packaging (>=24.2)\", \"pip (>=19.1)\", \"pyproject-hooks (!=1.1)\", \"pytest (>=6,!=8.1.*)\", \"pytest-home (>=0.5)\", \"pytest-perf\", \"pytest-subprocess\", \"pytest-timeout\", \"pytest-xdist (>=3)\", \"tomli-w (>=1.0.0)\", \"virtualenv (>=13.0.0)\", \"wheel (>=0.44.0)\"]\ntype = [\"importlib_metadata (>=7.0.2)\", \"jaraco.develop (>=7.21)\", \"mypy (==1.14.*)\", \"pytest-mypy\"]\n\n[[package]]\nname = \"six\"\nversion = \"1.17.0\"\ndescription = \"Python 2 and 3 compatibility utilities\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,>=2.7\"\nfiles = [\n    {file = \"six-1.17.0-py2.py3-none-any.whl\", hash = \"sha256:4721f391ed90541fddacab5acf947aa0d3dc7d27b2e1e8eda2be8970586c3274\"},\n    {file = \"six-1.17.0.tar.gz\", hash = \"sha256:ff70335d468e7eb6ec65b95b99d3a2836546063f63acc5171de367e834932a81\"},\n]\n\n[[package]]\nname = \"smmap\"\nversion = \"5.0.2\"\ndescription = \"A pure Python implementation of a sliding window memory map manager\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"smmap-5.0.2-py3-none-any.whl\", hash = \"sha256:b30115f0def7d7531d22a0fb6502488d879e75b260a9db4d0819cfb25403af5e\"},\n    {file = \"smmap-5.0.2.tar.gz\", hash = \"sha256:26ea65a03958fa0c8a1c7e8c7a58fdc77221b8910f6be2131affade476898ad5\"},\n]\n\n[[package]]\nname = \"sympy\"\nversion = \"1.14.0\"\ndescription = \"Computer algebra system (CAS) in Python\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"sympy-1.14.0-py3-none-any.whl\", hash = \"sha256:e091cc3e99d2141a0ba2847328f5479b05d94a6635cb96148ccb3f34671bd8f5\"},\n    {file = \"sympy-1.14.0.tar.gz\", hash = \"sha256:d3d3fe8df1e5a0b42f0e7bdf50541697dbe7d23746e894990c030e2b05e72517\"},\n]\n\n[package.dependencies]\nmpmath = \">=1.1.0,<1.4\"\n\n[package.extras]\ndev = [\"hypothesis (>=6.70.0)\", \"pytest (>=7.1.0)\"]\n\n[[package]]\nname = \"tbb\"\nversion = \"2021.13.1\"\ndescription = \"Intel® oneAPI Threading Building Blocks (oneTBB)\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"tbb-2021.13.1-py2.py3-none-manylinux1_i686.whl\", hash = \"sha256:bb5bdea0c0e9e6ad0739e7a8796c2635ce9eccca86dd48c426cd8027ac70fb1d\"},\n    {file = \"tbb-2021.13.1-py2.py3-none-manylinux1_x86_64.whl\", hash = \"sha256:d916359dc685579d09e4b344241550afc1cc034f7f5ec7234c258b6680912d70\"},\n    {file = \"tbb-2021.13.1-py3-none-win32.whl\", hash = \"sha256:00f5e5a70051650ddd0ab6247c0549521968339ec21002e475cd23b1cbf46d66\"},\n    {file = \"tbb-2021.13.1-py3-none-win_amd64.whl\", hash = \"sha256:cbf024b2463fdab3ebe3fa6ff453026358e6b903839c80d647e08ad6d0796ee9\"},\n]\n\n[[package]]\nname = \"threadpoolctl\"\nversion = \"3.6.0\"\ndescription = \"threadpoolctl\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"threadpoolctl-3.6.0-py3-none-any.whl\", hash = \"sha256:43a0b8fd5a2928500110039e43a5eed8480b918967083ea48dc3ab9f13c4a7fb\"},\n    {file = \"threadpoolctl-3.6.0.tar.gz\", hash = \"sha256:8ab8b4aa3491d812b623328249fab5302a68d2d71745c8a4c719a2fcaba9f44e\"},\n]\n\n[[package]]\nname = \"toolz\"\nversion = \"1.0.0\"\ndescription = \"List processing tools and functional utilities\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"toolz-1.0.0-py3-none-any.whl\", hash = \"sha256:292c8f1c4e7516bf9086f8850935c799a874039c8bcf959d47b600e4c44a6236\"},\n    {file = \"toolz-1.0.0.tar.gz\", hash = \"sha256:2c86e3d9a04798ac556793bced838816296a2f085017664e4995cb40a1047a02\"},\n]\n\n[[package]]\nname = \"torch\"\nversion = \"2.3.1\"\ndescription = \"Tensors and Dynamic neural networks in Python with strong GPU acceleration\"\noptional = false\npython-versions = \">=3.8.0\"\nfiles = [\n    {file = \"torch-2.3.1-cp310-cp310-manylinux1_x86_64.whl\", hash = \"sha256:605a25b23944be5ab7c3467e843580e1d888b8066e5aaf17ff7bf9cc30001cc3\"},\n    {file = \"torch-2.3.1-cp310-cp310-manylinux2014_aarch64.whl\", hash = \"sha256:f2357eb0965583a0954d6f9ad005bba0091f956aef879822274b1bcdb11bd308\"},\n    {file = \"torch-2.3.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:32b05fe0d1ada7f69c9f86c14ff69b0ef1957a5a54199bacba63d22d8fab720b\"},\n    {file = \"torch-2.3.1-cp310-none-macosx_11_0_arm64.whl\", hash = \"sha256:7c09a94362778428484bcf995f6004b04952106aee0ef45ff0b4bab484f5498d\"},\n    {file = \"torch-2.3.1-cp311-cp311-manylinux1_x86_64.whl\", hash = \"sha256:b2ec81b61bb094ea4a9dee1cd3f7b76a44555375719ad29f05c0ca8ef596ad39\"},\n    {file = \"torch-2.3.1-cp311-cp311-manylinux2014_aarch64.whl\", hash = \"sha256:490cc3d917d1fe0bd027057dfe9941dc1d6d8e3cae76140f5dd9a7e5bc7130ab\"},\n    {file = \"torch-2.3.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:5802530783bd465fe66c2df99123c9a54be06da118fbd785a25ab0a88123758a\"},\n    {file = \"torch-2.3.1-cp311-none-macosx_11_0_arm64.whl\", hash = \"sha256:a7dd4ed388ad1f3d502bf09453d5fe596c7b121de7e0cfaca1e2017782e9bbac\"},\n    {file = \"torch-2.3.1-cp312-cp312-manylinux1_x86_64.whl\", hash = \"sha256:a486c0b1976a118805fc7c9641d02df7afbb0c21e6b555d3bb985c9f9601b61a\"},\n    {file = \"torch-2.3.1-cp312-cp312-manylinux2014_aarch64.whl\", hash = \"sha256:224259821fe3e4c6f7edf1528e4fe4ac779c77addaa74215eb0b63a5c474d66c\"},\n    {file = \"torch-2.3.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:e5fdccbf6f1334b2203a61a0e03821d5845f1421defe311dabeae2fc8fbeac2d\"},\n    {file = \"torch-2.3.1-cp312-none-macosx_11_0_arm64.whl\", hash = \"sha256:3c333dc2ebc189561514eda06e81df22bf8fb64e2384746b2cb9f04f96d1d4c8\"},\n    {file = \"torch-2.3.1-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:07e9ba746832b8d069cacb45f312cadd8ad02b81ea527ec9766c0e7404bb3feb\"},\n    {file = \"torch-2.3.1-cp38-cp38-manylinux2014_aarch64.whl\", hash = \"sha256:462d1c07dbf6bb5d9d2f3316fee73a24f3d12cd8dacf681ad46ef6418f7f6626\"},\n    {file = \"torch-2.3.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:ff60bf7ce3de1d43ad3f6969983f321a31f0a45df3690921720bcad6a8596cc4\"},\n    {file = \"torch-2.3.1-cp38-none-macosx_11_0_arm64.whl\", hash = \"sha256:bee0bd33dc58aa8fc8a7527876e9b9a0e812ad08122054a5bff2ce5abf005b10\"},\n    {file = \"torch-2.3.1-cp39-cp39-manylinux1_x86_64.whl\", hash = \"sha256:aaa872abde9a3d4f91580f6396d54888620f4a0b92e3976a6034759df4b961ad\"},\n    {file = \"torch-2.3.1-cp39-cp39-manylinux2014_aarch64.whl\", hash = \"sha256:3d7a7f7ef21a7520510553dc3938b0c57c116a7daee20736a9e25cbc0e832bdc\"},\n    {file = \"torch-2.3.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:4777f6cefa0c2b5fa87223c213e7b6f417cf254a45e5829be4ccd1b2a4ee1011\"},\n    {file = \"torch-2.3.1-cp39-none-macosx_11_0_arm64.whl\", hash = \"sha256:2bb5af780c55be68fe100feb0528d2edebace1d55cb2e351de735809ba7391eb\"},\n]\n\n[package.dependencies]\nfilelock = \"*\"\nfsspec = \"*\"\njinja2 = \"*\"\nmkl = {version = \">=2021.1.1,<=2021.4.0\", markers = \"platform_system == \\\"Windows\\\"\"}\nnetworkx = \"*\"\nnvidia-cublas-cu12 = {version = \"12.1.3.1\", markers = \"platform_system == \\\"Linux\\\" and platform_machine == \\\"x86_64\\\"\"}\nnvidia-cuda-cupti-cu12 = {version = \"12.1.105\", markers = \"platform_system == \\\"Linux\\\" and platform_machine == \\\"x86_64\\\"\"}\nnvidia-cuda-nvrtc-cu12 = {version = \"12.1.105\", markers = \"platform_system == \\\"Linux\\\" and platform_machine == \\\"x86_64\\\"\"}\nnvidia-cuda-runtime-cu12 = {version = \"12.1.105\", markers = \"platform_system == \\\"Linux\\\" and platform_machine == \\\"x86_64\\\"\"}\nnvidia-cudnn-cu12 = {version = \"8.9.2.26\", markers = \"platform_system == \\\"Linux\\\" and platform_machine == \\\"x86_64\\\"\"}\nnvidia-cufft-cu12 = {version = \"11.0.2.54\", markers = \"platform_system == \\\"Linux\\\" and platform_machine == \\\"x86_64\\\"\"}\nnvidia-curand-cu12 = {version = \"10.3.2.106\", markers = \"platform_system == \\\"Linux\\\" and platform_machine == \\\"x86_64\\\"\"}\nnvidia-cusolver-cu12 = {version = \"11.4.5.107\", markers = \"platform_system == \\\"Linux\\\" and platform_machine == \\\"x86_64\\\"\"}\nnvidia-cusparse-cu12 = {version = \"12.1.0.106\", markers = \"platform_system == \\\"Linux\\\" and platform_machine == \\\"x86_64\\\"\"}\nnvidia-nccl-cu12 = {version = \"2.20.5\", markers = \"platform_system == \\\"Linux\\\" and platform_machine == \\\"x86_64\\\"\"}\nnvidia-nvtx-cu12 = {version = \"12.1.105\", markers = \"platform_system == \\\"Linux\\\" and platform_machine == \\\"x86_64\\\"\"}\nsympy = \"*\"\ntriton = {version = \"2.3.1\", markers = \"platform_system == \\\"Linux\\\" and platform_machine == \\\"x86_64\\\" and python_version < \\\"3.12\\\"\"}\ntyping-extensions = \">=4.8.0\"\n\n[package.extras]\nopt-einsum = [\"opt-einsum (>=3.3)\"]\noptree = [\"optree (>=0.9.1)\"]\n\n[[package]]\nname = \"torchmetrics\"\nversion = \"1.7.4\"\ndescription = \"PyTorch native Metrics\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"torchmetrics-1.7.4-py3-none-any.whl\", hash = \"sha256:9298ad0e893b0cf2956bee95b0f7eecdc65205ab84ddb4f6762eff157c240518\"},\n    {file = \"torchmetrics-1.7.4.tar.gz\", hash = \"sha256:506a1a5c7c304cd77ba323ca4b009e46b814fd2be9dcf0f4ccc2e5c0f5b4b0c1\"},\n]\n\n[package.dependencies]\nlightning-utilities = \">=0.8.0\"\nnumpy = \">1.20.0\"\npackaging = \">17.1\"\ntorch = \">=2.0.0\"\n\n[package.extras]\nall = [\"SciencePlots (>=2.0.0)\", \"einops (>=0.7.0)\", \"gammatone (>=1.0.0)\", \"ipadic (>=1.0.0)\", \"librosa (>=0.10.0)\", \"matplotlib (>=3.6.0)\", \"mecab-python3 (>=1.0.6)\", \"mypy (==1.16.1)\", \"nltk (>3.8.1)\", \"onnxruntime (>=1.12.0)\", \"pesq (>=0.0.4)\", \"piq (<=0.8.0)\", \"pycocotools (>2.0.0)\", \"pystoi (>=0.4.0)\", \"regex (>=2021.9.24)\", \"requests (>=2.19.0)\", \"scipy (>1.0.0)\", \"sentencepiece (>=0.2.0)\", \"timm (>=0.9.0)\", \"torch (==2.7.1)\", \"torch-fidelity (<=0.4.0)\", \"torch_linear_assignment (>=0.0.2)\", \"torchaudio (>=2.0.1)\", \"torchvision (>=0.15.1)\", \"torchvision (>=0.15.1)\", \"tqdm (<4.68.0)\", \"transformers (>=4.43.0)\", \"transformers (>=4.43.0)\", \"types-PyYAML\", \"types-emoji\", \"types-protobuf\", \"types-requests\", \"types-setuptools\", \"types-six\", \"types-tabulate\"]\naudio = [\"gammatone (>=1.0.0)\", \"librosa (>=0.10.0)\", \"onnxruntime (>=1.12.0)\", \"pesq (>=0.0.4)\", \"pystoi (>=0.4.0)\", \"requests (>=2.19.0)\", \"torchaudio (>=2.0.1)\"]\nclustering = [\"torch_linear_assignment (>=0.0.2)\"]\ndetection = [\"pycocotools (>2.0.0)\", \"torchvision (>=0.15.1)\"]\ndev = [\"PyTDC (==0.4.1)\", \"SciencePlots (>=2.0.0)\", \"aeon (>=1.0.0)\", \"bert_score (==0.3.13)\", \"dists-pytorch (==0.1)\", \"dython (==0.7.9)\", \"einops (>=0.7.0)\", \"fairlearn\", \"fast-bss-eval (>=0.1.0)\", \"faster-coco-eval (>=1.6.3)\", \"gammatone (>=1.0.0)\", \"huggingface-hub (<0.34)\", \"ipadic (>=1.0.0)\", \"jiwer (>=2.3.0)\", \"kornia (>=0.6.7)\", \"librosa (>=0.10.0)\", \"lpips (<=0.1.4)\", \"matplotlib (>=3.6.0)\", \"mecab-ko (>=1.0.0,<1.1.0)\", \"mecab-ko-dic (>=1.0.0)\", \"mecab-python3 (>=1.0.6)\", \"mir-eval (>=0.6)\", \"monai (==1.4.0)\", \"mypy (==1.16.1)\", \"netcal (>1.0.0)\", \"nltk (>3.8.1)\", \"numpy (<2.4.0)\", \"onnxruntime (>=1.12.0)\", \"pandas (>1.4.0)\", \"permetrics (==2.0.0)\", \"pesq (>=0.0.4)\", \"piq (<=0.8.0)\", \"pycocotools (>2.0.0)\", \"pystoi (>=0.4.0)\", \"pytorch-msssim (==1.0.0)\", \"regex (>=2021.9.24)\", \"requests (>=2.19.0)\", \"rouge-score (>0.1.0)\", \"sacrebleu (>=2.3.0)\", \"scikit-image (>=0.19.0)\", \"scipy (>1.0.0)\", \"scipy (>1.0.0)\", \"sentencepiece (>=0.2.0)\", \"sewar (>=0.4.4)\", \"statsmodels (>0.13.5)\", \"timm (>=0.9.0)\", \"torch (==2.7.1)\", \"torch-fidelity (<=0.4.0)\", \"torch_complex (<0.5.0)\", \"torch_linear_assignment (>=0.0.2)\", \"torchaudio (>=2.0.1)\", \"torchvision (>=0.15.1)\", \"torchvision (>=0.15.1)\", \"tqdm (<4.68.0)\", \"transformers (>=4.43.0)\", \"transformers (>=4.43.0)\", \"types-PyYAML\", \"types-emoji\", \"types-protobuf\", \"types-requests\", \"types-setuptools\", \"types-six\", \"types-tabulate\"]\nimage = [\"scipy (>1.0.0)\", \"torch-fidelity (<=0.4.0)\", \"torchvision (>=0.15.1)\"]\nmultimodal = [\"einops (>=0.7.0)\", \"piq (<=0.8.0)\", \"timm (>=0.9.0)\", \"transformers (>=4.43.0)\"]\ntext = [\"ipadic (>=1.0.0)\", \"mecab-python3 (>=1.0.6)\", \"nltk (>3.8.1)\", \"regex (>=2021.9.24)\", \"sentencepiece (>=0.2.0)\", \"tqdm (<4.68.0)\", \"transformers (>=4.43.0)\"]\ntyping = [\"mypy (==1.16.1)\", \"torch (==2.7.1)\", \"types-PyYAML\", \"types-emoji\", \"types-protobuf\", \"types-requests\", \"types-setuptools\", \"types-six\", \"types-tabulate\"]\nvisual = [\"SciencePlots (>=2.0.0)\", \"matplotlib (>=3.6.0)\"]\n\n[[package]]\nname = \"torchvision\"\nversion = \"0.18.1\"\ndescription = \"image and video datasets and models for torch deep learning\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"torchvision-0.18.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:3e694e54b0548dad99c12af6bf0c8e4f3350137d391dcd19af22a1c5f89322b3\"},\n    {file = \"torchvision-0.18.1-cp310-cp310-manylinux1_x86_64.whl\", hash = \"sha256:0b3bda0aa5b416eeb547143b8eeaf17720bdba9cf516dc991aacb81811aa96a5\"},\n    {file = \"torchvision-0.18.1-cp310-cp310-manylinux2014_aarch64.whl\", hash = \"sha256:573ff523c739405edb085f65cb592f482d28a30e29b0be4c4ba08040b3ae785f\"},\n    {file = \"torchvision-0.18.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:ef7bbbc60b38e831a75e547c66ca1784f2ac27100f9e4ddbe9614cef6cbcd942\"},\n    {file = \"torchvision-0.18.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:80b5d794dd0fdba787adc22f1a367a5ead452327686473cb260dd94364bc56a6\"},\n    {file = \"torchvision-0.18.1-cp311-cp311-manylinux1_x86_64.whl\", hash = \"sha256:9077cf590cdb3a5e8fdf5cdb71797f8c67713f974cf0228ecb17fcd670ab42f9\"},\n    {file = \"torchvision-0.18.1-cp311-cp311-manylinux2014_aarch64.whl\", hash = \"sha256:ceb993a882f1ae7ae373ed39c28d7e3e802205b0e59a7ed84ef4028f0bba8d7f\"},\n    {file = \"torchvision-0.18.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:52f7436140045dc2239cdc502aa76b2bd8bd676d64244ff154d304aa69852046\"},\n    {file = \"torchvision-0.18.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:2be6f0bf7c455c89a51a1dbb6f668d36c6edc479f49ac912d745d10df5715657\"},\n    {file = \"torchvision-0.18.1-cp312-cp312-manylinux1_x86_64.whl\", hash = \"sha256:f118d887bfde3a948a41d56587525401e5cac1b7db2eaca203324d6ed2b1caca\"},\n    {file = \"torchvision-0.18.1-cp312-cp312-manylinux2014_aarch64.whl\", hash = \"sha256:13d24d904f65e62d66a1e0c41faec630bc193867b8a4a01166769e8a8e8df8e9\"},\n    {file = \"torchvision-0.18.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:ed6340b69a63a625e512a66127210d412551d9c5f2ad2978130c6a45bf56cd4a\"},\n    {file = \"torchvision-0.18.1-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:b1c3864fa9378c88bce8ad0ef3599f4f25397897ce612e1c245c74b97092f35e\"},\n    {file = \"torchvision-0.18.1-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:02085a2ffc7461f5c0edb07d6f3455ee1806561f37736b903da820067eea58c7\"},\n    {file = \"torchvision-0.18.1-cp38-cp38-manylinux2014_aarch64.whl\", hash = \"sha256:9726c316a2501df8503e5a5dc46a631afd4c515a958972e5b7f7b9c87d2125c0\"},\n    {file = \"torchvision-0.18.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:64a2662dbf30db9055d8b201d6e56f312a504e5ccd9d144c57c41622d3c524cb\"},\n    {file = \"torchvision-0.18.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:975b8594c0f5288875408acbb74946eea786c5b008d129c0d045d0ead23742bc\"},\n    {file = \"torchvision-0.18.1-cp39-cp39-manylinux1_x86_64.whl\", hash = \"sha256:da83c8bbd34d8bee48bfa1d1b40e0844bc3cba10ed825a5a8cbe3ce7b62264cd\"},\n    {file = \"torchvision-0.18.1-cp39-cp39-manylinux2014_aarch64.whl\", hash = \"sha256:54bfcd352abb396d5c9c237d200167c178bd136051b138e1e8ef46ce367c2773\"},\n    {file = \"torchvision-0.18.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:5c8366a1aeee49e9ea9e64b30d199debdf06b1bd7610a76165eb5d7869c3bde5\"},\n]\n\n[package.dependencies]\nnumpy = \"*\"\npillow = \">=5.3.0,<8.3.dev0 || >=8.4.dev0\"\ntorch = \"2.3.1\"\n\n[package.extras]\nscipy = [\"scipy\"]\n\n[[package]]\nname = \"triton\"\nversion = \"2.3.1\"\ndescription = \"A language and compiler for custom Deep Learning operations\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"triton-2.3.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3c84595cbe5e546b1b290d2a58b1494df5a2ef066dd890655e5b8a8a92205c33\"},\n    {file = \"triton-2.3.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c9d64ae33bcb3a7a18081e3a746e8cf87ca8623ca13d2c362413ce7a486f893e\"},\n    {file = \"triton-2.3.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:eaf80e8761a9e3498aa92e7bf83a085b31959c61f5e8ac14eedd018df6fccd10\"},\n    {file = \"triton-2.3.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b13bf35a2b659af7159bf78e92798dc62d877aa991de723937329e2d382f1991\"},\n    {file = \"triton-2.3.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:63381e35ded3304704ea867ffde3b7cfc42c16a55b3062d41e017ef510433d66\"},\n    {file = \"triton-2.3.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1d968264523c7a07911c8fb51b4e0d1b920204dae71491b1fe7b01b62a31e124\"},\n]\n\n[package.dependencies]\nfilelock = \"*\"\n\n[package.extras]\nbuild = [\"cmake (>=3.20)\", \"lit\"]\ntests = [\"autopep8\", \"flake8\", \"isort\", \"numpy\", \"pytest\", \"scipy (>=1.7.1)\", \"torch\"]\ntutorials = [\"matplotlib\", \"pandas\", \"tabulate\", \"torch\"]\n\n[[package]]\nname = \"typing-extensions\"\nversion = \"4.14.1\"\ndescription = \"Backported and Experimental Type Hints for Python 3.9+\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"typing_extensions-4.14.1-py3-none-any.whl\", hash = \"sha256:d1e1e3b58374dc93031d6eda2420a48ea44a36c2b4766a4fdeb3710755731d76\"},\n    {file = \"typing_extensions-4.14.1.tar.gz\", hash = \"sha256:38b39f4aeeab64884ce9f74c94263ef78f3c22467c8724005483154c26648d36\"},\n]\n\n[[package]]\nname = \"tzdata\"\nversion = \"2025.2\"\ndescription = \"Provider of IANA time zone data\"\noptional = false\npython-versions = \">=2\"\nfiles = [\n    {file = \"tzdata-2025.2-py2.py3-none-any.whl\", hash = \"sha256:1a403fada01ff9221ca8044d701868fa132215d84beb92242d9acd2147f667a8\"},\n    {file = \"tzdata-2025.2.tar.gz\", hash = \"sha256:b60a638fcc0daffadf82fe0f57e53d06bdec2f36c4df66280ae79bce6bd6f2b9\"},\n]\n\n[[package]]\nname = \"urllib3\"\nversion = \"2.5.0\"\ndescription = \"HTTP library with thread-safe connection pooling, file post, and more.\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"urllib3-2.5.0-py3-none-any.whl\", hash = \"sha256:e6b01673c0fa6a13e374b50871808eb3bf7046c4b125b216f6bf1cc604cff0dc\"},\n    {file = \"urllib3-2.5.0.tar.gz\", hash = \"sha256:3fc47733c7e419d4bc3f6b3dc2b4f890bb743906a30d56ba4a5bfa4bbff92760\"},\n]\n\n[package.extras]\nbrotli = [\"brotli (>=1.0.9)\", \"brotlicffi (>=0.8.0)\"]\nh2 = [\"h2 (>=4,<5)\"]\nsocks = [\"pysocks (>=1.5.6,!=1.5.7,<2.0)\"]\nzstd = [\"zstandard (>=0.18.0)\"]\n\n[[package]]\nname = \"virtualenv\"\nversion = \"20.31.2\"\ndescription = \"Virtual Python Environment builder\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"virtualenv-20.31.2-py3-none-any.whl\", hash = \"sha256:36efd0d9650ee985f0cad72065001e66d49a6f24eb44d98980f630686243cf11\"},\n    {file = \"virtualenv-20.31.2.tar.gz\", hash = \"sha256:e10c0a9d02835e592521be48b332b6caee6887f332c111aa79a09b9e79efc2af\"},\n]\n\n[package.dependencies]\ndistlib = \">=0.3.7,<1\"\nfilelock = \">=3.12.2,<4\"\nplatformdirs = \">=3.9.1,<5\"\n\n[package.extras]\ndocs = [\"furo (>=2023.7.26)\", \"proselint (>=0.13)\", \"sphinx (>=7.1.2,!=7.3)\", \"sphinx-argparse (>=0.4)\", \"sphinxcontrib-towncrier (>=0.2.1a0)\", \"towncrier (>=23.6)\"]\ntest = [\"covdefaults (>=2.3)\", \"coverage (>=7.2.7)\", \"coverage-enable-subprocess (>=1)\", \"flaky (>=3.7)\", \"packaging (>=23.1)\", \"pytest (>=7.4)\", \"pytest-env (>=0.8.2)\", \"pytest-freezer (>=0.4.8)\", \"pytest-mock (>=3.11.1)\", \"pytest-randomly (>=3.12)\", \"pytest-timeout (>=2.1)\", \"setuptools (>=68)\", \"time-machine (>=2.10)\"]\n\n[[package]]\nname = \"wadler-lindig\"\nversion = \"0.1.7\"\ndescription = \"A Wadler–Lindig pretty-printer for Python.\"\noptional = false\npython-versions = \">=3.10\"\nfiles = [\n    {file = \"wadler_lindig-0.1.7-py3-none-any.whl\", hash = \"sha256:e3ec83835570fd0a9509f969162aeb9c65618f998b1f42918cfc8d45122fe953\"},\n    {file = \"wadler_lindig-0.1.7.tar.gz\", hash = \"sha256:81d14d3fe77d441acf3ebd7f4aefac20c74128bf460e84b512806dccf7b2cd55\"},\n]\n\n[package.extras]\ndev = [\"numpy\", \"pre-commit\", \"pytest\"]\ndocs = [\"hippogriffe (==0.1.0)\", \"mkdocs (==1.6.1)\", \"mkdocs-include-exclude-files (==0.1.0)\", \"mkdocs-ipynb (==0.1.0)\", \"mkdocs-material (==9.6.7)\", \"mkdocstrings[python] (==0.28.3)\", \"pymdown-extensions (==10.14.3)\"]\n\n[[package]]\nname = \"wandb\"\nversion = \"0.16.6\"\ndescription = \"A CLI and library for interacting with the Weights & Biases API.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"wandb-0.16.6-py3-none-any.whl\", hash = \"sha256:5810019a3b981c796e98ea58557a7c380f18834e0c6bdaed15df115522e5616e\"},\n    {file = \"wandb-0.16.6.tar.gz\", hash = \"sha256:86f491e3012d715e0d7d7421a4d6de41abef643b7403046261f962f3e512fe1c\"},\n]\n\n[package.dependencies]\nappdirs = \">=1.4.3\"\nClick = \">=7.1,<8.0.0 || >8.0.0\"\ndocker-pycreds = \">=0.4.0\"\nGitPython = \">=1.0.0,<3.1.29 || >3.1.29\"\nprotobuf = {version = \">=3.19.0,<4.21.0 || >4.21.0,<5\", markers = \"python_version > \\\"3.9\\\" or sys_platform != \\\"linux\\\"\"}\npsutil = \">=5.0.0\"\nPyYAML = \"*\"\nrequests = \">=2.0.0,<3\"\nsentry-sdk = \">=1.0.0\"\nsetproctitle = \"*\"\nsetuptools = \"*\"\n\n[package.extras]\nasync = [\"httpx (>=0.23.0)\"]\naws = [\"boto3\"]\nazure = [\"azure-identity\", \"azure-storage-blob\"]\ngcp = [\"google-cloud-storage\"]\nimporters = [\"filelock\", \"mlflow\", \"polars\", \"rich\", \"tenacity\"]\nkubeflow = [\"google-cloud-storage\", \"kubernetes\", \"minio\", \"sh\"]\nlaunch = [\"PyYAML (>=6.0.0)\", \"awscli\", \"azure-containerregistry\", \"azure-identity\", \"azure-storage-blob\", \"boto3\", \"botocore\", \"chardet\", \"google-auth\", \"google-cloud-aiplatform\", \"google-cloud-artifact-registry\", \"google-cloud-compute\", \"google-cloud-storage\", \"iso8601\", \"kubernetes\", \"kubernetes-asyncio\", \"nbconvert\", \"nbformat\", \"optuna\", \"pydantic\", \"tomli\", \"typing-extensions\"]\nmedia = [\"bokeh\", \"moviepy\", \"numpy\", \"pillow\", \"plotly (>=5.18.0)\", \"rdkit-pypi\", \"soundfile\"]\nmodels = [\"cloudpickle\"]\nperf = [\"orjson\"]\nreports = [\"pydantic (>=2.0.0)\"]\nsweeps = [\"sweeps (>=0.2.0)\"]\n\n[[package]]\nname = \"yarl\"\nversion = \"1.20.1\"\ndescription = \"Yet another URL library\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"yarl-1.20.1-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:6032e6da6abd41e4acda34d75a816012717000fa6839f37124a47fcefc49bec4\"},\n    {file = \"yarl-1.20.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:2c7b34d804b8cf9b214f05015c4fee2ebe7ed05cf581e7192c06555c71f4446a\"},\n    {file = \"yarl-1.20.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:0c869f2651cc77465f6cd01d938d91a11d9ea5d798738c1dc077f3de0b5e5fed\"},\n    {file = \"yarl-1.20.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:62915e6688eb4d180d93840cda4110995ad50c459bf931b8b3775b37c264af1e\"},\n    {file = \"yarl-1.20.1-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:41ebd28167bc6af8abb97fec1a399f412eec5fd61a3ccbe2305a18b84fb4ca73\"},\n    {file = \"yarl-1.20.1-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:21242b4288a6d56f04ea193adde174b7e347ac46ce6bc84989ff7c1b1ecea84e\"},\n    {file = \"yarl-1.20.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:bea21cdae6c7eb02ba02a475f37463abfe0a01f5d7200121b03e605d6a0439f8\"},\n    {file = \"yarl-1.20.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1f8a891e4a22a89f5dde7862994485e19db246b70bb288d3ce73a34422e55b23\"},\n    {file = \"yarl-1.20.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:dd803820d44c8853a109a34e3660e5a61beae12970da479cf44aa2954019bf70\"},\n    {file = \"yarl-1.20.1-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:b982fa7f74c80d5c0c7b5b38f908971e513380a10fecea528091405f519b9ebb\"},\n    {file = \"yarl-1.20.1-cp310-cp310-musllinux_1_2_armv7l.whl\", hash = \"sha256:33f29ecfe0330c570d997bcf1afd304377f2e48f61447f37e846a6058a4d33b2\"},\n    {file = \"yarl-1.20.1-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:835ab2cfc74d5eb4a6a528c57f05688099da41cf4957cf08cad38647e4a83b30\"},\n    {file = \"yarl-1.20.1-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:46b5e0ccf1943a9a6e766b2c2b8c732c55b34e28be57d8daa2b3c1d1d4009309\"},\n    {file = \"yarl-1.20.1-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:df47c55f7d74127d1b11251fe6397d84afdde0d53b90bedb46a23c0e534f9d24\"},\n    {file = \"yarl-1.20.1-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:76d12524d05841276b0e22573f28d5fbcb67589836772ae9244d90dd7d66aa13\"},\n    {file = \"yarl-1.20.1-cp310-cp310-win32.whl\", hash = \"sha256:6c4fbf6b02d70e512d7ade4b1f998f237137f1417ab07ec06358ea04f69134f8\"},\n    {file = \"yarl-1.20.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:aef6c4d69554d44b7f9d923245f8ad9a707d971e6209d51279196d8e8fe1ae16\"},\n    {file = \"yarl-1.20.1-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:47ee6188fea634bdfaeb2cc420f5b3b17332e6225ce88149a17c413c77ff269e\"},\n    {file = \"yarl-1.20.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:d0f6500f69e8402d513e5eedb77a4e1818691e8f45e6b687147963514d84b44b\"},\n    {file = \"yarl-1.20.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:7a8900a42fcdaad568de58887c7b2f602962356908eedb7628eaf6021a6e435b\"},\n    {file = \"yarl-1.20.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bad6d131fda8ef508b36be3ece16d0902e80b88ea7200f030a0f6c11d9e508d4\"},\n    {file = \"yarl-1.20.1-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:df018d92fe22aaebb679a7f89fe0c0f368ec497e3dda6cb81a567610f04501f1\"},\n    {file = \"yarl-1.20.1-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:8f969afbb0a9b63c18d0feecf0db09d164b7a44a053e78a7d05f5df163e43833\"},\n    {file = \"yarl-1.20.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:812303eb4aa98e302886ccda58d6b099e3576b1b9276161469c25803a8db277d\"},\n    {file = \"yarl-1.20.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:98c4a7d166635147924aa0bf9bfe8d8abad6fffa6102de9c99ea04a1376f91e8\"},\n    {file = \"yarl-1.20.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:12e768f966538e81e6e7550f9086a6236b16e26cd964cf4df35349970f3551cf\"},\n    {file = \"yarl-1.20.1-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:fe41919b9d899661c5c28a8b4b0acf704510b88f27f0934ac7a7bebdd8938d5e\"},\n    {file = \"yarl-1.20.1-cp311-cp311-musllinux_1_2_armv7l.whl\", hash = \"sha256:8601bc010d1d7780592f3fc1bdc6c72e2b6466ea34569778422943e1a1f3c389\"},\n    {file = \"yarl-1.20.1-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:daadbdc1f2a9033a2399c42646fbd46da7992e868a5fe9513860122d7fe7a73f\"},\n    {file = \"yarl-1.20.1-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:03aa1e041727cb438ca762628109ef1333498b122e4c76dd858d186a37cec845\"},\n    {file = \"yarl-1.20.1-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:642980ef5e0fa1de5fa96d905c7e00cb2c47cb468bfcac5a18c58e27dbf8d8d1\"},\n    {file = \"yarl-1.20.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:86971e2795584fe8c002356d3b97ef6c61862720eeff03db2a7c86b678d85b3e\"},\n    {file = \"yarl-1.20.1-cp311-cp311-win32.whl\", hash = \"sha256:597f40615b8d25812f14562699e287f0dcc035d25eb74da72cae043bb884d773\"},\n    {file = \"yarl-1.20.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:26ef53a9e726e61e9cd1cda6b478f17e350fb5800b4bd1cd9fe81c4d91cfeb2e\"},\n    {file = \"yarl-1.20.1-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:bdcc4cd244e58593a4379fe60fdee5ac0331f8eb70320a24d591a3be197b94a9\"},\n    {file = \"yarl-1.20.1-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:b29a2c385a5f5b9c7d9347e5812b6f7ab267193c62d282a540b4fc528c8a9d2a\"},\n    {file = \"yarl-1.20.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:1112ae8154186dfe2de4732197f59c05a83dc814849a5ced892b708033f40dc2\"},\n    {file = \"yarl-1.20.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:90bbd29c4fe234233f7fa2b9b121fb63c321830e5d05b45153a2ca68f7d310ee\"},\n    {file = \"yarl-1.20.1-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:680e19c7ce3710ac4cd964e90dad99bf9b5029372ba0c7cbfcd55e54d90ea819\"},\n    {file = \"yarl-1.20.1-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:4a979218c1fdb4246a05efc2cc23859d47c89af463a90b99b7c56094daf25a16\"},\n    {file = \"yarl-1.20.1-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:255b468adf57b4a7b65d8aad5b5138dce6a0752c139965711bdcb81bc370e1b6\"},\n    {file = \"yarl-1.20.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a97d67108e79cfe22e2b430d80d7571ae57d19f17cda8bb967057ca8a7bf5bfd\"},\n    {file = \"yarl-1.20.1-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8570d998db4ddbfb9a590b185a0a33dbf8aafb831d07a5257b4ec9948df9cb0a\"},\n    {file = \"yarl-1.20.1-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:97c75596019baae7c71ccf1d8cc4738bc08134060d0adfcbe5642f778d1dca38\"},\n    {file = \"yarl-1.20.1-cp312-cp312-musllinux_1_2_armv7l.whl\", hash = \"sha256:1c48912653e63aef91ff988c5432832692ac5a1d8f0fb8a33091520b5bbe19ef\"},\n    {file = \"yarl-1.20.1-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:4c3ae28f3ae1563c50f3d37f064ddb1511ecc1d5584e88c6b7c63cf7702a6d5f\"},\n    {file = \"yarl-1.20.1-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c5e9642f27036283550f5f57dc6156c51084b458570b9d0d96100c8bebb186a8\"},\n    {file = \"yarl-1.20.1-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:2c26b0c49220d5799f7b22c6838409ee9bc58ee5c95361a4d7831f03cc225b5a\"},\n    {file = \"yarl-1.20.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:564ab3d517e3d01c408c67f2e5247aad4019dcf1969982aba3974b4093279004\"},\n    {file = \"yarl-1.20.1-cp312-cp312-win32.whl\", hash = \"sha256:daea0d313868da1cf2fac6b2d3a25c6e3a9e879483244be38c8e6a41f1d876a5\"},\n    {file = \"yarl-1.20.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:48ea7d7f9be0487339828a4de0360d7ce0efc06524a48e1810f945c45b813698\"},\n    {file = \"yarl-1.20.1-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:0b5ff0fbb7c9f1b1b5ab53330acbfc5247893069e7716840c8e7d5bb7355038a\"},\n    {file = \"yarl-1.20.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:14f326acd845c2b2e2eb38fb1346c94f7f3b01a4f5c788f8144f9b630bfff9a3\"},\n    {file = \"yarl-1.20.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:f60e4ad5db23f0b96e49c018596707c3ae89f5d0bd97f0ad3684bcbad899f1e7\"},\n    {file = \"yarl-1.20.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:49bdd1b8e00ce57e68ba51916e4bb04461746e794e7c4d4bbc42ba2f18297691\"},\n    {file = \"yarl-1.20.1-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:66252d780b45189975abfed839616e8fd2dbacbdc262105ad7742c6ae58f3e31\"},\n    {file = \"yarl-1.20.1-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:59174e7332f5d153d8f7452a102b103e2e74035ad085f404df2e40e663a22b28\"},\n    {file = \"yarl-1.20.1-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:e3968ec7d92a0c0f9ac34d5ecfd03869ec0cab0697c91a45db3fbbd95fe1b653\"},\n    {file = \"yarl-1.20.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d1a4fbb50e14396ba3d375f68bfe02215d8e7bc3ec49da8341fe3157f59d2ff5\"},\n    {file = \"yarl-1.20.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:11a62c839c3a8eac2410e951301309426f368388ff2f33799052787035793b02\"},\n    {file = \"yarl-1.20.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:041eaa14f73ff5a8986b4388ac6bb43a77f2ea09bf1913df7a35d4646db69e53\"},\n    {file = \"yarl-1.20.1-cp313-cp313-musllinux_1_2_armv7l.whl\", hash = \"sha256:377fae2fef158e8fd9d60b4c8751387b8d1fb121d3d0b8e9b0be07d1b41e83dc\"},\n    {file = \"yarl-1.20.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:1c92f4390e407513f619d49319023664643d3339bd5e5a56a3bebe01bc67ec04\"},\n    {file = \"yarl-1.20.1-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:d25ddcf954df1754ab0f86bb696af765c5bfaba39b74095f27eececa049ef9a4\"},\n    {file = \"yarl-1.20.1-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:909313577e9619dcff8c31a0ea2aa0a2a828341d92673015456b3ae492e7317b\"},\n    {file = \"yarl-1.20.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:793fd0580cb9664548c6b83c63b43c477212c0260891ddf86809e1c06c8b08f1\"},\n    {file = \"yarl-1.20.1-cp313-cp313-win32.whl\", hash = \"sha256:468f6e40285de5a5b3c44981ca3a319a4b208ccc07d526b20b12aeedcfa654b7\"},\n    {file = \"yarl-1.20.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:495b4ef2fea40596bfc0affe3837411d6aa3371abcf31aac0ccc4bdd64d4ef5c\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-macosx_10_13_universal2.whl\", hash = \"sha256:f60233b98423aab21d249a30eb27c389c14929f47be8430efa7dbd91493a729d\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:6f3eff4cc3f03d650d8755c6eefc844edde99d641d0dcf4da3ab27141a5f8ddf\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:69ff8439d8ba832d6bed88af2c2b3445977eba9a4588b787b32945871c2444e3\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3cf34efa60eb81dd2645a2e13e00bb98b76c35ab5061a3989c7a70f78c85006d\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:8e0fe9364ad0fddab2688ce72cb7a8e61ea42eff3c7caeeb83874a5d479c896c\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:8f64fbf81878ba914562c672024089e3401974a39767747691c65080a67b18c1\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f6342d643bf9a1de97e512e45e4b9560a043347e779a173250824f8b254bd5ce\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:56dac5f452ed25eef0f6e3c6a066c6ab68971d96a9fb441791cad0efba6140d3\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c7d7f497126d65e2cad8dc5f97d34c27b19199b6414a40cb36b52f41b79014be\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:67e708dfb8e78d8a19169818eeb5c7a80717562de9051bf2413aca8e3696bf16\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-musllinux_1_2_armv7l.whl\", hash = \"sha256:595c07bc79af2494365cc96ddeb772f76272364ef7c80fb892ef9d0649586513\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:7bdd2f80f4a7df852ab9ab49484a4dee8030023aa536df41f2d922fd57bf023f\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c03bfebc4ae8d862f853a9757199677ab74ec25424d0ebd68a0027e9c639a390\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-musllinux_1_2_s390x.whl\", hash = \"sha256:344d1103e9c1523f32a5ed704d576172d2cabed3122ea90b1d4e11fe17c66458\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:88cab98aa4e13e1ade8c141daeedd300a4603b7132819c484841bb7af3edce9e\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-win32.whl\", hash = \"sha256:b121ff6a7cbd4abc28985b6028235491941b9fe8fe226e6fdc539c977ea1739d\"},\n    {file = \"yarl-1.20.1-cp313-cp313t-win_amd64.whl\", hash = \"sha256:541d050a355bbbc27e55d906bc91cb6fe42f96c01413dd0f4ed5a5240513874f\"},\n    {file = \"yarl-1.20.1-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:e42ba79e2efb6845ebab49c7bf20306c4edf74a0b20fc6b2ccdd1a219d12fad3\"},\n    {file = \"yarl-1.20.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:41493b9b7c312ac448b7f0a42a089dffe1d6e6e981a2d76205801a023ed26a2b\"},\n    {file = \"yarl-1.20.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:f5a5928ff5eb13408c62a968ac90d43f8322fd56d87008b8f9dabf3c0f6ee983\"},\n    {file = \"yarl-1.20.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:30c41ad5d717b3961b2dd785593b67d386b73feca30522048d37298fee981805\"},\n    {file = \"yarl-1.20.1-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl\", hash = \"sha256:59febc3969b0781682b469d4aca1a5cab7505a4f7b85acf6db01fa500fa3f6ba\"},\n    {file = \"yarl-1.20.1-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d2b6fb3622b7e5bf7a6e5b679a69326b4279e805ed1699d749739a61d242449e\"},\n    {file = \"yarl-1.20.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:749d73611db8d26a6281086f859ea7ec08f9c4c56cec864e52028c8b328db723\"},\n    {file = \"yarl-1.20.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9427925776096e664c39e131447aa20ec738bdd77c049c48ea5200db2237e000\"},\n    {file = \"yarl-1.20.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ff70f32aa316393eaf8222d518ce9118148eddb8a53073c2403863b41033eed5\"},\n    {file = \"yarl-1.20.1-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:c7ddf7a09f38667aea38801da8b8d6bfe81df767d9dfc8c88eb45827b195cd1c\"},\n    {file = \"yarl-1.20.1-cp39-cp39-musllinux_1_2_armv7l.whl\", hash = \"sha256:57edc88517d7fc62b174fcfb2e939fbc486a68315d648d7e74d07fac42cec240\"},\n    {file = \"yarl-1.20.1-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:dab096ce479d5894d62c26ff4f699ec9072269d514b4edd630a393223f45a0ee\"},\n    {file = \"yarl-1.20.1-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:14a85f3bd2d7bb255be7183e5d7d6e70add151a98edf56a770d6140f5d5f4010\"},\n    {file = \"yarl-1.20.1-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:2c89b5c792685dd9cd3fa9761c1b9f46fc240c2a3265483acc1565769996a3f8\"},\n    {file = \"yarl-1.20.1-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:69e9b141de5511021942a6866990aea6d111c9042235de90e08f94cf972ca03d\"},\n    {file = \"yarl-1.20.1-cp39-cp39-win32.whl\", hash = \"sha256:b5f307337819cdfdbb40193cad84978a029f847b0a357fbe49f712063cfc4f06\"},\n    {file = \"yarl-1.20.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:eae7bfe2069f9c1c5b05fc7fe5d612e5bbc089a39309904ee8b829e322dcad00\"},\n    {file = \"yarl-1.20.1-py3-none-any.whl\", hash = \"sha256:83b8eb083fe4683c6115795d9fc1cfaf2cbbefb19b3a1cb68f6527460f483a77\"},\n    {file = \"yarl-1.20.1.tar.gz\", hash = \"sha256:d017a4997ee50c91fd5466cef416231bb82177b93b029906cefc542ce14c35ac\"},\n]\n\n[package.dependencies]\nidna = \">=2.0\"\nmultidict = \">=4.0\"\npropcache = \">=0.2.1\"\n\n[metadata]\nlock-version = \"2.0\"\npython-versions = \"^3.11\"\ncontent-hash = \"160f1f8a6c2c44606140ae4eac2ae995f32f74136ecffd20c209556b1a167b90\"\n",
  "CLAUDE.md": "\n## ⬛ DP‑Crypto Lab – Agent Onboarding Brief (v0.1)\n\n### 0 Mission (why this repo exists)\n\n> Build a **differentiable‑programming / reinforcement‑learning framework** that trades crypto assets live.\n> Emphasise reproducibility, audit‑grade logging, and containerised portability across\n> • **macOS (M4 Pro, Metal/MPS)** for rapid iteration\n> • **WSL 2 + RTX 5090 CUDA 12.8** for full‑scale training & CI.\n\n### 1 Golden Rules for Code‑Gen Agents\n\n1. **One PR = One atomic concern** (feature, refactor, or infra task).\n2. **No global site‑package edits.** Every change lives inside the dev‑container image.\n3. **Respect the scaffolds below.** If a file or directory is not mentioned, leave it untouched.\n4. **Always add/adjust tests** when you change behaviour or introduce new modules.\n5. **Run `./scripts/preflight.sh` locally**; commit only if it exits 0.\n\n### 2 Repo Skeleton (generate if missing)\n\n```\ncrypto‑dp‑lab/\n├── .devcontainer/\n│   ├── cuda/      # Dockerfile + devcontainer.json\n│   └── metal/\n├── env/           # conda yaml templates (cpu.yml, cuda.yml)\n├── src/\n│   ├── dp_lab/    # python package root (leave empty for now)\n│   └── tests/\n├── data/          # READ‑ONLY mountpoint (no raw files committed)\n├── secrets/       # *.enc age‑encrypted files (never plaintext)\n├── scripts/\n│   ├── preflight.sh\n│   └── format_check.sh\n├── .github/\n│   └── workflows/ (ci.yml template stub)\n├── .pre‑commit‑config.yaml\n├── pyproject.toml   (Poetry, empty deps list)\n└── README.md        (light placeholder)\n```\n\n### 3 Immediate TODO Backlog (ordered)\n\n| ID       | Task                                                                                                                           | Output File(s)             | Constraints                                        |\n| -------- | ------------------------------------------------------------------------------------------------------------------------------ | -------------------------- | -------------------------------------------------- |\n| **T‑00** | Add **`.pre‑commit‑config.yaml`** (black, isort, flake8, case‑collision‑lint).                                                 | `.pre‑commit‑config.yaml`  | Pin tool versions; enable on `python/**` & `src/`. |\n| **T‑01** | Scaffold **`pyproject.toml`** for Poetry 3.11, **no runtime deps yet**.                                                        | `pyproject.toml`           | Leave `[tool.poetry.dependencies]` empty.          |\n| **T‑02** | Generate **`cuda.Dockerfile`** (`FROM nvidia/cuda:12.8.0‑devel‑ubuntu22.04`) and matching `cuda.devcontainer.json`.            | `.devcontainer/cuda/*`     | Add runArgs `\"--gpus\",\"all\"`, mount `/opt/data`.   |\n| **T‑03** | Generate **`metal.Dockerfile`** (Ubuntu jammy‑slim + Python 3.11) + `metal.devcontainer.json`.                                 | `.devcontainer/metal/*`    | No GPU flags.                                      |\n| **T‑04** | Create **`scripts/preflight.sh`** implementing: driver‑match check, `torch.cuda`/MPS availability, poetry install test.        | `scripts/preflight.sh`     | Fail‑fast pattern; POSIX‑sh compatible.            |\n| **T‑05** | Stub **`ci.yml`** with matrix `{ os:[macos‑14,ubuntu‑22.04], gpu:[cpu,cuda] }`, job installs Poetry, runs pre‑commit + pytest. | `.github/workflows/ci.yml` | GPU job marked `if: matrix.gpu == 'cuda'`.         |\n| **T‑06** | Add **`format_check.sh`** (runs black, isort, flake8) + hook in pre‑commit.                                                    | `scripts/format_check.sh`  | Exits non‑zero on diff.                            |\n\n> **IMPORTANT** – Agents must *stop after T‑06*. Leave DP logic, data ingestion, and trading code for later PRs.\n\n### 4 Style & Naming\n\n* **Python 3.11** only.\n* Strict type hints (`mypy --strict` in later sprints).\n* Modules snake\\_case, classes PascalCase, constants UPPER\\_SNAKE.\n* Commit messages: `<scope>: <imperative summary>`; body ≤ 72 chars/line.\n\n### 5 Secrets & Data\n\n* **Never output plaintext keys.** Use `sops‑age` encrypted placeholders.\n* **No raw datasets in Git.** Access via `/opt/data` bind‑mount (volume defined outside repo).\n* Unit tests must run offline with **synthetic fixtures**.\n\n### 6 How to Validate before PR\n\n```bash\n# inside dev‑container\npoetry install --with dev\npre‑commit install   # first time only\n./scripts/preflight.sh\npytest -q\n```\n\n### 7 Escalation Path\n\nIf an agent is uncertain, it must:\n\n1. Leave a `TODO:` comment in code **and**\n2. Emit an inline question in the PR description (GitHub UI) asking for clarification.\n\n### 8 Forbidden Actions\n\n* Auto‑upgrading system packages in Dockerfiles (`apt upgrade -y`) – pin versions instead.\n* Adding new dependencies without `poetry add` + lock update.\n* Pushing to `main`—all changes must come via PR.\n\n---\n",
  ".devcontainer/README.md": "# Dev Container Toolchain\n\nThis repository uses VS Code Dev Containers to ensure consistent development environments across macOS (Metal/MPS) and Linux (CUDA).\n\n## Installed Tools\n\nAll dev containers include the following tools installed in `/usr/local/bin`:\n\n- **Poetry 1.8.2**: Python dependency management\n- **Node.js 18**: JavaScript runtime (required for Claude CLI)\n- **Claude Code CLI**: Anthropic's AI coding assistant (`@anthropic-ai/claude-code`)\n\n## Rebuilding the Container\n\nIf you need to update tool versions or the container configuration:\n\n1. Open Command Palette: `Cmd+Shift+P` (macOS) or `Ctrl+Shift+P` (Linux/Windows)\n2. Run: **Dev Containers: Rebuild Container**\n\n## Using Claude Code\n\nOnce inside the container, you can use Claude Code from any terminal:\n\n```bash\nclaude chat\n```\n\nThe CLI is globally installed via npm and available in all terminal sessions.\n\n## Container Variants\n\n- **metal**: Optimized for macOS with Metal/MPS support\n- **cuda**: For Linux/WSL with NVIDIA GPU support (when available)\n\n## Verification\n\nThe `postCreateCommand` automatically runs `./scripts/preflight.sh` to verify all tools are properly installed and accessible. This script checks:\n\n- Poetry availability and version\n- Node.js availability and version  \n- Claude CLI availability and version\n- GPU support (CUDA on Linux, Metal/MPS on macOS)",
  ".devcontainer/metal/Dockerfile": "FROM ubuntu:jammy\n\n# Install Python 3.11 and essential tools\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    python3.11 \\\n    python3.11-dev \\\n    python3.11-venv \\\n    python3-pip \\\n    curl \\\n    git \\\n    build-essential \\\n    ca-certificates \\\n    jq \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Set Python 3.11 as default\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1 \\\n    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1\n\n# Install Poetry\nENV POETRY_HOME=/opt/poetry\nENV PATH=\"$POETRY_HOME/bin:$PATH\"\nRUN curl -sSL https://install.python-poetry.org | python3 - --version 1.8.2\n\n# Set PATH for user-installed binaries\nENV PATH=\"/home/developer/.local/bin:$PATH\"\n\n# Set working directory\nWORKDIR /workspace\n\n# Create non-root user\nARG USERNAME=developer\nARG USER_UID=1000\nARG USER_GID=$USER_UID\nRUN groupadd --gid $USER_GID $USERNAME \\\n    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME\n\n# Switch to non-root user\nUSER $USERNAME\n\n",
  ".devcontainer/metal/devcontainer.json": "{\n  \"name\": \"crypto-dp-lab-metal\",\n  \"dockerFile\": \"Dockerfile\",\n  \"runArgs\": [],\n  \"customizations\": {\n    \"vscode\": {\n      \"settings\": {\n        \"terminal.integrated.defaultProfile.linux\": \"bash\",\n        \"python.defaultInterpreterPath\": \"/usr/bin/python3.11\"\n      },\n      \"extensions\": [\n        \"ms-python.python\",\n        \"ms-python.vscode-pylance\"\n      ]\n    }\n  },\n  \"mounts\": [\n    \"source=/opt/data,target=/opt/data,type=bind\"\n  ],\n  \"remoteUser\": \"developer\",\n  \"postCreateCommand\": \"curl -fsSL https://claude.ai/install.sh | bash && echo 'Claude Code installed' && mkdir -p ~/.config/claude && echo '{\\\"theme\\\":\\\"dark\\\",\\\"colorblind_friendly\\\":true,\\\"account_type\\\":\\\"claude\\\",\\\"default_settings\\\":true,\\\"trust_files\\\":true,\\\"editor\\\":\\\"vscode\\\"}' > ~/.config/claude/config.json && echo 'Claude Code pre-configured' || echo 'Claude Code setup failed'\"\n}\n",
  ".devcontainer/cuda/Dockerfile": "FROM nvidia/cuda:12.8.0-devel-ubuntu22.04\n\n# Install Python 3.11 and essential tools\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    software-properties-common \\\n    && add-apt-repository ppa:deadsnakes/ppa \\\n    && apt-get update && apt-get install -y --no-install-recommends \\\n    python3.11 \\\n    python3.11-dev \\\n    python3.11-venv \\\n    python3.11-distutils \\\n    curl \\\n    git \\\n    build-essential \\\n    ca-certificates \\\n    jq \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Set Python 3.11 as default\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1 \\\n    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1\n\n# Install pip for Python 3.11\nRUN curl -sS https://bootstrap.pypa.io/get-pip.py | python3.11\n\n# Install Poetry\nENV POETRY_HOME=/opt/poetry\nENV PATH=\"$POETRY_HOME/bin:$PATH\"\nRUN curl -sSL https://install.python-poetry.org | python3 - --version 1.8.2\n\n# Set PATH for user-installed binaries\nENV PATH=\"/home/developer/.local/bin:$PATH\"\n\n# Set working directory\nWORKDIR /workspace\n\n# Create non-root user\nARG USERNAME=developer\nARG USER_UID=1000\nARG USER_GID=$USER_UID\nRUN groupadd --gid $USER_GID $USERNAME \\\n    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME\n\n# Switch to non-root user\nUSER $USERNAME",
  ".devcontainer/cuda/devcontainer.json": "{\n  \"name\": \"crypto-dp-lab-cuda\",\n  \"dockerFile\": \"Dockerfile\",\n  \"runArgs\": [\"--gpus\", \"all\"],\n  \"customizations\": {\n    \"vscode\": {\n      \"settings\": {\n        \"terminal.integrated.defaultProfile.linux\": \"bash\",\n        \"python.defaultInterpreterPath\": \"/usr/bin/python3.11\"\n      },\n      \"extensions\": [\n        \"ms-python.python\",\n        \"ms-python.vscode-pylance\"\n      ]\n    }\n  },\n  \"mounts\": [\n    \"source=/opt/data,target=/opt/data,type=bind\"\n  ],\n  \"remoteUser\": \"developer\",\n  \"postCreateCommand\": \"curl -fsSL https://claude.ai/install.sh | bash && echo 'Claude Code installed' && mkdir -p ~/.config/claude && echo '{\\\"theme\\\":\\\"dark\\\",\\\"colorblind_friendly\\\":true,\\\"account_type\\\":\\\"claude\\\",\\\"default_settings\\\":true,\\\"trust_files\\\":true,\\\"editor\\\":\\\"vscode\\\"}' > ~/.config/claude/config.json && echo 'Claude Code pre-configured' || echo 'Claude Code setup failed'\"\n}",
  "scripts/format_check.sh": "#!/bin/bash\nset -euo pipefail\n\necho \"🔍 Running code format checks...\"\n\n# Check if we're in a poetry environment\nif ! command -v poetry >/dev/null 2>&1; then\n    echo \"❌ Poetry not found\"\n    exit 1\nfi\n\n# Run black format check\necho \"🔍 Checking code formatting with black...\"\nif ! poetry run black --check --diff src/ 2>/dev/null; then\n    echo \"❌ Black formatting issues found\"\n    exit 1\nfi\necho \"✅ Black formatting OK\"\n\n# Run isort import order check  \necho \"🔍 Checking import order with isort...\"\nif ! poetry run isort --check-only --diff src/ 2>/dev/null; then\n    echo \"❌ Import order issues found\"\n    exit 1\nfi\necho \"✅ Import order OK\"\n\n# Run flake8 linting\necho \"🔍 Running flake8 linting...\"\nif ! poetry run flake8 src/ 2>/dev/null; then\n    echo \"❌ Flake8 linting issues found\"\n    exit 1\nfi\necho \"✅ Flake8 linting OK\"\n\necho \"✅ All format checks passed\"",
  "scripts/preflight.sh": "#!/bin/bash\nset -euo pipefail\n\necho \"🔍 Pre-flight checks starting...\"\n\n# Check Poetry is available\ncommand -v poetry >/dev/null || { echo \"❌ Poetry missing\"; exit 127; }\necho \"✅ Poetry found: $(poetry --version)\"\n\n# Check Python version\nif command -v python >/dev/null 2>&1; then\n    PYTHON_VERSION=$(python --version 2>&1)\n    echo \"✅ Python found: $PYTHON_VERSION\"\n    \n    # Ensure Python 3.11\n    python -c \"import sys; sys.exit(0 if sys.version_info >= (3, 11) else 1)\" || {\n        echo \"❌ Python 3.11+ required\"\n        exit 1\n    }\nelse\n    echo \"❌ Python not found\"\n    exit 1\nfi\n\n# Driver and GPU availability checks\nif [ -f /proc/driver/nvidia/version ]; then\n    echo \"🔍 Checking CUDA driver match...\"\n    if command -v nvidia-smi >/dev/null 2>&1; then\n        echo \"✅ NVIDIA driver available\"\n        nvidia-smi --query-gpu=name,driver_version --format=csv,noheader || true\n        \n        # Check torch.cuda availability if torch is installed\n        python -c \"\nimport sys\ntry:\n    import torch\n    if torch.cuda.is_available():\n        print('✅ torch.cuda available')\n        print(f'   CUDA devices: {torch.cuda.device_count()}')\n    else:\n        print('⚠️  torch.cuda not available')\nexcept ImportError:\n    print('⚠️  PyTorch not installed yet')\n\" 2>/dev/null || echo \"⚠️  Could not check torch.cuda\"\n    else\n        echo \"❌ nvidia-smi not found\"\n        exit 1\n    fi\nelif [ \"$(uname)\" = \"Darwin\" ]; then\n    echo \"🔍 Checking Metal/MPS availability...\"\n    python -c \"\nimport sys\ntry:\n    import torch\n    if torch.backends.mps.is_available():\n        print('✅ MPS available')\n    else:\n        print('⚠️  MPS not available')\nexcept ImportError:\n    print('⚠️  PyTorch not installed yet')\n\" 2>/dev/null || echo \"⚠️  Could not check MPS\"\nfi\n\n# Test poetry install (dry run)\nif [ -f \"pyproject.toml\" ]; then\n    echo \"🔍 Testing poetry install...\"\n    poetry check || { echo \"❌ pyproject.toml invalid\"; exit 1; }\n    poetry install --dry-run >/dev/null 2>&1 || { echo \"❌ Poetry install would fail\"; exit 1; }\n    echo \"✅ Poetry install test passed\"\nelse\n    echo \"⚠️  pyproject.toml not found, skipping poetry install test\"\nfi\n\necho \"✅ Pre-flight checks complete\"",
  ".github/workflows/ci.yml": "name: CI\n\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n\njobs:\n  test:\n    strategy:\n      matrix:\n        os: [macos-14, ubuntu-22.04]\n        gpu: [cpu, cuda]\n        exclude:\n          # CUDA only available on Linux\n          - os: macos-14\n            gpu: cuda\n          # CPU-only builds for both platforms\n          - os: ubuntu-22.04\n            gpu: cpu\n\n    runs-on: ${{ matrix.os }}\n\n    steps:\n    - uses: actions/checkout@v4\n\n    - name: Set up Python 3.11\n      uses: actions/setup-python@v4\n      with:\n        python-version: 3.11\n\n    - name: Install Poetry\n      uses: snok/install-poetry@v1\n      with:\n        version: 1.8.2\n        virtualenvs-create: true\n        virtualenvs-in-project: true\n\n    - name: Cache Poetry dependencies\n      uses: actions/cache@v3\n      with:\n        path: .venv\n        key: venv-${{ runner.os }}-${{ matrix.gpu }}-${{ hashFiles('**/poetry.lock') }}\n\n    - name: Install dependencies\n      run: poetry install --with dev\n\n    - name: Set up GPU environment\n      if: matrix.gpu == 'cuda'\n      run: |\n        # This step would set up CUDA environment\n        # Currently a placeholder for future CUDA setup\n        echo \"Setting up CUDA environment\"\n\n    - name: Run pre-commit hooks\n      run: |\n        poetry run pre-commit install\n        poetry run pre-commit run --all-files\n\n    - name: Run tests\n      run: poetry run pytest src/tests/ -v --tb=short\n\n    - name: Run crypto module smoke tests\n      if: matrix.gpu == 'cpu'\n      run: |\n        poetry run python -c \"\n        import jax\n        from crypto_dp.graph.scaffold import LatentGraph\n        from crypto_dp.models.portfolio import DifferentiablePortfolio\n        from crypto_dp.rl.agent import CryptoTradingAgent\n        print('✅ All crypto modules imported successfully')\n        \n        # Quick smoke test\n        key = jax.random.PRNGKey(42)\n        graph = LatentGraph(5, key=key)\n        portfolio = DifferentiablePortfolio(10, 3, key=key)\n        agent = CryptoTradingAgent(10, 3, key=key)\n        print('✅ All crypto modules initialized successfully')\n        \"\n\n    - name: Run preflight checks\n      run: ./scripts/preflight.sh",
  ".git/config": "[core]\n\trepositoryformatversion = 0\n\tfilemode = true\n\tbare = false\n\tlogallrefupdates = true\n\tignorecase = true\n\tprecomposeunicode = true\n[remote \"origin\"]\n\turl = https://github.com/evanfollis/crypto-agent-dp-lab.git\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n[branch \"main\"]\n\tremote = origin\n\tmerge = refs/heads/main\n[branch \"feat/crypto_dp_bootstrap\"]\n\tvscode-merge-base = origin/main\n",
  ".git/HEAD": "ref: refs/heads/feat/crypto_dp_bootstrap\n",
  ".git/description": "Unnamed repository; edit this file 'description' to name the repository.\n",
  ".git/COMMIT_EDITMSG": "feat: add metal dev-container scaffold\n",
  ".git/info/exclude": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n# *.[oa]\n# *~\n",
  ".git/logs/HEAD": "0000000000000000000000000000000000000000 643cdc5c3221202f6145b9335bcef8012f87b06c Evan Follis <evanfollis@gmail.com> 1752440973 -0500\tcommit (initial): feat: add metal dev-container scaffold\n643cdc5c3221202f6145b9335bcef8012f87b06c 643cdc5c3221202f6145b9335bcef8012f87b06c Evan Follis <evanfollis@gmail.com> 1752456552 +0000\tcheckout: moving from main to feat/crypto_dp_bootstrap\n",
  ".git/logs/refs/heads/main": "0000000000000000000000000000000000000000 643cdc5c3221202f6145b9335bcef8012f87b06c Evan Follis <evanfollis@gmail.com> 1752440973 -0500\tcommit (initial): feat: add metal dev-container scaffold\n",
  ".git/logs/refs/heads/feat/crypto_dp_bootstrap": "0000000000000000000000000000000000000000 643cdc5c3221202f6145b9335bcef8012f87b06c Evan Follis <evanfollis@gmail.com> 1752456552 +0000\tbranch: Created from HEAD\n",
  ".git/logs/refs/remotes/origin/main": "0000000000000000000000000000000000000000 643cdc5c3221202f6145b9335bcef8012f87b06c Evan Follis <evanfollis@gmail.com> 1752440986 -0500\tupdate by push\n",
  ".git/hooks/commit-msg.sample": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n# commit.  The hook is allowed to edit the commit message file.\n#\n# To enable this hook, rename this file to \"commit-msg\".\n\n# Uncomment the below to add a Signed-off-by line to the message.\n# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
  ".git/hooks/pre-rebase.sample": "#!/bin/sh\n#\n# Copyright (c) 2006, 2008 Junio C Hamano\n#\n# The \"pre-rebase\" hook is run just before \"git rebase\" starts doing\n# its job, and can prevent the command from running by exiting with\n# non-zero status.\n#\n# The hook is called with the following parameters:\n#\n# $1 -- the upstream the series was forked from.\n# $2 -- the branch being rebased (or empty when rebasing the current branch).\n#\n# This sample shows how to prevent topic branches that are already\n# merged to 'next' branch from getting rebased, because allowing it\n# would result in rebasing already published history.\n\npublish=next\nbasebranch=\"$1\"\nif test \"$#\" = 2\nthen\n\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n\t;;\n*)\n\texit 0 ;# we do not interrupt others.\n\t;;\nesac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n\n# Is topic fully merged to master?\nnot_in_master=`git rev-list --pretty=oneline ^master \"$topic\"`\nif test -z \"$not_in_master\"\nthen\n\techo >&2 \"$topic is fully merged to master; better remove it.\"\n\texit 1 ;# we could allow it, but there is no point.\nfi\n\n# Is topic ever merged to next?  If so you should not be rebasing it.\nonly_next_1=`git rev-list ^master \"^$topic\" ${publish} | sort`\nonly_next_2=`git rev-list ^master           ${publish} | sort`\nif test \"$only_next_1\" = \"$only_next_2\"\nthen\n\tnot_in_topic=`git rev-list \"^$topic\" master`\n\tif test -z \"$not_in_topic\"\n\tthen\n\t\techo >&2 \"$topic is already up to date with master\"\n\t\texit 1 ;# we could allow it, but there is no point.\n\telse\n\t\texit 0\n\tfi\nelse\n\tnot_in_next=`git rev-list --pretty=oneline ^${publish} \"$topic\"`\n\t/usr/bin/perl -e '\n\t\tmy $topic = $ARGV[0];\n\t\tmy $msg = \"* $topic has commits already merged to public branch:\\n\";\n\t\tmy (%not_in_next) = map {\n\t\t\t/^([0-9a-f]+) /;\n\t\t\t($1 => 1);\n\t\t} split(/\\n/, $ARGV[1]);\n\t\tfor my $elem (map {\n\t\t\t\t/^([0-9a-f]+) (.*)$/;\n\t\t\t\t[$1 => $2];\n\t\t\t} split(/\\n/, $ARGV[2])) {\n\t\t\tif (!exists $not_in_next{$elem->[0]}) {\n\t\t\t\tif ($msg) {\n\t\t\t\t\tprint STDERR $msg;\n\t\t\t\t\tundef $msg;\n\t\t\t\t}\n\t\t\t\tprint STDERR \" $elem->[1]\\n\";\n\t\t\t}\n\t\t}\n\t' \"$topic\" \"$not_in_next\" \"$not_in_master\"\n\texit 1\nfi\n\n<<\\DOC_END\n\nThis sample hook safeguards topic branches that have been\npublished from being rewound.\n\nThe workflow assumed here is:\n\n * Once a topic branch forks from \"master\", \"master\" is never\n   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n   branches, merge them into \"next\" branch.\n\nThe script, being an example, hardcodes the publish branch name\nto be \"next\", but it is trivial to make it configurable via\n$GIT_DIR/config mechanism.\n\nWith this workflow, you would want to know:\n\n(1) ... if a topic branch has ever been merged to \"next\".  Young\n    topic branches can have stupid mistakes you would rather\n    clean up before publishing, and things that have not been\n    merged into other branches can be easily rebased without\n    affecting other people.  But once it is published, you would\n    not want to rewind it.\n\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n\t\t /   a---a---b A     /           /\n\t\t/   /               /           /\n\t       /   /   c---c---c---c B         /\n\t      /   /   /             \\         /\n\t     /   /   /   b---b C     \\       /\n\t    /   /   /   /             \\     /\n    ---o---o---o---o---o---o---o---o---o---o---o \"master\"\n\n\nA, B and C are topic branches.\n\n * A has one fix since it was merged up to \"next\".\n\n * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\nDOC_END\n",
  ".git/hooks/pre-commit.sample": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n# If you want to allow non-ASCII filenames set this variable to true.\nallownonascii=$(git config --type=bool hooks.allownonascii)\n\n# Redirect output to stderr.\nexec 1>&2\n\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n\nTo be portable it is advisable to rename the file.\n\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
  ".git/hooks/applypatch-msg.sample": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n# appropriate message if it wants to stop the commit.  The hook is\n# allowed to edit the commit message file.\n#\n# To enable this hook, rename this file to \"applypatch-msg\".\n\n. git-sh-setup\ncommitmsg=\"$(git rev-parse --git-path hooks/commit-msg)\"\ntest -x \"$commitmsg\" && exec \"$commitmsg\" ${1+\"$@\"}\n:\n",
  ".git/hooks/fsmonitor-watchman.sample": "#!/usr/bin/perl\n\nuse strict;\nuse warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n# 'git config core.fsmonitor .git/hooks/query-watchman'\n#\nmy ($version, $last_update_token) = @ARGV;\n\n# Uncomment for debugging\n# print STDERR \"$0 $version $last_update_token\\n\";\n\n# Check the hook interface version\nif ($version ne 2) {\n\tdie \"Unsupported query-fsmonitor hook version '$version'.\\n\" .\n\t    \"Falling back to scanning...\\n\";\n}\n\nmy $git_work_tree = get_working_dir();\n\nmy $retry = 1;\n\nmy $json_pkg;\neval {\n\trequire JSON::XS;\n\t$json_pkg = \"JSON::XS\";\n\t1;\n} or do {\n\trequire JSON::PP;\n\t$json_pkg = \"JSON::PP\";\n};\n\nlaunch_watchman();\n\nsub launch_watchman {\n\tmy $o = watchman_query();\n\tif (is_work_tree_watched($o)) {\n\t\toutput_result($o->{clock}, @{$o->{files}});\n\t}\n}\n\nsub output_result {\n\tmy ($clockid, @files) = @_;\n\n\t# Uncomment for debugging watchman output\n\t# open (my $fh, \">\", \".git/watchman-output.out\");\n\t# binmode $fh, \":utf8\";\n\t# print $fh \"$clockid\\n@files\\n\";\n\t# close $fh;\n\n\tbinmode STDOUT, \":utf8\";\n\tprint $clockid;\n\tprint \"\\0\";\n\tlocal $, = \"\\0\";\n\tprint @files;\n}\n\nsub watchman_clock {\n\tmy $response = qx/watchman clock \"$git_work_tree\"/;\n\tdie \"Failed to get clock id on '$git_work_tree'.\\n\" .\n\t\t\"Falling back to scanning...\\n\" if $? != 0;\n\n\treturn $json_pkg->new->utf8->decode($response);\n}\n\nsub watchman_query {\n\tmy $pid = open2(\\*CHLD_OUT, \\*CHLD_IN, 'watchman -j --no-pretty')\n\tor die \"open2() failed: $!\\n\" .\n\t\"Falling back to scanning...\\n\";\n\n\t# In the query expression below we're asking for names of files that\n\t# changed since $last_update_token but not from the .git folder.\n\t#\n\t# To accomplish this, we're using the \"since\" generator to use the\n\t# recency index to select candidate nodes and \"fields\" to limit the\n\t# output to file names only. Then we're using the \"expression\" term to\n\t# further constrain the results.\n\tmy $last_update_line = \"\";\n\tif (substr($last_update_token, 0, 1) eq \"c\") {\n\t\t$last_update_token = \"\\\"$last_update_token\\\"\";\n\t\t$last_update_line = qq[\\n\"since\": $last_update_token,];\n\t}\n\tmy $query = <<\"\tEND\";\n\t\t[\"query\", \"$git_work_tree\", {$last_update_line\n\t\t\t\"fields\": [\"name\"],\n\t\t\t\"expression\": [\"not\", [\"dirname\", \".git\"]]\n\t\t}]\n\tEND\n\n\t# Uncomment for debugging the watchman query\n\t# open (my $fh, \">\", \".git/watchman-query.json\");\n\t# print $fh $query;\n\t# close $fh;\n\n\tprint CHLD_IN $query;\n\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n\n\tdie \"Watchman: command returned no output.\\n\" .\n\t\"Falling back to scanning...\\n\" if $response eq \"\";\n\tdie \"Watchman: command returned invalid output: $response\\n\" .\n\t\"Falling back to scanning...\\n\" unless $response =~ /^\\{/;\n\n\treturn $json_pkg->new->utf8->decode($response);\n}\n\nsub is_work_tree_watched {\n\tmy ($output) = @_;\n\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n\t\tdie \"Watchman: $error.\\n\" .\n\t\t\"Falling back to scanning...\\n\" if $error;\n\n\t\t# Uncomment for debugging watchman output\n\t\t# open (my $fh, \">\", \".git/watchman-output.out\");\n\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n\t\tdie \"Watchman: $error.\\n\" .\n\t\t\"Falling back to scanning...\\n\" if $error;\n\n\t\toutput_result($o->{clock}, (\"/\"));\n\t\t$last_update_token = $o->{clock};\n\n\t\teval { launch_watchman() };\n\t\treturn 0;\n\t}\n\n\tdie \"Watchman: $error.\\n\" .\n\t\"Falling back to scanning...\\n\" if $error;\n\n\treturn 1;\n}\n\nsub get_working_dir {\n\tmy $working_dir;\n\tif ($^O =~ 'msys' || $^O =~ 'cygwin') {\n\t\t$working_dir = Win32::GetCwd();\n\t\t$working_dir =~ tr/\\\\/\\//;\n\t} else {\n\t\trequire Cwd;\n\t\t$working_dir = Cwd::cwd();\n\t}\n\n\treturn $working_dir;\n}\n",
  ".git/hooks/pre-receive.sample": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n# To enable this hook, rename this file to \"pre-receive\".\n\nif test -n \"$GIT_PUSH_OPTION_COUNT\"\nthen\n\ti=0\n\twhile test \"$i\" -lt \"$GIT_PUSH_OPTION_COUNT\"\n\tdo\n\t\teval \"value=\\$GIT_PUSH_OPTION_$i\"\n\t\tcase \"$value\" in\n\t\techoback=*)\n\t\t\techo \"echo from the pre-receive-hook: ${value#*=}\" >&2\n\t\t\t;;\n\t\treject)\n\t\t\texit 1\n\t\tesac\n\t\ti=$((i + 1))\n\tdone\nfi\n",
  ".git/hooks/prepare-commit-msg.sample": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n# message file.  If the hook fails with a non-zero status,\n# the commit is aborted.\n#\n# To enable this hook, rename this file to \"prepare-commit-msg\".\n\n# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n#\n# The third example adds a Signed-off-by line to the message, that can\n# still be edited.  This is rarely a good idea.\n\nCOMMIT_MSG_FILE=$1\nCOMMIT_SOURCE=$2\nSHA1=$3\n\n/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' \"$COMMIT_MSG_FILE\"\n\n# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n# fi\n",
  ".git/hooks/post-update.sample": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
  ".git/hooks/pre-merge-commit.sample": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n#\n# To enable this hook, rename this file to \"pre-merge-commit\".\n\n. git-sh-setup\ntest -x \"$GIT_DIR/hooks/pre-commit\" &&\n        exec \"$GIT_DIR/hooks/pre-commit\"\n:\n",
  ".git/hooks/pre-applypatch.sample": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n# appropriate message if it wants to stop the commit.\n#\n# To enable this hook, rename this file to \"pre-applypatch\".\n\n. git-sh-setup\nprecommit=\"$(git rev-parse --git-path hooks/pre-commit)\"\ntest -x \"$precommit\" && exec \"$precommit\" ${1+\"$@\"}\n:\n",
  ".git/hooks/pre-push.sample": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n# $1 -- Name of the remote to which the push is being done\n# $2 -- URL to which the push is being done\n#\n# If pushing without using a named remote those arguments will be equal.\n#\n# Information about the commits which are being pushed is supplied as lines to\n# the standard input in the form:\n#\n#   <local ref> <local oid> <remote ref> <remote oid>\n#\n# This sample shows how to prevent push of commits where the log message starts\n# with \"WIP\" (work in progress).\n\nremote=\"$1\"\nurl=\"$2\"\n\nzero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')\n\nwhile read local_ref local_oid remote_ref remote_oid\ndo\n\tif test \"$local_oid\" = \"$zero\"\n\tthen\n\t\t# Handle delete\n\t\t:\n\telse\n\t\tif test \"$remote_oid\" = \"$zero\"\n\t\tthen\n\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n\t\t# Check for WIP commit\n\t\tcommit=$(git rev-list -n 1 --grep '^WIP' \"$range\")\n\t\tif test -n \"$commit\"\n\t\tthen\n\t\t\techo >&2 \"Found WIP commit in $local_ref, not pushing\"\n\t\t\texit 1\n\t\tfi\n\tfi\ndone\n\nexit 0\n",
  ".git/hooks/update.sample": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n#\n# Config\n# ------\n# hooks.allowunannotated\n#   This boolean sets whether unannotated tags will be allowed into the\n#   repository.  By default they won't be.\n# hooks.allowdeletetag\n#   This boolean sets whether deleting tags will be allowed in the\n#   repository.  By default they won't be.\n# hooks.allowmodifytag\n#   This boolean sets whether a tag may be modified after creation. By default\n#   it won't be.\n# hooks.allowdeletebranch\n#   This boolean sets whether deleting branches will be allowed in the\n#   repository.  By default they won't be.\n# hooks.denycreatebranch\n#   This boolean sets whether remotely creating branches will be denied\n#   in the repository.  By default this is allowed.\n#\n\n# --- Command line\nrefname=\"$1\"\noldrev=\"$2\"\nnewrev=\"$3\"\n\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\nfi\n\nif [ -z \"$refname\" -o -z \"$oldrev\" -o -z \"$newrev\" ]; then\n\techo \"usage: $0 <ref> <oldrev> <newrev>\" >&2\n\texit 1\nfi\n\n# --- Config\nallowunannotated=$(git config --type=bool hooks.allowunannotated)\nallowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)\ndenycreatebranch=$(git config --type=bool hooks.denycreatebranch)\nallowdeletetag=$(git config --type=bool hooks.allowdeletetag)\nallowmodifytag=$(git config --type=bool hooks.allowmodifytag)\n\n# check for no description\nprojectdesc=$(sed -e '1q' \"$GIT_DIR/description\")\ncase \"$projectdesc\" in\n\"Unnamed repository\"* | \"\")\n\techo \"*** Project description file hasn't been set\" >&2\n\texit 1\n\t;;\nesac\n\n# --- Check types\n# if $newrev is 0000...0000, it's a commit to delete a ref.\nzero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')\nif [ \"$newrev\" = \"$zero\" ]; then\n\tnewrev_type=delete\nelse\n\tnewrev_type=$(git cat-file -t $newrev)\nfi\n\ncase \"$refname\",\"$newrev_type\" in\n\trefs/tags/*,commit)\n\t\t# un-annotated tag\n\t\tshort_refname=${refname##refs/tags/}\n\t\tif [ \"$allowunannotated\" != \"true\" ]; then\n\t\t\techo \"*** The un-annotated tag, $short_refname, is not allowed in this repository\" >&2\n\t\t\techo \"*** Use 'git tag [ -a | -s ]' for tags you want to propagate.\" >&2\n\t\t\texit 1\n\t\tfi\n\t\t;;\n\trefs/tags/*,delete)\n\t\t# delete tag\n\t\tif [ \"$allowdeletetag\" != \"true\" ]; then\n\t\t\techo \"*** Deleting a tag is not allowed in this repository\" >&2\n\t\t\texit 1\n\t\tfi\n\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n\t\t\texit 1\n\t\tfi\n\t\t;;\n\trefs/heads/*,commit)\n\t\t# branch\n\t\tif [ \"$oldrev\" = \"$zero\" -a \"$denycreatebranch\" = \"true\" ]; then\n\t\t\techo \"*** Creating a branch is not allowed in this repository\" >&2\n\t\t\texit 1\n\t\tfi\n\t\t;;\n\trefs/heads/*,delete)\n\t\t# delete branch\n\t\tif [ \"$allowdeletebranch\" != \"true\" ]; then\n\t\t\techo \"*** Deleting a branch is not allowed in this repository\" >&2\n\t\t\texit 1\n\t\tfi\n\t\t;;\n\trefs/remotes/*,commit)\n\t\t# tracking branch\n\t\t;;\n\trefs/remotes/*,delete)\n\t\t# delete tracking branch\n\t\tif [ \"$allowdeletebranch\" != \"true\" ]; then\n\t\t\techo \"*** Deleting a tracking branch is not allowed in this repository\" >&2\n\t\t\texit 1\n\t\tfi\n\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n\n# --- Finished\nexit 0\n",
  ".git/hooks/push-to-checkout.sample": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n# By default, such a push is refused if the working tree and the index\n# of the remote repository has any difference from the currently\n# checked out commit; when both the working tree and the index match\n# the current commit, they are updated to match the newly pushed tip\n# of the branch. This hook is to be used to override the default\n# behaviour; however the code below reimplements the default behaviour\n# as a starting point for convenient modification.\n#\n# The hook receives the commit with which the tip of the current\n# branch is going to be updated:\ncommit=$1\n\n# It can exit with a non-zero status to refuse the push (when it does\n# so, it must not modify the index or the working tree).\ndie () {\n\techo >&2 \"$*\"\n\texit 1\n}\n\n# Or it can make any necessary changes to the working tree and to the\n# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n# The below is a more-or-less exact translation to shell of the C code\n# for the default behaviour for git's push-to-checkout hook defined in\n# the push_to_deploy() function in builtin/receive-pack.c.\n#\n# Note that the hook will be executed from the repository directory,\n# not from the working tree, so if you want to perform operations on\n# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n\n# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
  ".git/refs/heads/main": "643cdc5c3221202f6145b9335bcef8012f87b06c\n",
  ".git/refs/heads/feat/crypto_dp_bootstrap": "643cdc5c3221202f6145b9335bcef8012f87b06c\n",
  ".git/refs/remotes/origin/main": "643cdc5c3221202f6145b9335bcef8012f87b06c\n",
  "src/tests/test_portfolio.py": "\"\"\"\nTests for differentiable portfolio optimization module.\n\"\"\"\n\nimport pytest\nimport jax\nimport jax.numpy as jnp\nimport equinox as eqx\n\nfrom crypto_dp.models.portfolio import (\n    softmax_weights,\n    gumbel_softmax_weights,\n    long_only_weights,\n    long_short_weights,\n    sharpe_ratio,\n    information_ratio,\n    max_drawdown,\n    transaction_cost_penalty,\n    concentration_penalty,\n    DifferentiablePortfolio,\n    portfolio_objective,\n    portfolio_step,\n    backtest_portfolio\n)\n\n\nclass TestWeightTransformations:\n    \"\"\"Test various weight transformation functions.\"\"\"\n    \n    def test_softmax_weights(self):\n        \"\"\"Test softmax weight transformation.\"\"\"\n        scores = jnp.array([1.0, 2.0, 3.0])\n        weights = softmax_weights(scores, temperature=1.0)\n        \n        assert weights.shape == scores.shape\n        assert jnp.allclose(jnp.sum(weights), 1.0)\n        assert jnp.all(weights >= 0.0)\n        \n        # Higher scores should get higher weights\n        assert weights[2] > weights[1] > weights[0]\n    \n    def test_softmax_weights_temperature(self):\n        \"\"\"Test temperature effect in softmax.\"\"\"\n        scores = jnp.array([1.0, 2.0, 3.0])\n        \n        # High temperature should make weights more concentrated\n        weights_high_temp = softmax_weights(scores, temperature=10.0)\n        weights_low_temp = softmax_weights(scores, temperature=0.1)\n        \n        # High temperature should be more concentrated (higher max weight)\n        assert jnp.max(weights_high_temp) > jnp.max(weights_low_temp)\n    \n    def test_gumbel_softmax_weights(self):\n        \"\"\"Test Gumbel-softmax weight transformation.\"\"\"\n        scores = jnp.array([1.0, 2.0, 3.0])\n        key = jax.random.PRNGKey(42)\n        \n        weights = gumbel_softmax_weights(scores, temperature=1.0, key=key)\n        \n        assert weights.shape == scores.shape\n        assert jnp.allclose(jnp.sum(weights), 1.0, atol=1e-6)\n        assert jnp.all(weights >= 0.0)\n    \n    def test_long_only_weights(self):\n        \"\"\"Test long-only weight transformation.\"\"\"\n        scores = jnp.array([-1.0, 2.0, 3.0])\n        weights = long_only_weights(scores)\n        \n        assert weights.shape == scores.shape\n        assert jnp.allclose(jnp.sum(weights), 1.0)\n        assert jnp.all(weights >= 0.0)\n        \n        # Negative scores should result in zero weights\n        assert weights[0] == 0.0\n        assert weights[1] > 0.0\n        assert weights[2] > 0.0\n    \n    def test_long_only_weights_all_negative(self):\n        \"\"\"Test long-only weights with all negative scores.\"\"\"\n        scores = jnp.array([-1.0, -2.0, -3.0])\n        weights = long_only_weights(scores)\n        \n        # Should fall back to equal weights\n        expected_weight = 1.0 / len(scores)\n        assert jnp.allclose(weights, expected_weight)\n    \n    def test_long_short_weights(self):\n        \"\"\"Test long-short weight transformation.\"\"\"\n        scores = jnp.array([-2.0, 1.0, 3.0])\n        weights = long_short_weights(scores, long_weight=1.0, short_weight=1.0)\n        \n        assert weights.shape == scores.shape\n        \n        # Should have both positive and negative weights\n        assert jnp.any(weights > 0.0)\n        assert jnp.any(weights < 0.0)\n        \n        # Positive scores should give positive weights\n        assert weights[1] > 0.0\n        assert weights[2] > 0.0\n        \n        # Negative scores should give negative weights\n        assert weights[0] < 0.0\n\n\nclass TestRiskMetrics:\n    \"\"\"Test risk and performance metrics.\"\"\"\n    \n    def test_sharpe_ratio(self):\n        \"\"\"Test Sharpe ratio calculation.\"\"\"\n        # Create synthetic returns with positive expected return\n        returns = jnp.array([\n            [0.01, 0.02, -0.01],\n            [0.02, -0.01, 0.01],\n            [0.03, 0.01, 0.02],\n            [-0.01, 0.03, 0.01]\n        ])\n        weights = jnp.array([0.4, 0.4, 0.2])\n        \n        sharpe = sharpe_ratio(returns, weights)\n        \n        assert jnp.isscalar(sharpe)\n        assert jnp.isfinite(sharpe)\n        # Should be negative (since we return negative Sharpe for minimization)\n        assert sharpe <= 0.0\n    \n    def test_information_ratio(self):\n        \"\"\"Test information ratio calculation.\"\"\"\n        returns = jnp.array([\n            [0.01, 0.02],\n            [0.02, -0.01],\n            [0.03, 0.01],\n            [-0.01, 0.03]\n        ])\n        weights = jnp.array([0.6, 0.4])\n        benchmark_returns = jnp.array([0.015, 0.005, 0.02, 0.01])\n        \n        ir = information_ratio(returns, weights, benchmark_returns)\n        \n        assert jnp.isscalar(ir)\n        assert jnp.isfinite(ir)\n    \n    def test_max_drawdown(self):\n        \"\"\"Test maximum drawdown calculation.\"\"\"\n        # Create returns that lead to a drawdown\n        returns = jnp.array([\n            [0.10, 0.05],   # Positive returns\n            [0.05, 0.02],   # More positive\n            [-0.15, -0.10], # Large negative (drawdown)\n            [-0.05, -0.03], # More negative\n            [0.08, 0.06]    # Recovery\n        ])\n        weights = jnp.array([0.6, 0.4])\n        \n        dd = max_drawdown(returns, weights)\n        \n        assert jnp.isscalar(dd)\n        assert jnp.isfinite(dd)\n        assert dd <= 0.0  # Drawdown should be negative\n    \n    def test_transaction_cost_penalty(self):\n        \"\"\"Test transaction cost calculation.\"\"\"\n        old_weights = jnp.array([0.3, 0.4, 0.3])\n        new_weights = jnp.array([0.4, 0.3, 0.3])\n        \n        cost = transaction_cost_penalty(old_weights, new_weights, cost_rate=0.001)\n        \n        assert jnp.isscalar(cost)\n        assert jnp.isfinite(cost)\n        assert cost >= 0.0\n        \n        # No change should result in zero cost\n        zero_cost = transaction_cost_penalty(old_weights, old_weights)\n        assert zero_cost == 0.0\n    \n    def test_concentration_penalty(self):\n        \"\"\"Test concentration penalty calculation.\"\"\"\n        # Highly concentrated weights\n        concentrated_weights = jnp.array([0.8, 0.1, 0.1])\n        penalty = concentration_penalty(concentrated_weights, max_weight=0.2)\n        \n        assert jnp.isscalar(penalty)\n        assert jnp.isfinite(penalty)\n        assert penalty > 0.0  # Should penalize concentration\n        \n        # Diversified weights\n        diversified_weights = jnp.array([0.15, 0.15, 0.15, 0.15, 0.4])\n        low_penalty = concentration_penalty(diversified_weights, max_weight=0.5)\n        \n        assert low_penalty < penalty\n\n\nclass TestDifferentiablePortfolio:\n    \"\"\"Test differentiable portfolio model.\"\"\"\n    \n    def test_portfolio_initialization(self):\n        \"\"\"Test portfolio model initialization.\"\"\"\n        input_dim = 20\n        n_assets = 5\n        key = jax.random.PRNGKey(42)\n        \n        model = DifferentiablePortfolio(\n            input_dim=input_dim,\n            n_assets=n_assets,\n            key=key\n        )\n        \n        assert isinstance(model.scoring_network, eqx.nn.MLP)\n        assert callable(model.weight_transform)\n    \n    def test_portfolio_forward_single(self):\n        \"\"\"Test portfolio forward pass with single sample.\"\"\"\n        input_dim = 10\n        n_assets = 3\n        key = jax.random.PRNGKey(42)\n        \n        model = DifferentiablePortfolio(\n            input_dim=input_dim,\n            n_assets=n_assets,\n            key=key\n        )\n        \n        features = jax.random.normal(key, (input_dim,))\n        weights = model(features)\n        \n        assert weights.shape == (n_assets,)\n        assert jnp.allclose(jnp.sum(weights), 1.0, atol=1e-6)\n        assert jnp.all(weights >= 0.0)  # Default is softmax (long-only)\n    \n    def test_portfolio_forward_batch(self):\n        \"\"\"Test portfolio forward pass with batch.\"\"\"\n        input_dim = 10\n        n_assets = 3\n        batch_size = 5\n        key = jax.random.PRNGKey(42)\n        \n        model = DifferentiablePortfolio(\n            input_dim=input_dim,\n            n_assets=n_assets,\n            key=key\n        )\n        \n        features = jax.random.normal(key, (batch_size, input_dim))\n        weights = model(features)\n        \n        assert weights.shape == (batch_size, n_assets)\n        assert jnp.allclose(jnp.sum(weights, axis=1), 1.0, atol=1e-6)\n    \n    def test_portfolio_different_transforms(self):\n        \"\"\"Test different weight transformation methods.\"\"\"\n        input_dim = 5\n        n_assets = 3\n        key = jax.random.PRNGKey(42)\n        features = jax.random.normal(key, (input_dim,))\n        \n        # Test different weight transformations\n        transforms = [\"softmax\", \"long_only\", \"long_short\"]\n        \n        for transform in transforms:\n            model = DifferentiablePortfolio(\n                input_dim=input_dim,\n                n_assets=n_assets,\n                weight_transform=transform,\n                key=key\n            )\n            \n            weights = model(features)\n            assert weights.shape == (n_assets,)\n            assert jnp.isfinite(weights).all()\n\n\nclass TestPortfolioOptimization:\n    \"\"\"Test portfolio optimization functions.\"\"\"\n    \n    def test_portfolio_objective(self):\n        \"\"\"Test portfolio objective function.\"\"\"\n        input_dim = 5\n        n_assets = 3\n        n_periods = 20\n        key = jax.random.PRNGKey(42)\n        \n        model = DifferentiablePortfolio(\n            input_dim=input_dim,\n            n_assets=n_assets,\n            key=key\n        )\n        \n        features = jax.random.normal(key, (input_dim,))\n        returns = jax.random.normal(jax.random.split(key)[0], (n_periods, n_assets)) * 0.01\n        \n        objective = portfolio_objective(model, features, returns)\n        \n        assert jnp.isscalar(objective)\n        assert jnp.isfinite(objective)\n    \n    def test_portfolio_step(self):\n        \"\"\"Test single portfolio optimization step.\"\"\"\n        input_dim = 5\n        n_assets = 3\n        n_periods = 20\n        key = jax.random.PRNGKey(42)\n        \n        model = DifferentiablePortfolio(\n            input_dim=input_dim,\n            n_assets=n_assets,\n            key=key\n        )\n        \n        features = jax.random.normal(key, (input_dim,))\n        returns = jax.random.normal(jax.random.split(key)[0], (n_periods, n_assets)) * 0.01\n        \n        updated_model, loss, weights = portfolio_step(\n            model, features, returns, learning_rate=1e-3\n        )\n        \n        assert isinstance(updated_model, DifferentiablePortfolio)\n        assert jnp.isscalar(loss)\n        assert jnp.isfinite(loss)\n        assert weights.shape == (n_assets,)\n        \n        # Model should be updated\n        original_weights = model(features)\n        assert not jnp.allclose(weights, original_weights, atol=1e-6)\n    \n    def test_portfolio_step_with_transaction_costs(self):\n        \"\"\"Test optimization step with transaction costs.\"\"\"\n        input_dim = 5\n        n_assets = 3\n        n_periods = 20\n        key = jax.random.PRNGKey(42)\n        \n        model = DifferentiablePortfolio(\n            input_dim=input_dim,\n            n_assets=n_assets,\n            key=key\n        )\n        \n        features = jax.random.normal(key, (input_dim,))\n        returns = jax.random.normal(jax.random.split(key)[0], (n_periods, n_assets)) * 0.01\n        old_weights = jnp.array([0.3, 0.4, 0.3])\n        \n        updated_model, loss, weights = portfolio_step(\n            model, features, returns, old_weights=old_weights, beta=0.1\n        )\n        \n        assert isinstance(updated_model, DifferentiablePortfolio)\n        assert jnp.isscalar(loss)\n        assert jnp.isfinite(loss)\n\n\nclass TestBacktesting:\n    \"\"\"Test portfolio backtesting functionality.\"\"\"\n    \n    def test_backtest_portfolio(self):\n        \"\"\"Test portfolio backtesting.\"\"\"\n        input_dim = 5\n        n_assets = 3\n        n_periods = 300  # Need enough periods for lookback\n        key = jax.random.PRNGKey(42)\n        \n        model = DifferentiablePortfolio(\n            input_dim=input_dim,\n            n_assets=n_assets,\n            key=key\n        )\n        \n        features_sequence = jax.random.normal(key, (n_periods, input_dim))\n        returns_sequence = jax.random.normal(\n            jax.random.split(key)[0], (n_periods, n_assets)\n        ) * 0.01\n        \n        portfolio_returns, weights_history, transaction_costs = backtest_portfolio(\n            model, features_sequence, returns_sequence,\n            lookback_window=252, rebalance_freq=5\n        )\n        \n        assert len(portfolio_returns) > 0\n        assert len(weights_history) > 0\n        assert len(transaction_costs) > 0\n        \n        # Check shapes\n        assert jnp.isfinite(jnp.array(portfolio_returns)).all()\n        assert weights_history.shape[1] == n_assets\n        assert jnp.isfinite(jnp.array(transaction_costs)).all()\n\n\nclass TestEdgeCases:\n    \"\"\"Test edge cases and error conditions.\"\"\"\n    \n    def test_zero_returns(self):\n        \"\"\"Test handling of zero returns.\"\"\"\n        returns = jnp.zeros((10, 3))\n        weights = jnp.array([0.3, 0.4, 0.3])\n        \n        # Should handle zero returns gracefully\n        sharpe = sharpe_ratio(returns, weights)\n        assert jnp.isfinite(sharpe)\n    \n    def test_single_asset(self):\n        \"\"\"Test portfolio with single asset.\"\"\"\n        input_dim = 5\n        n_assets = 1\n        key = jax.random.PRNGKey(42)\n        \n        model = DifferentiablePortfolio(\n            input_dim=input_dim,\n            n_assets=n_assets,\n            key=key\n        )\n        \n        features = jax.random.normal(key, (input_dim,))\n        weights = model(features)\n        \n        assert weights.shape == (1,)\n        assert jnp.allclose(jnp.sum(weights), 1.0)\n    \n    def test_invalid_weight_transform(self):\n        \"\"\"Test invalid weight transformation.\"\"\"\n        with pytest.raises(ValueError):\n            DifferentiablePortfolio(\n                input_dim=5,\n                n_assets=3,\n                weight_transform=\"invalid\"\n            )\n\n\nif __name__ == \"__main__\":\n    pytest.main([__file__])",
  "src/tests/__init__.py": "# Test package for crypto_dp",
  "src/tests/test_data_ingest.py": "\"\"\"\nTests for crypto data ingestion module.\n\"\"\"\n\nimport pytest\nimport tempfile\nimport os\nfrom unittest.mock import Mock, patch\nimport polars as pl\nimport jax.numpy as jnp\n\nfrom crypto_dp.data.ingest import (\n    fetch_ohlcv,\n    fetch_coingecko_data,\n    load_to_duck,\n    get_top_crypto_symbols,\n    create_sample_dataset\n)\n\n\nclass TestFetchOHLCV:\n    \"\"\"Test OHLCV data fetching functionality.\"\"\"\n    \n    @patch('crypto_dp.data.ingest.ccxt')\n    def test_fetch_ohlcv_success(self, mock_ccxt):\n        \"\"\"Test successful OHLCV data fetching.\"\"\"\n        # Mock exchange\n        mock_exchange = Mock()\n        mock_exchange.fetch_ohlcv.return_value = [\n            [1640995200000, 47000.0, 48000.0, 46000.0, 47500.0, 1.5],\n            [1640998800000, 47500.0, 48500.0, 47000.0, 48000.0, 2.0],\n        ]\n        mock_ccxt.binance.return_value = mock_exchange\n        \n        # Test fetch\n        start_time = 1640995200000\n        end_time = 1641081600000\n        \n        df = fetch_ohlcv(\"BTC/USDT\", start_time, end_time, \"1h\", \"binance\")\n        \n        assert isinstance(df, pl.DataFrame)\n        assert len(df) == 2\n        assert \"symbol\" in df.columns\n        assert \"timestamp\" in df.columns\n        assert \"open\" in df.columns\n        assert df[\"symbol\"][0] == \"BTC/USDT\"\n    \n    @patch('crypto_dp.data.ingest.ccxt')\n    def test_fetch_ohlcv_empty_data(self, mock_ccxt):\n        \"\"\"Test handling of empty OHLCV data.\"\"\"\n        mock_exchange = Mock()\n        mock_exchange.fetch_ohlcv.return_value = []\n        mock_ccxt.binance.return_value = mock_exchange\n        \n        df = fetch_ohlcv(\"BTC/USDT\", 0, 1000, \"1h\")\n        \n        assert isinstance(df, pl.DataFrame)\n        assert len(df) == 0\n    \n    @patch('crypto_dp.data.ingest.ccxt')\n    def test_fetch_ohlcv_error_handling(self, mock_ccxt):\n        \"\"\"Test error handling in OHLCV fetching.\"\"\"\n        mock_exchange = Mock()\n        mock_exchange.fetch_ohlcv.side_effect = Exception(\"API Error\")\n        mock_ccxt.binance.return_value = mock_exchange\n        \n        with pytest.raises(Exception, match=\"API Error\"):\n            fetch_ohlcv(\"BTC/USDT\", 0, 1000, \"1h\")\n\n\nclass TestFetchCoinGeckoData:\n    \"\"\"Test CoinGecko data fetching functionality.\"\"\"\n    \n    @patch('crypto_dp.data.ingest.CoinGeckoAPI')\n    def test_fetch_coingecko_data_success(self, mock_cg_class):\n        \"\"\"Test successful CoinGecko data fetching.\"\"\"\n        mock_cg = Mock()\n        mock_cg.get_coin_market_chart_by_id.return_value = {\n            'prices': [[1640995200000, 47000.0], [1640998800000, 47500.0]],\n            'market_caps': [[1640995200000, 900000000000], [1640998800000, 910000000000]],\n            'total_volumes': [[1640995200000, 30000000000], [1640998800000, 32000000000]]\n        }\n        mock_cg_class.return_value = mock_cg\n        \n        df = fetch_coingecko_data([\"bitcoin\"], \"usd\", 7)\n        \n        assert isinstance(df, pl.DataFrame)\n        assert len(df) == 2\n        assert \"coin_id\" in df.columns\n        assert \"price\" in df.columns\n        assert \"market_cap\" in df.columns\n        assert df[\"coin_id\"][0] == \"bitcoin\"\n    \n    @patch('crypto_dp.data.ingest.CoinGeckoAPI')\n    def test_fetch_coingecko_data_error(self, mock_cg_class):\n        \"\"\"Test error handling in CoinGecko fetching.\"\"\"\n        mock_cg = Mock()\n        mock_cg.get_coin_market_chart_by_id.side_effect = Exception(\"Rate limit\")\n        mock_cg_class.return_value = mock_cg\n        \n        df = fetch_coingecko_data([\"bitcoin\"], \"usd\", 7)\n        \n        # Should return empty DataFrame on error\n        assert isinstance(df, pl.DataFrame)\n        assert len(df) == 0\n\n\nclass TestDuckDBOperations:\n    \"\"\"Test DuckDB loading and querying operations.\"\"\"\n    \n    def test_load_to_duck_replace(self):\n        \"\"\"Test loading data to DuckDB with replace mode.\"\"\"\n        with tempfile.NamedTemporaryFile(suffix='.db', delete=False) as tmp_file:\n            db_path = tmp_file.name\n        \n        try:\n            # Create test data\n            df = pl.DataFrame({\n                \"timestamp\": [1640995200000, 1640998800000],\n                \"symbol\": [\"BTC/USDT\", \"BTC/USDT\"],\n                \"price\": [47000.0, 47500.0],\n                \"volume\": [1.5, 2.0]\n            })\n            \n            # Load to DuckDB\n            load_to_duck(db_path, df, \"test_table\", \"replace\")\n            \n            # Verify data was loaded\n            import duckdb\n            con = duckdb.connect(db_path)\n            result = con.execute(\"SELECT COUNT(*) FROM test_table\").fetchone()\n            assert result[0] == 2\n            con.close()\n            \n        finally:\n            if os.path.exists(db_path):\n                os.unlink(db_path)\n\n\nclass TestHelperFunctions:\n    \"\"\"Test utility and helper functions.\"\"\"\n    \n    @patch('crypto_dp.data.ingest.CoinGeckoAPI')\n    def test_get_top_crypto_symbols(self, mock_cg_class):\n        \"\"\"Test getting top crypto symbols.\"\"\"\n        mock_cg = Mock()\n        mock_cg.get_coins_markets.return_value = [\n            {\"symbol\": \"btc\", \"market_cap\": 900000000000},\n            {\"symbol\": \"eth\", \"market_cap\": 400000000000},\n            {\"symbol\": \"bnb\", \"market_cap\": 80000000000},\n        ]\n        mock_cg_class.return_value = mock_cg\n        \n        symbols = get_top_crypto_symbols(3)\n        \n        assert len(symbols) <= 3\n        assert all(\"/\" in symbol for symbol in symbols)  # Should be trading pairs\n        assert \"BTC/USDT\" in symbols\n        assert \"ETH/USDT\" in symbols\n    \n    @patch('crypto_dp.data.ingest.CoinGeckoAPI')\n    def test_get_top_crypto_symbols_error(self, mock_cg_class):\n        \"\"\"Test error handling in getting top symbols.\"\"\"\n        mock_cg = Mock()\n        mock_cg.get_coins_markets.side_effect = Exception(\"API Error\")\n        mock_cg_class.return_value = mock_cg\n        \n        symbols = get_top_crypto_symbols(5)\n        \n        assert symbols == []  # Should return empty list on error\n\n\nclass TestCreateSampleDataset:\n    \"\"\"Test sample dataset creation functionality.\"\"\"\n    \n    @patch('crypto_dp.data.ingest.get_top_crypto_symbols')\n    @patch('crypto_dp.data.ingest.fetch_ohlcv')\n    def test_create_sample_dataset(self, mock_fetch, mock_symbols):\n        \"\"\"Test creating a sample dataset.\"\"\"\n        # Mock dependencies\n        mock_symbols.return_value = [\"BTC/USDT\", \"ETH/USDT\"]\n        mock_fetch.return_value = pl.DataFrame({\n            \"timestamp\": [1640995200000],\n            \"symbol\": [\"BTC/USDT\"],\n            \"open\": [47000.0],\n            \"high\": [48000.0],\n            \"low\": [46000.0],\n            \"close\": [47500.0],\n            \"volume\": [1.5],\n            \"timeframe\": [\"1h\"],\n            \"exchange\": [\"binance\"],\n            \"datetime\": [\"2022-01-01 00:00:00\"]\n        })\n        \n        with tempfile.NamedTemporaryFile(suffix='.db', delete=False) as tmp_file:\n            db_path = tmp_file.name\n        \n        try:\n            # Create sample dataset\n            create_sample_dataset(db_path, None, 1)  # 1 day of data\n            \n            # Should not raise exceptions\n            assert os.path.exists(db_path)\n            \n        finally:\n            if os.path.exists(db_path):\n                os.unlink(db_path)\n\n\nif __name__ == \"__main__\":\n    pytest.main([__file__])",
  "src/tests/test_rl_agent.py": "\"\"\"\nTests for RL trading agent module.\n\"\"\"\n\nimport pytest\nimport jax\nimport jax.numpy as jnp\nimport time\nfrom unittest.mock import patch\n\nfrom crypto_dp.rl.agent import (\n    TradingAction,\n    MarketState,\n    RiskLevel,\n    TradingEnvironment,\n    CryptoTradingAgent,\n    RiskManager,\n    train_agent\n)\n\n\nclass TestDataStructures:\n    \"\"\"Test data structures and enums.\"\"\"\n    \n    def test_trading_action(self):\n        \"\"\"Test TradingAction creation.\"\"\"\n        positions = jnp.array([0.1, -0.2, 0.3])\n        action = TradingAction(\n            positions=positions,\n            confidence=0.8,\n            timestamp=time.time()\n        )\n        \n        assert jnp.array_equal(action.positions, positions)\n        assert action.confidence == 0.8\n        assert isinstance(action.timestamp, float)\n    \n    def test_market_state(self):\n        \"\"\"Test MarketState creation.\"\"\"\n        state = MarketState(\n            prices=jnp.array([100.0, 200.0, 50.0]),\n            features=jnp.array([1.0, 2.0, 3.0]),\n            portfolio=jnp.array([0.3, 0.4, 0.3]),\n            cash=10000.0,\n            timestamp=time.time()\n        )\n        \n        assert state.prices.shape == (3,)\n        assert state.features.shape == (3,)\n        assert state.portfolio.shape == (3,)\n        assert state.cash == 10000.0\n    \n    def test_risk_level(self):\n        \"\"\"Test RiskLevel enum.\"\"\"\n        assert RiskLevel.LOW.value == 0.5\n        assert RiskLevel.MEDIUM.value == 1.0\n        assert RiskLevel.HIGH.value == 1.5\n        assert RiskLevel.CRITICAL.value == 2.0\n\n\nclass TestTradingEnvironment:\n    \"\"\"Test trading environment functionality.\"\"\"\n    \n    def test_environment_initialization(self):\n        \"\"\"Test trading environment initialization.\"\"\"\n        symbols = ['BTC/USDT', 'ETH/USDT', 'BNB/USDT']\n        env = TradingEnvironment(symbols, initial_cash=50000.0)\n        \n        assert env.symbols == symbols\n        assert env.n_assets == 3\n        assert env.initial_cash == 50000.0\n        assert env.cash == 50000.0\n    \n    def test_environment_reset(self):\n        \"\"\"Test environment reset.\"\"\"\n        symbols = ['BTC/USDT', 'ETH/USDT']\n        env = TradingEnvironment(symbols)\n        \n        # Modify environment state\n        env.cash = 50000.0\n        env.step_count = 10\n        \n        # Reset\n        initial_state = env.reset()\n        \n        assert env.cash == env.initial_cash\n        assert env.step_count == 0\n        assert isinstance(initial_state, MarketState)\n        assert initial_state.prices.shape == (2,)\n    \n    def test_environment_step(self):\n        \"\"\"Test environment step function.\"\"\"\n        symbols = ['BTC/USDT', 'ETH/USDT']\n        env = TradingEnvironment(symbols)\n        env.reset()\n        \n        action = TradingAction(\n            positions=jnp.array([0.1, -0.1]),\n            confidence=0.7,\n            timestamp=time.time()\n        )\n        \n        new_state, reward, done, info = env.step(action)\n        \n        assert isinstance(new_state, MarketState)\n        assert isinstance(reward, float)\n        assert isinstance(done, bool)\n        assert isinstance(info, dict)\n        \n        # Check info dictionary\n        assert 'transaction_cost' in info\n        assert 'slippage' in info\n        assert 'portfolio_value' in info\n        assert 'step_count' in info\n    \n    def test_environment_termination(self):\n        \"\"\"Test environment termination conditions.\"\"\"\n        symbols = ['BTC/USDT']\n        env = TradingEnvironment(symbols, max_position_size=0.1)\n        env.reset()\n        \n        # Create action that violates position limit\n        large_action = TradingAction(\n            positions=jnp.array([0.5]),  # Exceeds max_position_size\n            confidence=0.5,\n            timestamp=time.time()\n        )\n        \n        _, _, done, _ = env.step(large_action)\n        assert done  # Should terminate due to position limit violation\n\n\nclass TestCryptoTradingAgent:\n    \"\"\"Test crypto trading agent functionality.\"\"\"\n    \n    def test_agent_initialization(self):\n        \"\"\"Test agent initialization.\"\"\"\n        state_dim = 10\n        action_dim = 3\n        key = jax.random.PRNGKey(42)\n        \n        agent = CryptoTradingAgent(\n            state_dim=state_dim,\n            action_dim=action_dim,\n            key=key\n        )\n        \n        assert hasattr(agent, 'policy_network')\n        assert hasattr(agent, 'value_network')\n        assert hasattr(agent, 'risk_module')\n    \n    def test_agent_get_action_deterministic(self):\n        \"\"\"Test deterministic action generation.\"\"\"\n        state_dim = 5\n        action_dim = 3\n        key = jax.random.PRNGKey(42)\n        \n        agent = CryptoTradingAgent(\n            state_dim=state_dim,\n            action_dim=action_dim,\n            key=key\n        )\n        \n        state = jax.random.normal(key, (state_dim,))\n        action = agent.get_action(state, deterministic=True)\n        \n        assert isinstance(action, TradingAction)\n        assert action.positions.shape == (action_dim,)\n        assert jnp.isfinite(action.positions).all()\n        assert isinstance(action.confidence, float)\n        \n        # Deterministic actions should be repeatable\n        action2 = agent.get_action(state, deterministic=True)\n        assert jnp.allclose(action.positions, action2.positions)\n    \n    def test_agent_get_action_stochastic(self):\n        \"\"\"Test stochastic action generation.\"\"\"\n        state_dim = 5\n        action_dim = 3\n        key = jax.random.PRNGKey(42)\n        \n        agent = CryptoTradingAgent(\n            state_dim=state_dim,\n            action_dim=action_dim,\n            key=key\n        )\n        \n        state = jax.random.normal(key, (state_dim,))\n        action1 = agent.get_action(state, deterministic=False, key=jax.random.PRNGKey(1))\n        action2 = agent.get_action(state, deterministic=False, key=jax.random.PRNGKey(2))\n        \n        # Stochastic actions should be different\n        assert not jnp.allclose(action1.positions, action2.positions, atol=1e-6)\n    \n    def test_agent_get_value(self):\n        \"\"\"Test state value estimation.\"\"\"\n        state_dim = 5\n        action_dim = 3\n        key = jax.random.PRNGKey(42)\n        \n        agent = CryptoTradingAgent(\n            state_dim=state_dim,\n            action_dim=action_dim,\n            key=key\n        )\n        \n        state = jax.random.normal(key, (state_dim,))\n        value = agent.get_value(state)\n        \n        assert isinstance(value, float)\n        assert jnp.isfinite(value)\n    \n    def test_agent_market_neutral_constraint(self):\n        \"\"\"Test that agent generates approximately market-neutral positions.\"\"\"\n        state_dim = 5\n        action_dim = 4\n        key = jax.random.PRNGKey(42)\n        \n        agent = CryptoTradingAgent(\n            state_dim=state_dim,\n            action_dim=action_dim,\n            key=key\n        )\n        \n        state = jax.random.normal(key, (state_dim,))\n        action = agent.get_action(state, deterministic=True)\n        \n        # Positions should sum to approximately zero (market neutral)\n        assert jnp.abs(jnp.sum(action.positions)) < 0.1\n\n\nclass TestRiskManager:\n    \"\"\"Test risk management functionality.\"\"\"\n    \n    def test_risk_manager_initialization(self):\n        \"\"\"Test risk manager initialization.\"\"\"\n        rm = RiskManager(\n            max_drawdown=0.05,\n            max_daily_loss=0.02,\n            max_position_size=0.15\n        )\n        \n        assert rm.max_drawdown == 0.05\n        assert rm.max_daily_loss == 0.02\n        assert rm.max_position_size == 0.15\n    \n    def test_risk_check_safe_action(self):\n        \"\"\"Test risk check with safe action.\"\"\"\n        rm = RiskManager()\n        \n        action = TradingAction(\n            positions=jnp.array([0.1, -0.05, 0.08]),\n            confidence=0.8,\n            timestamp=time.time()\n        )\n        \n        is_safe, warnings, modified_action = rm.check_risk_limits(\n            action, portfolio_value=105000.0, volatility=0.5\n        )\n        \n        assert is_safe\n        assert len(warnings) == 0\n        assert jnp.allclose(modified_action.positions, action.positions)\n    \n    def test_risk_check_position_size_violation(self):\n        \"\"\"Test risk check with position size violation.\"\"\"\n        rm = RiskManager(max_position_size=0.1)\n        \n        action = TradingAction(\n            positions=jnp.array([0.3, -0.2, 0.1]),  # First position too large\n            confidence=0.8,\n            timestamp=time.time()\n        )\n        \n        is_safe, warnings, modified_action = rm.check_risk_limits(\n            action, portfolio_value=100000.0, volatility=0.5\n        )\n        \n        assert not is_safe\n        assert len(warnings) > 0\n        assert jnp.max(jnp.abs(modified_action.positions)) <= rm.max_position_size\n    \n    def test_risk_check_drawdown_violation(self):\n        \"\"\"Test risk check with drawdown violation.\"\"\"\n        rm = RiskManager(max_drawdown=0.05)\n        rm.peak_portfolio_value = 100000.0\n        \n        action = TradingAction(\n            positions=jnp.array([0.1, -0.05, 0.08]),\n            confidence=0.8,\n            timestamp=time.time()\n        )\n        \n        # Portfolio value below drawdown limit\n        is_safe, warnings, modified_action = rm.check_risk_limits(\n            action, portfolio_value=90000.0, volatility=0.5  # 10% drawdown\n        )\n        \n        assert not is_safe\n        assert any(\"drawdown\" in warning.lower() for warning in warnings)\n        # Should force flat positions\n        assert jnp.allclose(modified_action.positions, 0.0)\n    \n    def test_risk_check_leverage_violation(self):\n        \"\"\"Test risk check with leverage violation.\"\"\"\n        rm = RiskManager(max_leverage=1.5)\n        \n        action = TradingAction(\n            positions=jnp.array([0.8, -0.9, 0.6]),  # Total exposure = 2.3x\n            confidence=0.8,\n            timestamp=time.time()\n        )\n        \n        is_safe, warnings, modified_action = rm.check_risk_limits(\n            action, portfolio_value=100000.0, volatility=0.5\n        )\n        \n        assert not is_safe\n        assert any(\"leverage\" in warning.lower() for warning in warnings)\n        # Total exposure should be scaled down\n        total_exposure = jnp.sum(jnp.abs(modified_action.positions))\n        assert total_exposure <= rm.max_leverage + 1e-6\n    \n    def test_risk_check_high_volatility(self):\n        \"\"\"Test risk check with high volatility.\"\"\"\n        rm = RiskManager(volatility_threshold=1.0)\n        \n        action = TradingAction(\n            positions=jnp.array([0.1, -0.05, 0.08]),\n            confidence=0.8,\n            timestamp=time.time()\n        )\n        \n        is_safe, warnings, modified_action = rm.check_risk_limits(\n            action, portfolio_value=100000.0, volatility=2.0  # High volatility\n        )\n        \n        assert not is_safe\n        assert any(\"volatility\" in warning.lower() for warning in warnings)\n        # Positions should be scaled down\n        assert jnp.all(jnp.abs(modified_action.positions) < jnp.abs(action.positions))\n\n\nclass TestTraining:\n    \"\"\"Test agent training functionality.\"\"\"\n    \n    @patch('crypto_dp.rl.agent.logger')\n    def test_train_agent_basic(self, mock_logger):\n        \"\"\"Test basic agent training.\"\"\"\n        symbols = ['BTC/USDT', 'ETH/USDT']\n        env = TradingEnvironment(symbols)\n        \n        state_dim = len(symbols) + 20 + len(symbols) + 1\n        action_dim = len(symbols)\n        \n        agent = CryptoTradingAgent(\n            state_dim=state_dim,\n            action_dim=action_dim,\n            key=jax.random.PRNGKey(42)\n        )\n        \n        # Short training run for testing\n        trained_agent, history = train_agent(\n            agent, env,\n            n_episodes=5,\n            learning_rate=1e-3,\n            verbose=False\n        )\n        \n        assert isinstance(trained_agent, CryptoTradingAgent)\n        assert isinstance(history, dict)\n        assert 'episode_rewards' in history\n        assert 'episode_lengths' in history\n        assert 'policy_losses' in history\n        assert len(history['episode_rewards']) == 5\n    \n    def test_train_agent_history_structure(self):\n        \"\"\"Test training history structure.\"\"\"\n        symbols = ['BTC/USDT']\n        env = TradingEnvironment(symbols)\n        \n        state_dim = len(symbols) + 20 + len(symbols) + 1\n        action_dim = len(symbols)\n        \n        agent = CryptoTradingAgent(\n            state_dim=state_dim,\n            action_dim=action_dim,\n            key=jax.random.PRNGKey(42)\n        )\n        \n        trained_agent, history = train_agent(\n            agent, env,\n            n_episodes=3,\n            verbose=False\n        )\n        \n        # Check history structure\n        required_keys = ['episode_rewards', 'episode_lengths', 'policy_losses']\n        for key in required_keys:\n            assert key in history\n            assert len(history[key]) == 3\n            assert all(isinstance(x, (int, float)) for x in history[key])\n\n\nclass TestIntegration:\n    \"\"\"Test integration between components.\"\"\"\n    \n    def test_agent_environment_interaction(self):\n        \"\"\"Test agent interacting with environment.\"\"\"\n        symbols = ['BTC/USDT', 'ETH/USDT']\n        env = TradingEnvironment(symbols)\n        \n        state_dim = len(symbols) + 20 + len(symbols) + 1\n        action_dim = len(symbols)\n        \n        agent = CryptoTradingAgent(\n            state_dim=state_dim,\n            action_dim=action_dim,\n            key=jax.random.PRNGKey(42)\n        )\n        \n        # Reset environment and get initial state\n        state = env.reset()\n        \n        # Convert state to array for agent\n        state_array = jnp.concatenate([\n            state.prices,\n            state.features,\n            state.portfolio,\n            jnp.array([state.cash])\n        ])\n        \n        # Agent generates action\n        action = agent.get_action(state_array, deterministic=True)\n        \n        # Environment processes action\n        new_state, reward, done, info = env.step(action)\n        \n        assert isinstance(new_state, MarketState)\n        assert isinstance(reward, float)\n        assert isinstance(done, bool)\n        assert isinstance(info, dict)\n    \n    def test_agent_risk_manager_integration(self):\n        \"\"\"Test agent with risk manager.\"\"\"\n        state_dim = 5\n        action_dim = 3\n        key = jax.random.PRNGKey(42)\n        \n        agent = CryptoTradingAgent(\n            state_dim=state_dim,\n            action_dim=action_dim,\n            key=key\n        )\n        \n        risk_manager = RiskManager(max_position_size=0.1)\n        \n        state = jax.random.normal(key, (state_dim,))\n        raw_action = agent.get_action(state, deterministic=True)\n        \n        # Apply risk management\n        is_safe, warnings, safe_action = risk_manager.check_risk_limits(\n            raw_action, portfolio_value=100000.0, volatility=0.5\n        )\n        \n        # Risk manager should modify action if needed\n        assert isinstance(safe_action, TradingAction)\n        assert jnp.max(jnp.abs(safe_action.positions)) <= risk_manager.max_position_size\n\n\nclass TestEdgeCases:\n    \"\"\"Test edge cases and error conditions.\"\"\"\n    \n    def test_empty_environment(self):\n        \"\"\"Test environment with no symbols.\"\"\"\n        with pytest.raises((ValueError, IndexError)):\n            TradingEnvironment([])\n    \n    def test_agent_zero_dimensions(self):\n        \"\"\"Test agent with zero dimensions.\"\"\"\n        with pytest.raises((ValueError, IndexError)):\n            CryptoTradingAgent(state_dim=0, action_dim=0)\n    \n    def test_extreme_risk_parameters(self):\n        \"\"\"Test risk manager with extreme parameters.\"\"\"\n        # Very restrictive risk manager\n        rm = RiskManager(\n            max_drawdown=0.001,\n            max_position_size=0.001,\n            max_leverage=0.1\n        )\n        \n        action = TradingAction(\n            positions=jnp.array([0.1, -0.1]),\n            confidence=0.5,\n            timestamp=time.time()\n        )\n        \n        is_safe, warnings, modified_action = rm.check_risk_limits(\n            action, portfolio_value=100000.0, volatility=0.5\n        )\n        \n        # Should heavily restrict positions\n        assert not is_safe\n        assert len(warnings) > 0\n        assert jnp.max(jnp.abs(modified_action.positions)) <= rm.max_position_size\n\n\nif __name__ == \"__main__\":\n    pytest.main([__file__])",
  "src/tests/test_graph_scaffold.py": "\"\"\"\nTests for latent graph scaffold module.\n\"\"\"\n\nimport pytest\nimport jax\nimport jax.numpy as jnp\nimport networkx as nx\n\nfrom crypto_dp.graph.scaffold import (\n    LatentGraph,\n    bic_loss,\n    spectral_regularization,\n    graph_step,\n    train_graph,\n    create_crypto_factor_graph\n)\n\n\nclass TestLatentGraph:\n    \"\"\"Test LatentGraph functionality.\"\"\"\n    \n    def test_latent_graph_initialization(self):\n        \"\"\"Test LatentGraph initialization.\"\"\"\n        n_factors = 5\n        key = jax.random.PRNGKey(42)\n        \n        graph = LatentGraph(n_factors, key=key)\n        \n        assert graph.n_factors == n_factors\n        assert graph.W.shape == (n_factors, n_factors)\n        assert callable(graph.activation)\n    \n    def test_latent_graph_forward_single(self):\n        \"\"\"Test forward pass with single sample.\"\"\"\n        n_factors = 3\n        key = jax.random.PRNGKey(42)\n        \n        graph = LatentGraph(n_factors, key=key)\n        x = jnp.array([1.0, 2.0, 3.0])\n        \n        output = graph(x)\n        \n        assert output.shape == (n_factors,)\n        assert jnp.isfinite(output).all()\n    \n    def test_latent_graph_forward_batch(self):\n        \"\"\"Test forward pass with batch of samples.\"\"\"\n        n_factors = 4\n        batch_size = 10\n        key = jax.random.PRNGKey(42)\n        \n        graph = LatentGraph(n_factors, key=key)\n        x = jax.random.normal(key, (batch_size, n_factors))\n        \n        output = graph(x)\n        \n        assert output.shape == (batch_size, n_factors)\n        assert jnp.isfinite(output).all()\n    \n    def test_multi_step_forward(self):\n        \"\"\"Test multi-step message passing.\"\"\"\n        n_factors = 3\n        key = jax.random.PRNGKey(42)\n        \n        graph = LatentGraph(n_factors, key=key)\n        x = jnp.array([1.0, 2.0, 3.0])\n        \n        output = graph.forward_multi_step(x, n_steps=3)\n        \n        assert output.shape == (n_factors,)\n        assert jnp.isfinite(output).all()\n    \n    def test_get_adjacency_matrix(self):\n        \"\"\"Test getting adjacency matrix.\"\"\"\n        n_factors = 3\n        key = jax.random.PRNGKey(42)\n        \n        graph = LatentGraph(n_factors, key=key)\n        adj_matrix = graph.get_adjacency_matrix()\n        \n        assert adj_matrix.shape == (n_factors, n_factors)\n        assert jnp.array_equal(adj_matrix, graph.W)\n    \n    def test_get_graph_structure(self):\n        \"\"\"Test converting to NetworkX graph.\"\"\"\n        n_factors = 3\n        key = jax.random.PRNGKey(42)\n        \n        graph = LatentGraph(n_factors, key=key)\n        nx_graph = graph.get_graph_structure(threshold=0.01)\n        \n        assert isinstance(nx_graph, nx.DiGraph)\n        assert nx_graph.number_of_nodes() == n_factors\n\n\nclass TestLossFunctions:\n    \"\"\"Test loss functions for graph training.\"\"\"\n    \n    def test_bic_loss(self):\n        \"\"\"Test BIC loss computation.\"\"\"\n        n_factors = 3\n        n_samples = 50\n        key = jax.random.PRNGKey(42)\n        \n        model = LatentGraph(n_factors, key=key)\n        x = jax.random.normal(key, (n_samples, n_factors))\n        target = jax.random.normal(jax.random.split(key)[0], (n_samples, n_factors))\n        \n        loss = bic_loss(model, x, target, lambda_reg=1e-2)\n        \n        assert jnp.isscalar(loss)\n        assert jnp.isfinite(loss)\n        assert loss >= 0.0\n    \n    def test_spectral_regularization(self):\n        \"\"\"Test spectral regularization.\"\"\"\n        n_factors = 3\n        key = jax.random.PRNGKey(42)\n        \n        model = LatentGraph(n_factors, key=key)\n        reg = spectral_regularization(model, alpha=1e-3)\n        \n        assert jnp.isscalar(reg)\n        assert jnp.isfinite(reg)\n        assert reg >= 0.0\n    \n    def test_bic_loss_gradient(self):\n        \"\"\"Test that BIC loss is differentiable.\"\"\"\n        n_factors = 3\n        n_samples = 20\n        key = jax.random.PRNGKey(42)\n        \n        model = LatentGraph(n_factors, key=key)\n        x = jax.random.normal(key, (n_samples, n_factors))\n        target = jax.random.normal(jax.random.split(key)[0], (n_samples, n_factors))\n        \n        # Compute gradient\n        loss_fn = lambda m: bic_loss(m, x, target)\n        grad_fn = jax.grad(loss_fn)\n        \n        try:\n            grads = grad_fn(model)\n            # Should not raise an error\n            assert hasattr(grads, 'W')\n            assert grads.W.shape == model.W.shape\n        except Exception as e:\n            pytest.fail(f\"Gradient computation failed: {e}\")\n\n\nclass TestTraining:\n    \"\"\"Test graph training functionality.\"\"\"\n    \n    def test_graph_step(self):\n        \"\"\"Test single training step.\"\"\"\n        n_factors = 3\n        n_samples = 20\n        key = jax.random.PRNGKey(42)\n        \n        model = LatentGraph(n_factors, key=key)\n        x = jax.random.normal(key, (n_samples, n_factors))\n        target = jax.random.normal(jax.random.split(key)[0], (n_samples, n_factors))\n        \n        updated_model, loss = graph_step(model, x, target, learning_rate=1e-3)\n        \n        assert isinstance(updated_model, LatentGraph)\n        assert jnp.isscalar(loss)\n        assert jnp.isfinite(loss)\n        \n        # Model should be updated (weights changed)\n        assert not jnp.allclose(model.W, updated_model.W, atol=1e-6)\n    \n    def test_train_graph_basic(self):\n        \"\"\"Test basic graph training.\"\"\"\n        n_factors = 3\n        n_samples = 50\n        key = jax.random.PRNGKey(42)\n        \n        model = LatentGraph(n_factors, key=key)\n        x_train = jax.random.normal(key, (n_samples, n_factors))\n        y_train = jax.random.normal(jax.random.split(key)[0], (n_samples, n_factors))\n        \n        trained_model, history = train_graph(\n            model, x_train, y_train,\n            n_epochs=10,\n            learning_rate=1e-3,\n            verbose=False\n        )\n        \n        assert isinstance(trained_model, LatentGraph)\n        assert isinstance(history, dict)\n        assert 'train_loss' in history\n        assert 'spectral_radius' in history\n        assert len(history['train_loss']) == 10\n    \n    def test_train_graph_with_validation(self):\n        \"\"\"Test graph training with validation data.\"\"\"\n        n_factors = 3\n        n_samples = 30\n        key = jax.random.PRNGKey(42)\n        \n        model = LatentGraph(n_factors, key=key)\n        x_train = jax.random.normal(key, (n_samples, n_factors))\n        y_train = jax.random.normal(jax.random.split(key)[0], (n_samples, n_factors))\n        x_val = jax.random.normal(jax.random.split(key)[1], (10, n_factors))\n        y_val = jax.random.normal(jax.random.split(key)[2], (10, n_factors))\n        \n        trained_model, history = train_graph(\n            model, x_train, y_train, x_val, y_val,\n            n_epochs=5,\n            learning_rate=1e-3,\n            patience=3,\n            verbose=False\n        )\n        \n        assert isinstance(trained_model, LatentGraph)\n        assert 'val_loss' in history\n        assert len(history['val_loss']) <= 5  # May stop early\n    \n    def test_training_convergence(self):\n        \"\"\"Test that training reduces loss.\"\"\"\n        n_factors = 3\n        n_samples = 100\n        key = jax.random.PRNGKey(42)\n        \n        # Create synthetic data with some structure\n        true_W = jax.random.normal(key, (n_factors, n_factors)) * 0.1\n        x_data = jax.random.normal(jax.random.split(key)[0], (n_samples, n_factors))\n        y_data = jnp.tanh(x_data @ true_W)  # Target with structure\n        \n        model = LatentGraph(n_factors, key=key)\n        \n        trained_model, history = train_graph(\n            model, x_data, y_data,\n            n_epochs=50,\n            learning_rate=1e-2,\n            verbose=False\n        )\n        \n        # Loss should generally decrease\n        initial_loss = history['train_loss'][0]\n        final_loss = history['train_loss'][-1]\n        assert final_loss < initial_loss\n\n\nclass TestCryptoFactorGraph:\n    \"\"\"Test crypto-specific graph functionality.\"\"\"\n    \n    def test_create_crypto_factor_graph(self):\n        \"\"\"Test creating crypto factor graph.\"\"\"\n        n_assets = 10\n        n_market_factors = 5\n        key = jax.random.PRNGKey(42)\n        \n        graph = create_crypto_factor_graph(n_assets, n_market_factors, key)\n        \n        assert isinstance(graph, LatentGraph)\n        assert graph.n_factors == n_assets + n_market_factors\n        assert graph.W.shape == (n_assets + n_market_factors, n_assets + n_market_factors)\n    \n    def test_crypto_graph_forward_pass(self):\n        \"\"\"Test forward pass with crypto factor graph.\"\"\"\n        n_assets = 5\n        n_market_factors = 3\n        key = jax.random.PRNGKey(42)\n        \n        graph = create_crypto_factor_graph(n_assets, n_market_factors, key)\n        \n        # Simulate crypto features (asset prices + market factors)\n        crypto_features = jax.random.normal(key, (n_assets + n_market_factors,))\n        \n        output = graph(crypto_features)\n        \n        assert output.shape == (n_assets + n_market_factors,)\n        assert jnp.isfinite(output).all()\n\n\nclass TestEdgeCases:\n    \"\"\"Test edge cases and error conditions.\"\"\"\n    \n    def test_zero_factors(self):\n        \"\"\"Test handling of zero factors.\"\"\"\n        with pytest.raises((ValueError, IndexError)):\n            LatentGraph(0)\n    \n    def test_single_factor(self):\n        \"\"\"Test single factor graph.\"\"\"\n        key = jax.random.PRNGKey(42)\n        graph = LatentGraph(1, key=key)\n        \n        x = jnp.array([1.0])\n        output = graph(x)\n        \n        assert output.shape == (1,)\n        assert jnp.isfinite(output).all()\n    \n    def test_large_graph(self):\n        \"\"\"Test large graph handling.\"\"\"\n        n_factors = 100\n        key = jax.random.PRNGKey(42)\n        \n        graph = LatentGraph(n_factors, key=key)\n        x = jax.random.normal(key, (n_factors,))\n        \n        output = graph(x)\n        \n        assert output.shape == (n_factors,)\n        assert jnp.isfinite(output).all()\n\n\nif __name__ == \"__main__\":\n    pytest.main([__file__])",
  "src/crypto_dp/__init__.py": "# Crypto Differentiable Programming Lab\n__version__ = \"0.0.1\"",
  "src/crypto_dp/graph/__init__.py": "# Latent graph scaffold module",
  "src/crypto_dp/graph/scaffold.py": "\"\"\"\nLatent graph scaffold for structured differentiable programming.\n\nThis module implements a differentiable graph structure that can learn\nlatent relationships between cryptocurrency assets and market factors.\nUses JAX for automatic differentiation and efficient computation.\n\"\"\"\n\nfrom typing import Tuple, Optional, Callable\nimport logging\n\nimport jax\nimport jax.numpy as jnp\nimport networkx as nx\nimport equinox as eqx\nfrom jax import grad, jit, vmap\n\n\nlogger = logging.getLogger(__name__)\n\n\nclass LatentGraph(eqx.Module):\n    \"\"\"\n    Differentiable latent graph for crypto asset relationships.\n    \n    This module learns a structured representation of relationships between\n    crypto assets using a parameterized adjacency matrix that can be optimized\n    via gradient descent.\n    \"\"\"\n    \n    W: jnp.ndarray  # Adjacency weight matrix\n    n_factors: int\n    activation: Callable\n    \n    def __init__(\n        self,\n        n_factors: int,\n        activation: Callable = jax.nn.tanh,\n        key: Optional[jax.random.PRNGKey] = None\n    ):\n        \"\"\"\n        Initialize latent graph.\n        \n        Args:\n            n_factors: Number of latent factors/nodes\n            activation: Activation function for message passing\n            key: Random key for initialization\n        \"\"\"\n        if key is None:\n            key = jax.random.PRNGKey(42)\n            \n        self.n_factors = n_factors\n        self.activation = activation\n        \n        # Initialize adjacency matrix with small random weights\n        self.W = jax.random.normal(key, (n_factors, n_factors)) * 0.1\n        \n    def __call__(self, x: jnp.ndarray) -> jnp.ndarray:\n        \"\"\"\n        Forward pass through the latent graph.\n        \n        Args:\n            x: Input features [batch_size, n_factors] or [n_factors]\n        \n        Returns:\n            Graph-transformed features\n        \"\"\"\n        # Linear message passing with activation\n        if x.ndim == 1:\n            # Single sample\n            h = x @ self.W\n        else:\n            # Batch processing\n            h = jnp.einsum('bi,ij->bj', x, self.W)\n            \n        return self.activation(h)\n    \n    def forward_multi_step(self, x: jnp.ndarray, n_steps: int = 3) -> jnp.ndarray:\n        \"\"\"\n        Multi-step message passing through the graph.\n        \n        Args:\n            x: Input features\n            n_steps: Number of message passing steps\n        \n        Returns:\n            Features after n_steps of graph propagation\n        \"\"\"\n        h = x\n        for _ in range(n_steps):\n            h = self(h)\n        return h\n    \n    def get_adjacency_matrix(self) -> jnp.ndarray:\n        \"\"\"Get the current adjacency matrix.\"\"\"\n        return self.W\n    \n    def get_graph_structure(self, threshold: float = 0.1) -> nx.DiGraph:\n        \"\"\"\n        Convert learned weights to a NetworkX graph for visualization.\n        \n        Args:\n            threshold: Minimum weight magnitude to include edge\n        \n        Returns:\n            NetworkX directed graph\n        \"\"\"\n        G = nx.DiGraph()\n        G.add_nodes_from(range(self.n_factors))\n        \n        weights = self.W\n        for i in range(self.n_factors):\n            for j in range(self.n_factors):\n                if abs(weights[i, j]) > threshold:\n                    G.add_edge(i, j, weight=float(weights[i, j]))\n        \n        return G\n\n\ndef bic_loss(\n    model: LatentGraph,\n    x: jnp.ndarray,\n    target: jnp.ndarray,\n    lambda_reg: float = 1e-2\n) -> jnp.ndarray:\n    \"\"\"\n    BIC-like loss function for graph structure learning.\n    \n    Combines prediction accuracy with complexity penalty to encourage\n    sparse, interpretable graph structures.\n    \n    Args:\n        model: LatentGraph model\n        x: Input features\n        target: Target values\n        lambda_reg: Regularization strength\n    \n    Returns:\n        Scalar loss value\n    \"\"\"\n    # Forward pass\n    preds = model(x)\n    \n    # Prediction loss (MSE)\n    mse = jnp.mean((preds - target) ** 2)\n    \n    # Complexity penalty (L1 regularization on adjacency matrix)\n    complexity = lambda_reg * jnp.sum(jnp.abs(model.W))\n    \n    # BIC-like penalty (encourages sparsity)\n    n_edges = jnp.sum(jnp.abs(model.W) > 1e-6)\n    bic_penalty = 0.5 * n_edges * jnp.log(x.shape[0])  # log(n_samples)\n    \n    return mse + complexity + lambda_reg * bic_penalty\n\n\ndef spectral_regularization(model: LatentGraph, alpha: float = 1e-3) -> jnp.ndarray:\n    \"\"\"\n    Spectral regularization to encourage stable graph dynamics.\n    \n    Args:\n        model: LatentGraph model\n        alpha: Regularization strength\n    \n    Returns:\n        Regularization term\n    \"\"\"\n    # Compute spectral radius (largest eigenvalue magnitude)\n    eigenvals = jnp.linalg.eigvals(model.W)\n    spectral_radius = jnp.max(jnp.abs(eigenvals))\n    \n    # Penalty for spectral radius > 1 (instability)\n    return alpha * jnp.maximum(0.0, spectral_radius - 1.0) ** 2\n\n\n@jit\ndef graph_step(\n    model: LatentGraph,\n    x: jnp.ndarray,\n    target: jnp.ndarray,\n    learning_rate: float = 1e-3,\n    lambda_reg: float = 1e-2\n) -> Tuple[LatentGraph, jnp.ndarray]:\n    \"\"\"\n    Single optimization step for the latent graph.\n    \n    Args:\n        model: Current LatentGraph model\n        x: Input features\n        target: Target values\n        learning_rate: Learning rate for gradient descent\n        lambda_reg: Regularization strength\n    \n    Returns:\n        Updated model and loss value\n    \"\"\"\n    def loss_fn(model):\n        return bic_loss(model, x, target, lambda_reg) + spectral_regularization(model)\n    \n    loss, grads = eqx.filter_value_and_grad(loss_fn)(model)\n    model = eqx.apply_updates(model, grads, learning_rate)\n    \n    return model, loss\n\n\ndef train_graph(\n    model: LatentGraph,\n    x_train: jnp.ndarray,\n    y_train: jnp.ndarray,\n    x_val: Optional[jnp.ndarray] = None,\n    y_val: Optional[jnp.ndarray] = None,\n    n_epochs: int = 1000,\n    learning_rate: float = 1e-3,\n    lambda_reg: float = 1e-2,\n    patience: int = 50,\n    verbose: bool = True\n) -> Tuple[LatentGraph, dict]:\n    \"\"\"\n    Train the latent graph model.\n    \n    Args:\n        model: Initial LatentGraph model\n        x_train: Training features\n        y_train: Training targets\n        x_val: Validation features (optional)\n        y_val: Validation targets (optional)\n        n_epochs: Maximum number of training epochs\n        learning_rate: Learning rate\n        lambda_reg: Regularization strength\n        patience: Early stopping patience\n        verbose: Whether to print training progress\n    \n    Returns:\n        Trained model and training history\n    \"\"\"\n    history = {\n        'train_loss': [],\n        'val_loss': [],\n        'spectral_radius': []\n    }\n    \n    best_val_loss = float('inf')\n    patience_counter = 0\n    best_model = model\n    \n    for epoch in range(n_epochs):\n        # Training step\n        model, train_loss = graph_step(\n            model, x_train, y_train, learning_rate, lambda_reg\n        )\n        \n        history['train_loss'].append(float(train_loss))\n        \n        # Compute spectral radius for monitoring\n        eigenvals = jnp.linalg.eigvals(model.W)\n        spectral_radius = float(jnp.max(jnp.abs(eigenvals)))\n        history['spectral_radius'].append(spectral_radius)\n        \n        # Validation\n        if x_val is not None and y_val is not None:\n            val_loss = bic_loss(model, x_val, y_val, lambda_reg)\n            history['val_loss'].append(float(val_loss))\n            \n            # Early stopping\n            if val_loss < best_val_loss:\n                best_val_loss = val_loss\n                best_model = model\n                patience_counter = 0\n            else:\n                patience_counter += 1\n                \n            if patience_counter >= patience:\n                if verbose:\n                    logger.info(f\"Early stopping at epoch {epoch}\")\n                break\n        else:\n            best_model = model\n        \n        # Logging\n        if verbose and epoch % 100 == 0:\n            if x_val is not None:\n                logger.info(\n                    f\"Epoch {epoch}: train_loss={train_loss:.6f}, \"\n                    f\"val_loss={val_loss:.6f}, spectral_radius={spectral_radius:.4f}\"\n                )\n            else:\n                logger.info(\n                    f\"Epoch {epoch}: train_loss={train_loss:.6f}, \"\n                    f\"spectral_radius={spectral_radius:.4f}\"\n                )\n    \n    return best_model, history\n\n\ndef create_crypto_factor_graph(\n    n_assets: int,\n    n_market_factors: int = 5,\n    key: Optional[jax.random.PRNGKey] = None\n) -> LatentGraph:\n    \"\"\"\n    Create a latent graph specifically for crypto asset relationships.\n    \n    Args:\n        n_assets: Number of crypto assets\n        n_market_factors: Number of market-wide factors (e.g., BTC dominance, DeFi, etc.)\n        key: Random key for initialization\n    \n    Returns:\n        Initialized LatentGraph for crypto assets\n    \"\"\"\n    total_factors = n_assets + n_market_factors\n    \n    if key is None:\n        key = jax.random.PRNGKey(42)\n    \n    model = LatentGraph(total_factors, key=key)\n    \n    logger.info(\n        f\"Created crypto factor graph with {n_assets} assets \"\n        f\"and {n_market_factors} market factors\"\n    )\n    \n    return model\n\n\nif __name__ == \"__main__\":\n    # Example usage\n    logging.basicConfig(level=logging.INFO)\n    \n    # Create sample data\n    key = jax.random.PRNGKey(42)\n    n_samples, n_factors = 1000, 10\n    \n    x_data = jax.random.normal(key, (n_samples, n_factors))\n    \n    # Create synthetic targets with some structure\n    true_W = jax.random.normal(jax.random.split(key)[0], (n_factors, n_factors)) * 0.1\n    y_data = x_data @ true_W + 0.1 * jax.random.normal(jax.random.split(key)[1], (n_samples, n_factors))\n    \n    # Initialize and train model\n    model = LatentGraph(n_factors, key=key)\n    trained_model, history = train_graph(model, x_data, y_data, n_epochs=500)\n    \n    logger.info(\"Training completed successfully\")",
  "src/crypto_dp/utils/__init__.py": "# Utility functions and helpers",
  "src/crypto_dp/models/__init__.py": "# Differentiable programming models module",
  "src/crypto_dp/models/portfolio.py": "\"\"\"\nDifferentiable portfolio optimization for crypto trading.\n\nThis module implements end-to-end differentiable portfolio construction\nand optimization using JAX. Supports various risk measures, transaction\ncosts, and portfolio constraints.\n\"\"\"\n\nfrom typing import Tuple, Optional, Callable\nimport logging\n\nimport jax\nimport jax.numpy as jnp\nimport equinox as eqx\nfrom jax import jit, grad, vmap\n\n\nlogger = logging.getLogger(__name__)\n\n\ndef softmax_weights(scores: jnp.ndarray, temperature: float = 10.0) -> jnp.ndarray:\n    \"\"\"\n    Convert raw scores to portfolio weights using temperature-scaled softmax.\n    \n    Args:\n        scores: Raw asset scores [n_assets]\n        temperature: Temperature parameter (higher = more concentrated)\n    \n    Returns:\n        Portfolio weights that sum to 1\n    \"\"\"\n    scaled_scores = scores * temperature\n    # Numerical stability\n    scaled_scores = scaled_scores - jnp.max(scaled_scores)\n    weights = jnp.exp(scaled_scores)\n    return weights / jnp.sum(weights)\n\n\ndef gumbel_softmax_weights(\n    scores: jnp.ndarray,\n    temperature: float = 1.0,\n    key: Optional[jax.random.PRNGKey] = None\n) -> jnp.ndarray:\n    \"\"\"\n    Gumbel-softmax for differentiable discrete portfolio selection.\n    \n    Args:\n        scores: Raw asset scores [n_assets]\n        temperature: Temperature parameter\n        key: Random key for Gumbel noise\n    \n    Returns:\n        Differentiable discrete-like weights\n    \"\"\"\n    if key is None:\n        key = jax.random.PRNGKey(42)\n    \n    # Sample Gumbel noise\n    gumbel_noise = -jnp.log(-jnp.log(jax.random.uniform(key, scores.shape)))\n    \n    # Gumbel-softmax\n    y = scores + gumbel_noise\n    return softmax_weights(y, temperature)\n\n\ndef long_only_weights(scores: jnp.ndarray) -> jnp.ndarray:\n    \"\"\"\n    Convert scores to long-only portfolio weights.\n    \n    Args:\n        scores: Raw asset scores [n_assets]\n    \n    Returns:\n        Long-only weights (all non-negative, sum to 1)\n    \"\"\"\n    positive_scores = jnp.maximum(scores, 0.0)\n    total = jnp.sum(positive_scores)\n    \n    # Handle edge case where all scores are negative\n    return jnp.where(\n        total > 1e-8,\n        positive_scores / total,\n        jnp.ones_like(scores) / len(scores)  # Equal weights fallback\n    )\n\n\ndef long_short_weights(\n    scores: jnp.ndarray,\n    long_weight: float = 1.0,\n    short_weight: float = 1.0\n) -> jnp.ndarray:\n    \"\"\"\n    Convert scores to long-short portfolio weights.\n    \n    Args:\n        scores: Raw asset scores [n_assets]\n        long_weight: Total weight for long positions\n        short_weight: Total weight for short positions\n    \n    Returns:\n        Long-short weights\n    \"\"\"\n    long_scores = jnp.maximum(scores, 0.0)\n    short_scores = jnp.maximum(-scores, 0.0)\n    \n    # Normalize separately\n    long_sum = jnp.sum(long_scores)\n    short_sum = jnp.sum(short_scores)\n    \n    long_weights = jnp.where(\n        long_sum > 1e-8,\n        long_scores / long_sum * long_weight,\n        0.0\n    )\n    \n    short_weights = jnp.where(\n        short_sum > 1e-8,\n        -short_scores / short_sum * short_weight,\n        0.0\n    )\n    \n    return long_weights + short_weights\n\n\ndef sharpe_ratio(returns: jnp.ndarray, weights: jnp.ndarray) -> jnp.ndarray:\n    \"\"\"\n    Compute differentiable Sharpe ratio.\n    \n    Args:\n        returns: Asset returns [n_periods, n_assets]\n        weights: Portfolio weights [n_assets]\n    \n    Returns:\n        Negative Sharpe ratio (for minimization)\n    \"\"\"\n    portfolio_returns = jnp.dot(returns, weights)\n    mean_return = jnp.mean(portfolio_returns)\n    vol = jnp.std(portfolio_returns)\n    \n    # Add small epsilon for numerical stability\n    sharpe = mean_return / (vol + 1e-8)\n    return -sharpe  # Negative for minimization\n\n\ndef information_ratio(\n    returns: jnp.ndarray,\n    weights: jnp.ndarray,\n    benchmark_returns: jnp.ndarray\n) -> jnp.ndarray:\n    \"\"\"\n    Compute differentiable information ratio.\n    \n    Args:\n        returns: Asset returns [n_periods, n_assets]\n        weights: Portfolio weights [n_assets]\n        benchmark_returns: Benchmark returns [n_periods]\n    \n    Returns:\n        Negative information ratio (for minimization)\n    \"\"\"\n    portfolio_returns = jnp.dot(returns, weights)\n    excess_returns = portfolio_returns - benchmark_returns\n    \n    mean_excess = jnp.mean(excess_returns)\n    tracking_error = jnp.std(excess_returns)\n    \n    ir = mean_excess / (tracking_error + 1e-8)\n    return -ir  # Negative for minimization\n\n\ndef max_drawdown(returns: jnp.ndarray, weights: jnp.ndarray) -> jnp.ndarray:\n    \"\"\"\n    Compute maximum drawdown (approximated for differentiability).\n    \n    Args:\n        returns: Asset returns [n_periods, n_assets]\n        weights: Portfolio weights [n_assets]\n    \n    Returns:\n        Maximum drawdown\n    \"\"\"\n    portfolio_returns = jnp.dot(returns, weights)\n    \n    # Cumulative returns\n    cum_returns = jnp.cumprod(1 + portfolio_returns)\n    \n    # Running maximum (approximated with soft maximum)\n    running_max = jnp.maximum.accumulate(cum_returns)\n    \n    # Drawdowns\n    drawdowns = (cum_returns - running_max) / running_max\n    \n    return jnp.min(drawdowns)  # Most negative drawdown\n\n\ndef transaction_cost_penalty(\n    old_weights: jnp.ndarray,\n    new_weights: jnp.ndarray,\n    cost_rate: float = 0.001\n) -> jnp.ndarray:\n    \"\"\"\n    Compute transaction cost penalty.\n    \n    Args:\n        old_weights: Previous portfolio weights [n_assets]\n        new_weights: New portfolio weights [n_assets]\n        cost_rate: Transaction cost rate (e.g., 0.001 = 0.1%)\n    \n    Returns:\n        Transaction cost penalty\n    \"\"\"\n    turnover = jnp.sum(jnp.abs(new_weights - old_weights))\n    return cost_rate * turnover\n\n\ndef concentration_penalty(weights: jnp.ndarray, max_weight: float = 0.2) -> jnp.ndarray:\n    \"\"\"\n    Penalty for overly concentrated portfolios.\n    \n    Args:\n        weights: Portfolio weights [n_assets]\n        max_weight: Maximum allowed weight per asset\n    \n    Returns:\n        Concentration penalty\n    \"\"\"\n    excess_weights = jnp.maximum(jnp.abs(weights) - max_weight, 0.0)\n    return jnp.sum(excess_weights ** 2)\n\n\nclass DifferentiablePortfolio(eqx.Module):\n    \"\"\"\n    End-to-end differentiable portfolio optimization model.\n    \"\"\"\n    \n    scoring_network: eqx.nn.MLP\n    weight_transform: Callable\n    \n    def __init__(\n        self,\n        input_dim: int,\n        hidden_dims: Tuple[int, ...] = (64, 32),\n        n_assets: int = 10,\n        weight_transform: str = \"softmax\",\n        key: Optional[jax.random.PRNGKey] = None\n    ):\n        \"\"\"\n        Initialize differentiable portfolio model.\n        \n        Args:\n            input_dim: Input feature dimension\n            hidden_dims: Hidden layer dimensions\n            n_assets: Number of assets\n            weight_transform: Weight transformation method\n            key: Random key for initialization\n        \"\"\"\n        if key is None:\n            key = jax.random.PRNGKey(42)\n        \n        # Scoring network\n        self.scoring_network = eqx.nn.MLP(\n            in_size=input_dim,\n            out_size=n_assets,\n            width_size=hidden_dims[0],\n            depth=len(hidden_dims),\n            key=key\n        )\n        \n        # Weight transformation function\n        if weight_transform == \"softmax\":\n            self.weight_transform = softmax_weights\n        elif weight_transform == \"long_only\":\n            self.weight_transform = long_only_weights\n        elif weight_transform == \"long_short\":\n            self.weight_transform = long_short_weights\n        else:\n            raise ValueError(f\"Unknown weight transform: {weight_transform}\")\n    \n    def __call__(self, features: jnp.ndarray) -> jnp.ndarray:\n        \"\"\"\n        Generate portfolio weights from input features.\n        \n        Args:\n            features: Input features [input_dim] or [batch_size, input_dim]\n        \n        Returns:\n            Portfolio weights\n        \"\"\"\n        scores = self.scoring_network(features)\n        \n        if scores.ndim == 1:\n            # Single sample\n            return self.weight_transform(scores)\n        else:\n            # Batch processing\n            return vmap(self.weight_transform)(scores)\n\n\ndef portfolio_objective(\n    model: DifferentiablePortfolio,\n    features: jnp.ndarray,\n    returns: jnp.ndarray,\n    old_weights: Optional[jnp.ndarray] = None,\n    alpha: float = 1.0,\n    beta: float = 0.1,\n    gamma: float = 0.01\n) -> jnp.ndarray:\n    \"\"\"\n    Combined portfolio optimization objective.\n    \n    Args:\n        model: DifferentiablePortfolio model\n        features: Input features for current period\n        returns: Historical returns [n_periods, n_assets]\n        old_weights: Previous portfolio weights (for transaction costs)\n        alpha: Weight for return-based objective (Sharpe ratio)\n        beta: Weight for transaction cost penalty\n        gamma: Weight for concentration penalty\n    \n    Returns:\n        Combined objective (to minimize)\n    \"\"\"\n    # Generate new weights\n    new_weights = model(features)\n    \n    # Sharpe ratio (primary objective)\n    sharpe_loss = sharpe_ratio(returns, new_weights)\n    \n    # Transaction cost penalty\n    if old_weights is not None:\n        tc_penalty = transaction_cost_penalty(old_weights, new_weights)\n    else:\n        tc_penalty = 0.0\n    \n    # Concentration penalty\n    conc_penalty = concentration_penalty(new_weights)\n    \n    return alpha * sharpe_loss + beta * tc_penalty + gamma * conc_penalty\n\n\n@jit\ndef portfolio_step(\n    model: DifferentiablePortfolio,\n    features: jnp.ndarray,\n    returns: jnp.ndarray,\n    old_weights: Optional[jnp.ndarray] = None,\n    learning_rate: float = 1e-3,\n    alpha: float = 1.0,\n    beta: float = 0.1,\n    gamma: float = 0.01\n) -> Tuple[DifferentiablePortfolio, jnp.ndarray, jnp.ndarray]:\n    \"\"\"\n    Single optimization step for portfolio model.\n    \n    Returns:\n        Updated model, loss, and generated weights\n    \"\"\"\n    def objective_fn(model):\n        return portfolio_objective(model, features, returns, old_weights, alpha, beta, gamma)\n    \n    loss, grads = eqx.filter_value_and_grad(objective_fn)(model)\n    model = eqx.apply_updates(model, grads, learning_rate)\n    \n    # Generate weights with updated model\n    weights = model(features)\n    \n    return model, loss, weights\n\n\ndef backtest_portfolio(\n    model: DifferentiablePortfolio,\n    features_sequence: jnp.ndarray,\n    returns_sequence: jnp.ndarray,\n    lookback_window: int = 252,\n    rebalance_freq: int = 1\n) -> Tuple[jnp.ndarray, jnp.ndarray, jnp.ndarray]:\n    \"\"\"\n    Backtest portfolio strategy.\n    \n    Args:\n        model: Trained DifferentiablePortfolio model\n        features_sequence: Feature sequence [n_periods, input_dim]\n        returns_sequence: Return sequence [n_periods, n_assets]\n        lookback_window: Number of periods for return calculation\n        rebalance_freq: Rebalancing frequency (1 = daily)\n    \n    Returns:\n        Portfolio returns, weights over time, transaction costs\n    \"\"\"\n    n_periods = features_sequence.shape[0]\n    n_assets = returns_sequence.shape[1]\n    \n    portfolio_returns = []\n    weights_history = []\n    transaction_costs = []\n    \n    current_weights = jnp.ones(n_assets) / n_assets  # Start with equal weights\n    \n    for t in range(lookback_window, n_periods):\n        if t % rebalance_freq == 0:\n            # Get features for current period\n            features = features_sequence[t]\n            \n            # Historical returns for optimization\n            historical_returns = returns_sequence[t-lookback_window:t]\n            \n            # Generate new weights\n            new_weights = model(features)\n            \n            # Compute transaction costs\n            tc = transaction_cost_penalty(current_weights, new_weights)\n            transaction_costs.append(float(tc))\n            \n            current_weights = new_weights\n        \n        weights_history.append(current_weights)\n        \n        # Compute portfolio return for this period\n        if t < n_periods - 1:  # Avoid index out of bounds\n            period_return = jnp.dot(current_weights, returns_sequence[t])\n            portfolio_returns.append(float(period_return))\n    \n    return (\n        jnp.array(portfolio_returns),\n        jnp.array(weights_history),\n        jnp.array(transaction_costs)\n    )\n\n\nif __name__ == \"__main__\":\n    # Example usage\n    logging.basicConfig(level=logging.INFO)\n    \n    # Create sample data\n    key = jax.random.PRNGKey(42)\n    n_periods, n_assets, input_dim = 1000, 10, 20\n    \n    # Synthetic features and returns\n    features = jax.random.normal(key, (n_periods, input_dim))\n    returns = 0.01 * jax.random.normal(jax.random.split(key)[0], (n_periods, n_assets))\n    \n    # Initialize portfolio model\n    model = DifferentiablePortfolio(\n        input_dim=input_dim,\n        n_assets=n_assets,\n        key=key\n    )\n    \n    # Single optimization step\n    model, loss, weights = portfolio_step(\n        model,\n        features[0],\n        returns[:252],  # Use first 252 periods as history\n        learning_rate=1e-3\n    )\n    \n    logger.info(f\"Optimization step completed. Loss: {loss:.6f}\")\n    logger.info(f\"Generated weights: {weights}\")",
  "src/crypto_dp/data/ingest.py": "\"\"\"\nData ingestion module for crypto market data.\n\nSupports multiple data sources:\n- CCXT for exchange data (public + private REST & websockets)\n- CoinGecko for market cap and price data\n- DuckDB for efficient storage and querying\n\"\"\"\n\nfrom typing import Optional, List, Dict, Any\nimport datetime as dt\nimport logging\n\nimport ccxt\nimport duckdb\nimport polars as pl\nfrom pycoingecko import CoinGeckoAPI\n\n\nlogger = logging.getLogger(__name__)\n\n\ndef fetch_ohlcv(\n    symbol: str,\n    start: int,\n    end: int,\n    timeframe: str = \"1h\",\n    exchange: str = \"binance\"\n) -> pl.DataFrame:\n    \"\"\"\n    Fetch OHLCV data from a crypto exchange.\n    \n    Args:\n        symbol: Trading pair symbol (e.g., 'BTC/USDT')\n        start: Start timestamp in milliseconds\n        end: End timestamp in milliseconds\n        timeframe: Timeframe for candlesticks ('1m', '5m', '1h', '1d', etc.)\n        exchange: Exchange name (default: 'binance')\n    \n    Returns:\n        Polars DataFrame with OHLCV data\n    \"\"\"\n    try:\n        # Initialize exchange\n        exchange_class = getattr(ccxt, exchange)\n        ex = exchange_class({\n            'rateLimit': 1200,\n            'enableRateLimit': True,\n        })\n        \n        # Fetch data\n        data = ex.fetch_ohlcv(symbol, timeframe=timeframe, since=start, limit=None)\n        \n        # Convert to DataFrame\n        df = pl.DataFrame(\n            data,\n            schema=[\"timestamp\", \"open\", \"high\", \"low\", \"close\", \"volume\"]\n        )\n        \n        # Filter by end time\n        df = df.filter(pl.col(\"timestamp\") < end)\n        \n        # Add metadata columns\n        df = df.with_columns([\n            pl.lit(symbol).alias(\"symbol\"),\n            pl.lit(timeframe).alias(\"timeframe\"),\n            pl.lit(exchange).alias(\"exchange\"),\n            pl.from_epoch(pl.col(\"timestamp\") // 1000).alias(\"datetime\")\n        ])\n        \n        logger.info(f\"Fetched {len(df)} rows for {symbol} from {exchange}\")\n        return df\n        \n    except Exception as e:\n        logger.error(f\"Failed to fetch {symbol} from {exchange}: {e}\")\n        raise\n\n\ndef fetch_coingecko_data(\n    coin_ids: List[str],\n    vs_currency: str = \"usd\",\n    days: int = 365\n) -> pl.DataFrame:\n    \"\"\"\n    Fetch historical price data from CoinGecko.\n    \n    Args:\n        coin_ids: List of CoinGecko coin IDs\n        vs_currency: Currency to price against (default: 'usd')\n        days: Number of days of historical data\n    \n    Returns:\n        Polars DataFrame with price, market cap, and volume data\n    \"\"\"\n    cg = CoinGeckoAPI()\n    \n    all_data = []\n    for coin_id in coin_ids:\n        try:\n            data = cg.get_coin_market_chart_by_id(\n                id=coin_id,\n                vs_currency=vs_currency,\n                days=days\n            )\n            \n            # Extract time series data\n            prices = data['prices']\n            market_caps = data['market_caps']\n            volumes = data['total_volumes']\n            \n            # Create DataFrame\n            df = pl.DataFrame({\n                \"timestamp\": [p[0] for p in prices],\n                \"price\": [p[1] for p in prices],\n                \"market_cap\": [m[1] for m in market_caps],\n                \"volume\": [v[1] for v in volumes],\n                \"coin_id\": coin_id,\n                \"vs_currency\": vs_currency\n            })\n            \n            df = df.with_columns(\n                pl.from_epoch(pl.col(\"timestamp\") // 1000).alias(\"datetime\")\n            )\n            \n            all_data.append(df)\n            logger.info(f\"Fetched {len(df)} rows for {coin_id} from CoinGecko\")\n            \n        except Exception as e:\n            logger.error(f\"Failed to fetch {coin_id} from CoinGecko: {e}\")\n            continue\n    \n    if all_data:\n        return pl.concat(all_data)\n    else:\n        return pl.DataFrame()\n\n\ndef load_to_duck(\n    db_path: str,\n    df: pl.DataFrame,\n    table: str,\n    mode: str = \"replace\"\n) -> None:\n    \"\"\"\n    Load DataFrame to DuckDB.\n    \n    Args:\n        db_path: Path to DuckDB database file\n        df: Polars DataFrame to load\n        table: Table name\n        mode: Load mode ('replace', 'append', 'upsert')\n    \"\"\"\n    try:\n        con = duckdb.connect(db_path)\n        \n        if mode == \"replace\":\n            con.execute(f\"DROP TABLE IF EXISTS {table}\")\n            con.execute(f\"CREATE TABLE {table} AS SELECT * FROM df\")\n        elif mode == \"append\":\n            con.execute(f\"INSERT INTO {table} SELECT * FROM df\")\n        elif mode == \"upsert\":\n            # Simple upsert based on timestamp and symbol\n            con.execute(f\"\"\"\n                INSERT INTO {table} \n                SELECT * FROM df \n                WHERE NOT EXISTS (\n                    SELECT 1 FROM {table} t2 \n                    WHERE t2.timestamp = df.timestamp \n                    AND t2.symbol = df.symbol\n                )\n            \"\"\")\n        \n        logger.info(f\"Loaded {len(df)} rows to {table} in {db_path}\")\n        \n    except Exception as e:\n        logger.error(f\"Failed to load data to {table}: {e}\")\n        raise\n    finally:\n        con.close()\n\n\ndef get_top_crypto_symbols(limit: int = 50) -> List[str]:\n    \"\"\"\n    Get top cryptocurrency symbols by market cap.\n    \n    Args:\n        limit: Number of top coins to return\n    \n    Returns:\n        List of trading pair symbols (e.g., ['BTC/USDT', 'ETH/USDT', ...])\n    \"\"\"\n    try:\n        cg = CoinGeckoAPI()\n        coins = cg.get_coins_markets(\n            vs_currency='usd',\n            order='market_cap_desc',\n            per_page=limit,\n            page=1\n        )\n        \n        # Convert to exchange symbols (assuming USDT pairs)\n        symbols = []\n        for coin in coins:\n            symbol = coin['symbol'].upper()\n            if symbol not in ['USDT', 'USDC', 'BUSD']:  # Skip stablecoins\n                symbols.append(f\"{symbol}/USDT\")\n        \n        return symbols[:limit]\n        \n    except Exception as e:\n        logger.error(f\"Failed to get top crypto symbols: {e}\")\n        return []\n\n\ndef create_sample_dataset(\n    db_path: str = \"crypto_data.db\",\n    symbols: Optional[List[str]] = None,\n    days: int = 365\n) -> None:\n    \"\"\"\n    Create a sample crypto dataset for testing and development.\n    \n    Args:\n        db_path: Path to DuckDB database file\n        symbols: List of symbols to fetch (if None, uses top 10)\n        days: Number of days of historical data\n    \"\"\"\n    if symbols is None:\n        symbols = get_top_crypto_symbols(10)\n    \n    # Calculate time range\n    end_time = int(dt.datetime.now().timestamp() * 1000)\n    start_time = end_time - (days * 24 * 60 * 60 * 1000)\n    \n    logger.info(f\"Creating sample dataset with {len(symbols)} symbols\")\n    \n    for symbol in symbols:\n        try:\n            # Fetch OHLCV data\n            df = fetch_ohlcv(symbol, start_time, end_time, timeframe=\"1h\")\n            \n            if not df.is_empty():\n                load_to_duck(db_path, df, \"ohlcv\", mode=\"append\")\n                \n        except Exception as e:\n            logger.warning(f\"Skipped {symbol}: {e}\")\n            continue\n    \n    logger.info(f\"Sample dataset created at {db_path}\")\n\n\nif __name__ == \"__main__\":\n    # Example usage\n    logging.basicConfig(level=logging.INFO)\n    create_sample_dataset()",
  "src/crypto_dp/data/__init__.py": "# Data ingestion and validation module",
  "src/crypto_dp/rl/__init__.py": "# Reinforcement learning agent loop module",
  "src/crypto_dp/rl/agent.py": "\"\"\"\nReinforcement learning agent for crypto trading.\n\nThis module implements the core RL loop for training and deploying\ncrypto trading agents with built-in risk management and execution\nsimulation capabilities.\n\"\"\"\n\nfrom typing import Dict, Any, Tuple, Optional, List, NamedTuple\nimport logging\nfrom enum import Enum\nfrom dataclasses import dataclass\nimport time\n\nimport jax\nimport jax.numpy as jnp\nimport equinox as eqx\nimport optax\nfrom jax import jit, vmap\n\n\nlogger = logging.getLogger(__name__)\n\n\nclass TradingAction(NamedTuple):\n    \"\"\"Trading action with position sizes and metadata.\"\"\"\n    positions: jnp.ndarray  # Position sizes for each asset\n    confidence: float       # Confidence in the action\n    timestamp: float       # Action timestamp\n\n\nclass MarketState(NamedTuple):\n    \"\"\"Market state representation.\"\"\"\n    prices: jnp.ndarray          # Current asset prices\n    features: jnp.ndarray        # Market features\n    portfolio: jnp.ndarray       # Current portfolio weights\n    cash: float                  # Available cash\n    timestamp: float             # State timestamp\n\n\nclass RiskLevel(Enum):\n    \"\"\"Risk level indicators for position sizing.\"\"\"\n    LOW = 0.5\n    MEDIUM = 1.0\n    HIGH = 1.5\n    CRITICAL = 2.0\n\n\n@dataclass\nclass TradingEnvironment:\n    \"\"\"\n    Crypto trading environment for RL training.\n    \n    Simulates realistic trading conditions including:\n    - Transaction costs\n    - Slippage\n    - Latency\n    - Market impact\n    \"\"\"\n    \n    symbols: List[str]\n    initial_cash: float = 100000.0\n    transaction_cost: float = 0.001  # 0.1%\n    slippage_rate: float = 0.0005    # 0.05%\n    max_position_size: float = 0.2   # 20% max per asset\n    lookback_window: int = 100\n    \n    def __post_init__(self):\n        self.n_assets = len(self.symbols)\n        self.reset()\n    \n    def reset(self) -> MarketState:\n        \"\"\"Reset environment to initial state.\"\"\"\n        self.cash = self.initial_cash\n        self.positions = jnp.zeros(self.n_assets)\n        self.portfolio_value = self.initial_cash\n        self.step_count = 0\n        \n        return self._get_state()\n    \n    def _get_state(self) -> MarketState:\n        \"\"\"Get current market state.\"\"\"\n        # Placeholder - in practice, would fetch real market data\n        prices = jnp.ones(self.n_assets)  # Dummy prices\n        features = jnp.zeros(20)          # Dummy features\n        portfolio_weights = self.positions / jnp.sum(jnp.abs(self.positions) + 1e-8)\n        \n        return MarketState(\n            prices=prices,\n            features=features,\n            portfolio=portfolio_weights,\n            cash=self.cash,\n            timestamp=time.time()\n        )\n    \n    def step(self, action: TradingAction) -> Tuple[MarketState, float, bool, Dict[str, Any]]:\n        \"\"\"\n        Execute trading action and return new state.\n        \n        Args:\n            action: Trading action to execute\n        \n        Returns:\n            new_state, reward, done, info\n        \"\"\"\n        # Simulate transaction costs and slippage\n        new_positions = action.positions\n        position_change = jnp.abs(new_positions - self.positions)\n        \n        # Calculate transaction costs\n        transaction_cost = jnp.sum(position_change) * self.transaction_cost\n        \n        # Calculate slippage (simplified)\n        slippage = jnp.sum(position_change) * self.slippage_rate\n        \n        # Update positions\n        self.positions = new_positions\n        \n        # Calculate reward (placeholder - would use actual P&L)\n        # For now, use negative of costs as immediate reward\n        reward = -(transaction_cost + slippage)\n        \n        # Update cash (simplified)\n        self.cash -= transaction_cost + slippage\n        \n        self.step_count += 1\n        \n        # Environment termination conditions\n        done = (\n            self.step_count >= 1000 or  # Max steps\n            self.cash < 0 or            # Margin call\n            jnp.any(jnp.abs(self.positions) > self.max_position_size)  # Position limit\n        )\n        \n        info = {\n            'transaction_cost': transaction_cost,\n            'slippage': slippage,\n            'portfolio_value': self.portfolio_value,\n            'step_count': self.step_count\n        }\n        \n        return self._get_state(), float(reward), done, info\n\n\nclass CryptoTradingAgent(eqx.Module):\n    \"\"\"\n    Deep RL agent for crypto trading using JAX/Equinox.\n    \"\"\"\n    \n    policy_network: eqx.nn.MLP\n    value_network: eqx.nn.MLP\n    risk_module: eqx.nn.MLP\n    \n    def __init__(\n        self,\n        state_dim: int,\n        action_dim: int,\n        hidden_dims: Tuple[int, ...] = (256, 128, 64),\n        key: Optional[jax.random.PRNGKey] = None\n    ):\n        \"\"\"\n        Initialize crypto trading agent.\n        \n        Args:\n            state_dim: Dimension of state space\n            action_dim: Dimension of action space (number of assets)\n            hidden_dims: Hidden layer dimensions\n            key: Random key for initialization\n        \"\"\"\n        if key is None:\n            key = jax.random.PRNGKey(42)\n        \n        keys = jax.random.split(key, 3)\n        \n        # Policy network (outputs raw position scores)\n        self.policy_network = eqx.nn.MLP(\n            in_size=state_dim,\n            out_size=action_dim,\n            width_size=hidden_dims[0],\n            depth=len(hidden_dims),\n            key=keys[0]\n        )\n        \n        # Value network (state value estimation)\n        self.value_network = eqx.nn.MLP(\n            in_size=state_dim,\n            out_size=1,\n            width_size=hidden_dims[0] // 2,\n            depth=len(hidden_dims) - 1,\n            key=keys[1]\n        )\n        \n        # Risk assessment module\n        self.risk_module = eqx.nn.MLP(\n            in_size=state_dim,\n            out_size=4,  # Risk scores for different factors\n            width_size=hidden_dims[0] // 4,\n            depth=2,\n            key=keys[2]\n        )\n    \n    def __call__(self, state: jnp.ndarray) -> TradingAction:\n        \"\"\"Generate trading action from current state.\"\"\"\n        return self.get_action(state)\n    \n    def get_action(\n        self,\n        state: jnp.ndarray,\n        deterministic: bool = False,\n        key: Optional[jax.random.PRNGKey] = None\n    ) -> TradingAction:\n        \"\"\"\n        Generate trading action with risk-adjusted position sizing.\n        \n        Args:\n            state: Current market state\n            deterministic: Whether to use deterministic policy\n            key: Random key for stochastic actions\n        \n        Returns:\n            Trading action\n        \"\"\"\n        # Get raw policy scores\n        raw_scores = self.policy_network(state)\n        \n        # Risk assessment\n        risk_scores = self.risk_module(state)\n        risk_level = jnp.mean(jnp.abs(risk_scores))\n        \n        # Risk-adjusted position sizing\n        max_position = 0.2 / (1.0 + risk_level)  # Lower max when risk is high\n        \n        if deterministic:\n            # Deterministic action (for evaluation)\n            positions = jnp.tanh(raw_scores) * max_position\n        else:\n            # Stochastic action (for exploration)\n            if key is None:\n                key = jax.random.PRNGKey(int(time.time()))\n            \n            noise = jax.random.normal(key, raw_scores.shape) * 0.1\n            noisy_scores = raw_scores + noise\n            positions = jnp.tanh(noisy_scores) * max_position\n        \n        # Ensure positions sum to approximately zero (market neutral)\n        positions = positions - jnp.mean(positions)\n        \n        # Calculate confidence based on score magnitude\n        confidence = float(jnp.mean(jnp.abs(raw_scores)))\n        \n        return TradingAction(\n            positions=positions,\n            confidence=confidence,\n            timestamp=time.time()\n        )\n    \n    def get_value(self, state: jnp.ndarray) -> float:\n        \"\"\"Estimate state value.\"\"\"\n        value = self.value_network(state)\n        return float(value.squeeze())\n\n\nclass RiskManager:\n    \"\"\"\n    Risk management system with configurable limits and kill switches.\n    \"\"\"\n    \n    def __init__(\n        self,\n        max_drawdown: float = 0.08,\n        max_daily_loss: float = 0.02,\n        max_position_size: float = 0.2,\n        max_leverage: float = 2.0,\n        volatility_threshold: float = 2.0\n    ):\n        self.max_drawdown = max_drawdown\n        self.max_daily_loss = max_daily_loss\n        self.max_position_size = max_position_size\n        self.max_leverage = max_leverage\n        self.volatility_threshold = volatility_threshold\n        \n        # Risk state tracking\n        self.peak_portfolio_value = 100000.0\n        self.daily_start_value = 100000.0\n        self.last_reset_time = time.time()\n    \n    def check_risk_limits(\n        self,\n        action: TradingAction,\n        portfolio_value: float,\n        volatility: float\n    ) -> Tuple[bool, List[str], TradingAction]:\n        \"\"\"\n        Check if action violates risk limits.\n        \n        Args:\n            action: Proposed trading action\n            portfolio_value: Current portfolio value\n            volatility: Current portfolio volatility\n        \n        Returns:\n            (is_safe, warnings, modified_action)\n        \"\"\"\n        warnings = []\n        modified_positions = action.positions.copy()\n        \n        # Update peak value\n        self.peak_portfolio_value = max(self.peak_portfolio_value, portfolio_value)\n        \n        # Check drawdown\n        current_drawdown = (self.peak_portfolio_value - portfolio_value) / self.peak_portfolio_value\n        if current_drawdown > self.max_drawdown:\n            warnings.append(f\"Max drawdown exceeded: {current_drawdown:.2%}\")\n            # Force flat positions\n            modified_positions = jnp.zeros_like(modified_positions)\n        \n        # Check daily loss\n        daily_loss = (self.daily_start_value - portfolio_value) / self.daily_start_value\n        if daily_loss > self.max_daily_loss:\n            warnings.append(f\"Max daily loss exceeded: {daily_loss:.2%}\")\n            # Reduce position sizes\n            modified_positions *= 0.5\n        \n        # Check position sizes\n        max_pos = jnp.max(jnp.abs(modified_positions))\n        if max_pos > self.max_position_size:\n            warnings.append(f\"Position size too large: {max_pos:.2%}\")\n            # Scale down positions\n            scale_factor = self.max_position_size / max_pos\n            modified_positions *= scale_factor\n        \n        # Check leverage\n        total_exposure = jnp.sum(jnp.abs(modified_positions))\n        if total_exposure > self.max_leverage:\n            warnings.append(f\"Leverage too high: {total_exposure:.2f}x\")\n            # Scale down to max leverage\n            modified_positions *= self.max_leverage / total_exposure\n        \n        # Check volatility\n        if volatility > self.volatility_threshold:\n            warnings.append(f\"High volatility detected: {volatility:.2f}\")\n            # Reduce position sizes in high volatility\n            modified_positions *= 0.7\n        \n        # Check for daily reset\n        current_time = time.time()\n        if current_time - self.last_reset_time > 24 * 3600:  # 24 hours\n            self.daily_start_value = portfolio_value\n            self.last_reset_time = current_time\n        \n        is_safe = len(warnings) == 0\n        \n        modified_action = TradingAction(\n            positions=modified_positions,\n            confidence=action.confidence * (0.5 if warnings else 1.0),\n            timestamp=action.timestamp\n        )\n        \n        return is_safe, warnings, modified_action\n\n\ndef train_agent(\n    agent: CryptoTradingAgent,\n    env: TradingEnvironment,\n    n_episodes: int = 1000,\n    learning_rate: float = 3e-4,\n    gamma: float = 0.99,\n    verbose: bool = True\n) -> Tuple[CryptoTradingAgent, Dict[str, List[float]]]:\n    \"\"\"\n    Train the crypto trading agent using a simple policy gradient method.\n    \n    Args:\n        agent: CryptoTradingAgent to train\n        env: Trading environment\n        n_episodes: Number of training episodes\n        learning_rate: Learning rate for optimization\n        gamma: Discount factor\n        verbose: Whether to print training progress\n    \n    Returns:\n        Trained agent and training history\n    \"\"\"\n    optimizer = optax.adam(learning_rate)\n    opt_state = optimizer.init(agent)\n    \n    history = {\n        'episode_rewards': [],\n        'episode_lengths': [],\n        'policy_losses': [],\n        'value_losses': []\n    }\n    \n    for episode in range(n_episodes):\n        # Reset environment\n        state = env.reset()\n        episode_reward = 0.0\n        episode_length = 0\n        \n        # Collect episode data\n        states, actions, rewards = [], [], []\n        \n        done = False\n        while not done:\n            # Get current state as array\n            state_array = jnp.concatenate([\n                state.prices,\n                state.features,\n                state.portfolio,\n                jnp.array([state.cash])\n            ])\n            \n            # Get action from agent\n            action = agent.get_action(state_array, deterministic=False)\n            \n            # Take step in environment\n            next_state, reward, done, info = env.step(action)\n            \n            # Store experience\n            states.append(state_array)\n            actions.append(action.positions)\n            rewards.append(reward)\n            \n            # Update for next iteration\n            state = next_state\n            episode_reward += reward\n            episode_length += 1\n        \n        # Convert to arrays\n        states = jnp.stack(states)\n        actions = jnp.stack(actions)\n        rewards = jnp.array(rewards)\n        \n        # Compute returns (simplified)\n        returns = jnp.zeros_like(rewards)\n        discounted_sum = 0.0\n        for t in range(len(rewards) - 1, -1, -1):\n            discounted_sum = rewards[t] + gamma * discounted_sum\n            returns = returns.at[t].set(discounted_sum)\n        \n        # Policy gradient update (simplified)\n        def policy_loss_fn(agent):\n            values = vmap(agent.get_value)(states)\n            advantages = returns - values\n            \n            # Policy loss (simplified REINFORCE)\n            policy_scores = vmap(agent.policy_network)(states)\n            log_probs = -0.5 * jnp.sum((policy_scores - actions) ** 2, axis=1)\n            policy_loss = -jnp.mean(log_probs * advantages)\n            \n            # Value loss\n            value_loss = jnp.mean((values - returns) ** 2)\n            \n            return policy_loss + value_loss\n        \n        # Compute gradients and update\n        loss, grads = eqx.filter_value_and_grad(policy_loss_fn)(agent)\n        updates, opt_state = optimizer.update(grads, opt_state)\n        agent = eqx.apply_updates(agent, updates)\n        \n        # Record history\n        history['episode_rewards'].append(float(episode_reward))\n        history['episode_lengths'].append(episode_length)\n        history['policy_losses'].append(float(loss))\n        \n        if verbose and episode % 100 == 0:\n            avg_reward = jnp.mean(jnp.array(history['episode_rewards'][-100:]))\n            logger.info(f\"Episode {episode}: avg_reward={avg_reward:.4f}, loss={loss:.6f}\")\n    \n    return agent, history\n\n\nif __name__ == \"__main__\":\n    # Example usage\n    logging.basicConfig(level=logging.INFO)\n    \n    # Create environment\n    symbols = ['BTC/USDT', 'ETH/USDT', 'BNB/USDT']\n    env = TradingEnvironment(symbols)\n    \n    # Create agent\n    state_dim = len(symbols) + 20 + len(symbols) + 1  # prices + features + portfolio + cash\n    action_dim = len(symbols)\n    \n    agent = CryptoTradingAgent(\n        state_dim=state_dim,\n        action_dim=action_dim,\n        key=jax.random.PRNGKey(42)\n    )\n    \n    # Quick test\n    state = env.reset()\n    state_array = jnp.concatenate([\n        state.prices,\n        state.features,\n        state.portfolio,\n        jnp.array([state.cash])\n    ])\n    \n    action = agent.get_action(state_array)\n    logger.info(f\"Generated action: positions={action.positions}, confidence={action.confidence}\")\n    \n    # Risk manager test\n    risk_manager = RiskManager()\n    is_safe, warnings, modified_action = risk_manager.check_risk_limits(\n        action, 100000.0, 0.5\n    )\n    \n    logger.info(f\"Risk check: safe={is_safe}, warnings={warnings}\")\n    logger.info(\"Crypto trading agent initialized successfully\")"
}